{
  "atRules": [
    {
      "name": "@-webkit-keyframes",
      "href": "https://compat.spec.whatwg.org/#at-ruledef--webkit-keyframes",
      "descriptors": [],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "@media",
      "prose": "The @media rule is a conditional group rule whose condition is a media query. Its syntax is:",
      "href": "https://drafts.csswg.org/css-conditional-3/#at-ruledef-media",
      "descriptors": [
        {
          "name": "-webkit-device-pixel-ratio",
          "href": "https://compat.spec.whatwg.org/#descdef-media--webkit-device-pixel-ratio",
          "for": "@media",
          "value": "<number>",
          "type": "range"
        },
        {
          "name": "-webkit-transform-3d",
          "href": "https://compat.spec.whatwg.org/#descdef-media--webkit-transform-3d",
          "for": "@media",
          "value": "<mq-boolean>",
          "type": "discrete"
        },
        {
          "name": "shape",
          "href": "https://drafts.csswg.org/css-round-display-1/#descdef-media-shape",
          "for": "@media",
          "value": "rect | round",
          "type": "discrete"
        },
        {
          "name": "width",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-width",
          "for": "@media",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "height",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-height",
          "for": "@media",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "aspect-ratio",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-aspect-ratio",
          "for": "@media",
          "value": "<ratio>",
          "type": "range"
        },
        {
          "name": "orientation",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-orientation",
          "for": "@media",
          "value": "portrait | landscape",
          "type": "discrete"
        },
        {
          "name": "resolution",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-resolution",
          "for": "@media",
          "value": "<resolution> | infinite",
          "type": "range"
        },
        {
          "name": "scan",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-scan",
          "for": "@media",
          "value": "interlace | progressive",
          "type": "discrete"
        },
        {
          "name": "grid",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-grid",
          "for": "@media",
          "value": "<mq-boolean>",
          "type": "discrete"
        },
        {
          "name": "update",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-update",
          "for": "@media",
          "value": "none | slow | fast",
          "type": "discrete"
        },
        {
          "name": "overflow-block",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-overflow-block",
          "for": "@media",
          "value": "none | scroll | paged",
          "type": "discrete"
        },
        {
          "name": "overflow-inline",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-overflow-inline",
          "for": "@media",
          "value": "none | scroll",
          "type": "discrete"
        },
        {
          "name": "color",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-color",
          "for": "@media",
          "value": "<integer>",
          "type": "range"
        },
        {
          "name": "color-index",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-color-index",
          "for": "@media",
          "value": "<integer>",
          "type": "range"
        },
        {
          "name": "monochrome",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-monochrome",
          "for": "@media",
          "value": "<integer>",
          "type": "range"
        },
        {
          "name": "color-gamut",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-color-gamut",
          "for": "@media",
          "value": "srgb | p3 | rec2020",
          "type": "discrete"
        },
        {
          "name": "pointer",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-pointer",
          "for": "@media",
          "value": "none | coarse | fine",
          "type": "discrete"
        },
        {
          "name": "hover",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-hover",
          "for": "@media",
          "value": "none | hover",
          "type": "discrete"
        },
        {
          "name": "any-pointer",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-any-pointer",
          "for": "@media",
          "value": "none | coarse | fine",
          "type": "discrete"
        },
        {
          "name": "any-hover",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-any-hover",
          "for": "@media",
          "value": "none | hover",
          "type": "discrete"
        },
        {
          "name": "device-width",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-device-width",
          "for": "@media",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "device-height",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-device-height",
          "for": "@media",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "device-aspect-ratio",
          "href": "https://drafts.csswg.org/mediaqueries-4/#descdef-media-device-aspect-ratio",
          "for": "@media",
          "value": "<ratio>",
          "type": "range"
        }
      ],
      "value": "@media <media-query-list> { <rule-list> }",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "@position-try",
      "prose": "The @position-try rule defines a position option with a given name, specifying one or more sets of positioning properties that can be applied to a box via position-try-fallbacks,",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#at-ruledef-position-try",
      "descriptors": [],
      "value": "@position-try <dashed-ident> { <declaration-list> }",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "@keyframes",
      "prose": "Keyframes are specified using the @keyframes at-rule, defined as follows:",
      "href": "https://drafts.csswg.org/css-animations-1/#at-ruledef-keyframes",
      "descriptors": [],
      "value": "@keyframes <keyframes-name> { <qualified-rule-list> }",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "@scope",
      "prose": "Scoped styles are described in CSS using the @scope block at-rule, which declares a scoping root and optional scoping limits associated with a set of style rules.",
      "href": "https://drafts.csswg.org/css-cascade-6/#at-ruledef-scope",
      "descriptors": [],
      "value": "@scope [(<scope-start>)]? [to (<scope-end>)]? { <block-contents> }",
      "spec": {
        "shortname": "css-cascade-6",
        "currentSpec": false
      }
    },
    {
      "name": "@import",
      "prose": "The @import rule allows users to import style rules from other style sheets. If an @import rule refers to a valid stylesheet, user agents must treat the contents of the stylesheet as if they were written in place of the @import rule, with two exceptions:",
      "href": "https://drafts.csswg.org/css-cascade-5/#at-ruledef-import",
      "descriptors": [],
      "value": "@import [ <url> | <string> ] [ layer | layer(<layer-name>) ]? <import-conditions> ;",
      "spec": {
        "shortname": "css-cascade",
        "currentSpec": true
      }
    },
    {
      "name": "@layer",
      "prose": "The @layer rule declares a cascade layer, with the option to assign style rules.",
      "href": "https://drafts.csswg.org/css-cascade-5/#at-ruledef-layer",
      "descriptors": [],
      "value": "@layer <layer-name>? { <rule-list> } | @layer <layer-name>#;",
      "spec": {
        "shortname": "css-cascade",
        "currentSpec": true
      }
    },
    {
      "name": "@color-profile",
      "prose": "The @color-profile rule defines and names a color profile which can later be used in the color() function to specify a color.",
      "href": "https://drafts.csswg.org/css-color-5/#at-ruledef-profile",
      "descriptors": [
        {
          "name": "src",
          "href": "https://drafts.csswg.org/css-color-5/#descdef-color-profile-src",
          "for": "@color-profile",
          "value": "<url>",
          "initial": "n/a"
        },
        {
          "name": "rendering-intent",
          "href": "https://drafts.csswg.org/css-color-5/#descdef-color-profile-rendering-intent",
          "for": "@color-profile",
          "value": "relative-colorimetric | absolute-colorimetric | perceptual | saturation",
          "initial": "relative-colorimetric"
        },
        {
          "name": "components",
          "href": "https://drafts.csswg.org/css-color-5/#descdef-color-profile-components",
          "for": "@color-profile",
          "value": "<ident>#",
          "initial": "n/a"
        }
      ],
      "value": "@color-profile [<dashed-ident> | device-cmyk] {\n  [ src: [ <url> ]; ] ||\n  [ rendering-intent: [ relative-colorimetric | absolute-colorimetric | perceptual | saturation ]; ] ||\n  [ components: [ <ident># ]; ]\n}",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "@when",
      "prose": "The @when at-rule is a conditional group rule that generalizes the individual conditional group rules such as @media and @supports. It is defined as:",
      "href": "https://drafts.csswg.org/css-conditional-5/#at-ruledef-when",
      "descriptors": [],
      "value": "@when <boolean-condition> { <rule-list> }",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "@else",
      "prose": "The @else rule is a conditional group rule used to form conditional rule chains, which associate multiple conditional rules and guarantee that only the first one that matches will evaluate its condition as true. It is defined as:",
      "href": "https://drafts.csswg.org/css-conditional-5/#at-ruledef-else",
      "descriptors": [],
      "value": "@else <boolean-condition>? { <rule-list> }",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "@container",
      "prose": "The @container rule is a conditional group rule whose condition contains a container query, which is a boolean combination of container size queries and/or container style queries. Style declarations within the <block-contents> block of an @container rule are filtered by its condition to only match when the container query is true for their element’s query container.",
      "href": "https://drafts.csswg.org/css-conditional-5/#at-ruledef-container",
      "descriptors": [
        {
          "name": "width",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-width",
          "for": "@container",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "height",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-height",
          "for": "@container",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "inline-size",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-inline-size",
          "for": "@container",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "block-size",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-block-size",
          "for": "@container",
          "value": "<length>",
          "type": "range"
        },
        {
          "name": "aspect-ratio",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-aspect-ratio",
          "for": "@container",
          "value": "<ratio>",
          "type": "range"
        },
        {
          "name": "orientation",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-orientation",
          "for": "@container",
          "value": "portrait | landscape",
          "type": "discrete"
        },
        {
          "name": "stuck",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-stuck",
          "for": "@container",
          "value": "none | top | right | bottom | left | block-start | inline-start | block-end | inline-end",
          "type": "discrete"
        },
        {
          "name": "snapped",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-snapped",
          "for": "@container",
          "value": "none | x | y | block | inline | both",
          "type": "discrete"
        },
        {
          "name": "scrollable",
          "href": "https://drafts.csswg.org/css-conditional-5/#descdef-container-scrollable",
          "for": "@container",
          "value": "none | top | right | bottom | left | block-start | inline-start | block-end | inline-end | x | y | block | inline",
          "type": "discrete"
        }
      ],
      "value": "@container <container-condition># { <block-contents> }",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "@supports",
      "prose": "The @supports rule is a conditional group rule whose condition tests whether the user agent supports CSS property:value pairs. Authors can use it to write style sheets that use new features when available but degrade gracefully when those features are not supported. These queries are called CSS feature queries or (colloquially) supports queries.",
      "href": "https://drafts.csswg.org/css-conditional-3/#at-ruledef-supports",
      "descriptors": [],
      "value": "@supports <supports-condition> { <rule-list> }",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "@counter-style",
      "prose": "The @counter-style rule allows authors to define a custom counter style. The components of a counter style are specified by descriptors in the @counter-style rule. The algorithm is specified implicitly by a combination of the system, symbols, and additive-symbols properties.",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#at-ruledef-counter-style",
      "descriptors": [
        {
          "name": "system",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-system",
          "for": "@counter-style",
          "value": "cyclic | numeric | alphabetic | symbolic | additive | [fixed <integer>?] | [ extends <counter-style-name> ]",
          "initial": "symbolic"
        },
        {
          "name": "negative",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-negative",
          "for": "@counter-style",
          "value": "<symbol> <symbol>?",
          "initial": "\"-\""
        },
        {
          "name": "prefix",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-prefix",
          "for": "@counter-style",
          "value": "<symbol>",
          "initial": "\"\""
        },
        {
          "name": "suffix",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-suffix",
          "for": "@counter-style",
          "value": "<symbol>",
          "initial": "\". \""
        },
        {
          "name": "range",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-range",
          "for": "@counter-style",
          "value": "[ [ <integer> | infinite ]{2} ]# | auto",
          "initial": "auto"
        },
        {
          "name": "pad",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-pad",
          "for": "@counter-style",
          "value": "<integer [0,∞]> && <symbol>",
          "initial": "0 \"\""
        },
        {
          "name": "fallback",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-fallback",
          "for": "@counter-style",
          "value": "<counter-style-name>",
          "initial": "decimal"
        },
        {
          "name": "symbols",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-symbols",
          "for": "@counter-style",
          "value": "<symbol>+",
          "initial": "n/a"
        },
        {
          "name": "additive-symbols",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-additive-symbols",
          "for": "@counter-style",
          "value": "[ <integer [0,∞]> && <symbol> ]#",
          "initial": "n/a"
        },
        {
          "name": "speak-as",
          "href": "https://drafts.csswg.org/css-counter-styles-3/#descdef-counter-style-speak-as",
          "for": "@counter-style",
          "value": "auto | bullets | numbers | words | spell-out | <counter-style-name>",
          "initial": "auto"
        }
      ],
      "value": "@counter-style <counter-style-name> {\n  [ system: [ cyclic | numeric | alphabetic | symbolic | additive | [fixed <integer>?] | [ extends <counter-style-name> ] ]; ] ||\n  [ negative: [ <symbol> <symbol>? ]; ] ||\n  [ prefix: [ <symbol> ]; ] ||\n  [ suffix: [ <symbol> ]; ] ||\n  [ range: [ [ [ <integer> | infinite ]{2} ]# | auto ]; ] ||\n  [ pad: [ <integer [0,∞]> && <symbol> ]; ] ||\n  [ fallback: [ <counter-style-name> ]; ] ||\n  [ symbols: [ <symbol>+ ]; ] ||\n  [ additive-symbols: [ [ <integer [0,∞]> && <symbol> ]# ]; ] ||\n  [ speak-as: [ auto | bullets | numbers | words | spell-out | <counter-style-name> ]; ]\n}",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "@custom-selector",
      "href": "https://drafts.csswg.org/css-extensions-1/#at-ruledef-custom-selector",
      "descriptors": [],
      "value": "@custom-selector <custom-selector> <selector-list> ;",
      "spec": {
        "shortname": "css-extensions",
        "currentSpec": true
      }
    },
    {
      "name": "@font-face",
      "href": "https://drafts.csswg.org/css-fonts-4/#at-font-face-rule",
      "descriptors": [
        {
          "name": "font-family",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-family",
          "for": "@font-face",
          "value": "<family-name>",
          "initial": "N/A"
        },
        {
          "name": "src",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-src",
          "for": "@font-face",
          "value": "<font-src-list>",
          "initial": "N/A"
        },
        {
          "name": "font-style",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-style",
          "for": "@font-face",
          "value": "auto | normal | italic | left | right | oblique [ <angle [-90deg,90deg]>{1,2} ]?",
          "initial": "auto"
        },
        {
          "name": "font-weight",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-weight",
          "for": "@font-face",
          "value": "auto | <font-weight-absolute>{1,2}",
          "initial": "auto"
        },
        {
          "name": "font-width",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-width",
          "for": "@font-face",
          "value": "auto | <'font-width'>{1,2}",
          "initial": "auto"
        },
        {
          "name": "unicode-range",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-unicode-range",
          "for": "@font-face",
          "value": "<unicode-range-token>#",
          "initial": "U+0-10FFFF"
        },
        {
          "name": "font-feature-settings",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-feature-settings",
          "for": "@font-face",
          "value": "normal | <feature-tag-value>#",
          "initial": "normal"
        },
        {
          "name": "font-variation-settings",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-variation-settings",
          "for": "@font-face",
          "value": "normal | [ <string> <number>]#",
          "initial": "normal"
        },
        {
          "name": "font-named-instance",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-named-instance",
          "for": "@font-face",
          "value": "auto | <string>",
          "initial": "auto"
        },
        {
          "name": "font-display",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-display",
          "for": "@font-face",
          "value": "auto | block | swap | fallback | optional",
          "initial": "auto"
        },
        {
          "name": "font-language-override",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-font-language-override",
          "for": "@font-face",
          "value": "normal | <string>",
          "initial": "normal"
        },
        {
          "name": "ascent-override",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-ascent-override",
          "for": "@font-face",
          "value": "normal | <percentage [0,∞]>",
          "initial": "normal"
        },
        {
          "name": "descent-override",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-descent-override",
          "for": "@font-face",
          "value": "normal | <percentage [0,∞]>",
          "initial": "normal"
        },
        {
          "name": "line-gap-override",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-face-line-gap-override",
          "for": "@font-face",
          "value": "normal | <percentage [0,∞]>",
          "initial": "normal"
        }
      ],
      "value": "@font-face {\n  [ font-family: [ <family-name> ]; ] ||\n  [ src: [ <font-src-list> ]; ] ||\n  [ font-style: [ auto | normal | italic | left | right | oblique [ <angle [-90deg,90deg]>{1,2} ]? ]; ] ||\n  [ font-weight: [ auto | <font-weight-absolute>{1,2} ]; ] ||\n  [ font-width: [ auto | <'font-width'>{1,2} ]; ] ||\n  [ unicode-range: [ <unicode-range-token># ]; ] ||\n  [ font-feature-settings: [ normal | <feature-tag-value># ]; ] ||\n  [ font-variation-settings: [ normal | [ <string> <number>]# ]; ] ||\n  [ font-named-instance: [ auto | <string> ]; ] ||\n  [ font-display: [ auto | block | swap | fallback | optional ]; ] ||\n  [ font-language-override: [ normal | <string> ]; ] ||\n  [ ascent-override: [ normal | <percentage [0,∞]> ]; ] ||\n  [ descent-override: [ normal | <percentage [0,∞]> ]; ] ||\n  [ line-gap-override: [ normal | <percentage [0,∞]> ]; ]\n}",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "@font-feature-values",
      "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values",
      "descriptors": [
        {
          "name": "font-display",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-feature-values-font-display",
          "for": "@font-feature-values",
          "value": "auto | block | swap | fallback | optional",
          "initial": "auto"
        },
        {
          "name": "@stylistic",
          "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values-stylistic",
          "type": "at-rule",
          "for": "@font-feature-values",
          "value": "@stylistic { <declaration-list> }"
        },
        {
          "name": "@historical-forms",
          "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values-historical-forms",
          "type": "at-rule",
          "for": "@font-feature-values",
          "value": "@historical-forms { <declaration-list> }"
        },
        {
          "name": "@styleset",
          "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values-styleset",
          "type": "at-rule",
          "for": "@font-feature-values",
          "value": "@styleset { <declaration-list> }"
        },
        {
          "name": "@character-variant",
          "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values-character-variant",
          "type": "at-rule",
          "for": "@font-feature-values",
          "value": "@character-variant { <declaration-list> }"
        },
        {
          "name": "@swash",
          "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values-swash",
          "type": "at-rule",
          "for": "@font-feature-values",
          "value": "@swash { <declaration-list> }"
        },
        {
          "name": "@ornaments",
          "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values-ornaments",
          "type": "at-rule",
          "for": "@font-feature-values",
          "value": "@ornaments { <declaration-list> }"
        },
        {
          "name": "@annotation",
          "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-feature-values-annotation",
          "type": "at-rule",
          "for": "@font-feature-values",
          "value": "@annotation { <declaration-list> }"
        }
      ],
      "value": "@font-feature-values <family-name># {\n  [ font-display: [ auto | block | swap | fallback | optional ]; ] ||\n  [ @stylistic { <declaration-list> } ] ||\n  [ @historical-forms { <declaration-list> } ] ||\n  [ @styleset { <declaration-list> } ] ||\n  [ @character-variant { <declaration-list> } ] ||\n  [ @swash { <declaration-list> } ] ||\n  [ @ornaments { <declaration-list> } ] ||\n  [ @annotation { <declaration-list> } ]\n}",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "@font-palette-values",
      "prose": "The @font-palette-values rule defines a color palette and associates that color palette with a specific font. This allows a web author to select arbitrary <color>s to use inside a color font rather than being limited to the preexisting palettes inside font files.",
      "href": "https://drafts.csswg.org/css-fonts-4/#at-ruledef-font-palette-values",
      "descriptors": [
        {
          "name": "font-family",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-palette-values-font-family",
          "for": "@font-palette-values",
          "value": "<family-name>#",
          "initial": "N/A"
        },
        {
          "name": "base-palette",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-palette-values-base-palette",
          "for": "@font-palette-values",
          "value": "light | dark | <integer [0,∞]>",
          "initial": "N/A"
        },
        {
          "name": "override-colors",
          "href": "https://drafts.csswg.org/css-fonts-4/#descdef-font-palette-values-override-colors",
          "for": "@font-palette-values",
          "value": "[ <integer [0,∞]> <color> ]#",
          "initial": "N/A"
        }
      ],
      "value": "@font-palette-values <dashed-ident> {\n  [ font-family: [ <family-name># ]; ] ||\n  [ base-palette: [ light | dark | <integer [0,∞]> ]; ] ||\n  [ override-colors: [ [ <integer [0,∞]> <color> ]# ]; ]\n}",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "@function",
      "href": "https://drafts.csswg.org/css-mixins-1/#at-ruledef-function",
      "descriptors": [
        {
          "name": "result",
          "href": "https://drafts.csswg.org/css-mixins-1/#descdef-function-result",
          "for": "@function",
          "value": "<declaration-value>?",
          "initial": "n/a (see prose)"
        }
      ],
      "value": "@function <function-token> <function-parameter>#? ) [ returns <css-type> ]? {\n  [ result: [ <declaration-value>? ]; ]\n}",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      }
    },
    {
      "name": "@namespace",
      "prose": "The @namespace at-rule declares a namespace prefix and associates it with a given namespace name (a string). This namespace prefix can then be used in namespace-qualified names such as the CSS qualified names defined below.",
      "href": "https://drafts.csswg.org/css-namespaces-3/#at-ruledef-namespace",
      "descriptors": [],
      "value": "@namespace <namespace-prefix>? [ <string> | <url> ] ;",
      "spec": {
        "shortname": "css-namespaces",
        "currentSpec": true
      }
    },
    {
      "name": "@page",
      "prose": "Authors can specify various aspects of a page box, such as its dimensions, orientation, and margins, within an @page rule. @page rules are allowed wherever rule-sets are allowed. An @page rule consists of the keyword @page, an optional comma-separated list of page selectors and a block of declarations (said to be in the page context). An @page rule can also contain other at-rules, interleaved between declarations. The current level of this specification only allows margin at-rules inside @page.",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-page",
      "descriptors": [
        {
          "name": "size",
          "href": "https://drafts.csswg.org/css-page-3/#descdef-page-size",
          "for": "@page",
          "value": "<length [0,∞]>{1,2} | auto | [ <page-size> || [ portrait | landscape ] ]",
          "initial": "auto",
          "computedValue": "specified value, with <length>s made absolute."
        },
        {
          "name": "page-orientation",
          "href": "https://drafts.csswg.org/css-page-3/#descdef-page-page-orientation",
          "for": "@page",
          "value": "upright | rotate-left | rotate-right",
          "initial": "upright",
          "computedValue": "as specified"
        },
        {
          "name": "marks",
          "href": "https://drafts.csswg.org/css-page-3/#descdef-page-marks",
          "for": "@page",
          "value": "none | [ crop || cross ]",
          "initial": "none",
          "computedValue": "as specified"
        },
        {
          "name": "bleed",
          "href": "https://drafts.csswg.org/css-page-3/#descdef-page-bleed",
          "for": "@page",
          "value": "auto | <length>",
          "initial": "auto",
          "computedValue": "as specified"
        }
      ],
      "value": "@page <page-selector-list>? {\n  [ size: [ <length [0,∞]>{1,2} | auto | [ <page-size> || [ portrait | landscape ] ] ]; ] ||\n  [ page-orientation: [ upright | rotate-left | rotate-right ]; ] ||\n  [ marks: [ none | [ crop || cross ] ]; ] ||\n  [ bleed: [ auto | <length> ]; ]\n}",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@top-left-corner",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-top-left-corner",
      "descriptors": [],
      "value": "@top-left-corner { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@top-left",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-top-left",
      "descriptors": [],
      "value": "@top-left { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@top-center",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-top-center",
      "descriptors": [],
      "value": "@top-center { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@top-right",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-top-right",
      "descriptors": [],
      "value": "@top-right { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@top-right-corner",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-top-right-corner",
      "descriptors": [],
      "value": "@top-right-corner { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@bottom-left-corner",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-bottom-left-corner",
      "descriptors": [],
      "value": "@bottom-left-corner { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@bottom-left",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-bottom-left",
      "descriptors": [],
      "value": "@bottom-left { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@bottom-center",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-bottom-center",
      "descriptors": [],
      "value": "@bottom-center { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@bottom-right",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-bottom-right",
      "descriptors": [],
      "value": "@bottom-right { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@bottom-right-corner",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-bottom-right-corner",
      "descriptors": [],
      "value": "@bottom-right-corner { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@left-top",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-left-top",
      "descriptors": [],
      "value": "@left-top { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@left-middle",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-left-middle",
      "descriptors": [],
      "value": "@left-middle { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@left-bottom",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-left-bottom",
      "descriptors": [],
      "value": "@left-bottom { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@right-top",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-right-top",
      "descriptors": [],
      "value": "@right-top { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@right-middle",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-right-middle",
      "descriptors": [],
      "value": "@right-middle { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@right-bottom",
      "href": "https://drafts.csswg.org/css-page-3/#at-ruledef-right-bottom",
      "descriptors": [],
      "value": "@right-bottom { <declaration-list> };",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "@property",
      "href": "https://drafts.css-houdini.org/css-properties-values-api-1/#at-ruledef-property",
      "descriptors": [
        {
          "name": "syntax",
          "href": "https://drafts.css-houdini.org/css-properties-values-api-1/#descdef-property-syntax",
          "for": "@property",
          "value": "<string>",
          "initial": "n/a (see prose)"
        },
        {
          "name": "inherits",
          "href": "https://drafts.css-houdini.org/css-properties-values-api-1/#descdef-property-inherits",
          "for": "@property",
          "value": "true | false",
          "initial": "n/a (see prose)"
        },
        {
          "name": "initial-value",
          "href": "https://drafts.css-houdini.org/css-properties-values-api-1/#descdef-property-initial-value",
          "for": "@property",
          "value": "<declaration-value>?",
          "initial": "the guaranteed-invalid value (but see prose)"
        }
      ],
      "value": "@property <custom-property-name> {\n  [ syntax: [ <string> ]; ] ||\n  [ inherits: [ true | false ]; ] ||\n  [ initial-value: [ <declaration-value>? ]; ]\n}",
      "spec": {
        "shortname": "css-properties-values-api",
        "currentSpec": true
      }
    },
    {
      "name": "@charset",
      "prose": "However, there is no actual at-rule named @charset. When a stylesheet is actually parsed, any occurrences of an @charset rule must be treated as an unrecognized rule, and thus dropped as invalid when the stylesheet is grammar-checked.",
      "href": "https://drafts.csswg.org/css-syntax-3/#at-ruledef-charset",
      "descriptors": [],
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "@starting-style",
      "prose": "The @starting-style rule is a grouping rule. The style rules inside it are used to establish styles to transition from, if the previous style change event did not establish a before-change style for the element whose styles are being computed.",
      "href": "https://drafts.csswg.org/css-transitions-2/#at-ruledef-starting-style",
      "descriptors": [],
      "spec": {
        "shortname": "css-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "@view-transition",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#at-view-transition-rule",
      "descriptors": [
        {
          "name": "navigation",
          "href": "https://drafts.csswg.org/css-view-transitions-2/#descdef-view-transition-navigation",
          "for": "@view-transition",
          "value": "auto | none",
          "initial": "none"
        },
        {
          "name": "types",
          "href": "https://drafts.csswg.org/css-view-transitions-2/#descdef-view-transition-types",
          "for": "@view-transition",
          "value": "none | <custom-ident>+",
          "initial": "none"
        }
      ],
      "value": "@view-transition {\n  [ navigation: [ auto | none ]; ] ||\n  [ types: [ none | <custom-ident>+ ]; ]\n}",
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "@custom-media",
      "href": "https://drafts.csswg.org/mediaqueries-5/#at-ruledef-custom-media",
      "descriptors": [],
      "value": "@custom-media <extension-name> [ <media-query-list> | true | false ] ;",
      "spec": {
        "shortname": "mediaqueries-5",
        "currentSpec": false
      }
    }
  ],
  "functions": [
    {
      "name": "anchor()",
      "prose": "An absolutely positioned box can use the anchor() function as a value in its inset properties to refer to the position of one or more anchor boxes. The anchor() function resolves to a <length>. It is only allowed in the inset properties (and is otherwise invalid).",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#funcdef-anchor",
      "type": "function",
      "value": "anchor( <anchor-name>? && <anchor-side>, <length-percentage>? )",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "anchor-size()",
      "prose": "An absolutely positioned box can use the anchor-size() function in its sizing properties to refer to the size of one or more anchor boxes. The anchor-size() function resolves to a <length>. It is only allowed in the accepted @position-try properties (and is otherwise invalid).",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#funcdef-anchor-size",
      "type": "function",
      "value": "anchor-size( [ <anchor-name> || <anchor-size> ]? , <length-percentage>? )",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "superellipse()",
      "value": "superellipse( <number> | infinity | -infinity )",
      "href": "https://drafts.csswg.org/css-borders-4/#funcdef-superellipse",
      "type": "function",
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "color-mix()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-color-mix",
      "type": "function",
      "value": "color-mix( <color-interpolation-method> , [ <color> && <percentage [0,100]>? ]#{2})",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "hwb()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-hwb",
      "type": "function",
      "value": "hwb( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "lab()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-lab",
      "type": "function",
      "value": "lab( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "oklab()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-oklab",
      "type": "function",
      "value": "oklab( [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "lch()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-lch",
      "type": "function",
      "value": "lch( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "oklch()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-oklch",
      "type": "function",
      "value": "oklch( [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "color()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-color",
      "type": "function",
      "value": "color( [from <color>]? <colorspace-params> [ / [ <alpha-value> | none ] ]? )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "device-cmyk()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-device-cmyk",
      "type": "function",
      "value": "<legacy-device-cmyk-syntax> | <modern-device-cmyk-syntax>",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "light-dark()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-light-dark",
      "type": "function",
      "value": "light-dark( <color>, <color> )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "contrast-color()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-contrast-color",
      "type": "function",
      "value": "contrast-color( <color> )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "color-layers()",
      "prose": "The color-layers() functional notation takes an optional <blend-mode> followed by a list of two or more <color> layers.",
      "href": "https://drafts.csswg.org/css-color-6/#funcdef-color-layers",
      "type": "function",
      "value": "color-layers([ <blend-mode>, ]? <color># )",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "contrast-color()",
      "name": "wcag2()",
      "prose": "The wcag2 keyword and wcag2() functional notations indicate use of the [WCAG21] luminance contrast algorithm. Their syntax is:",
      "href": "https://drafts.csswg.org/css-color-6/#funcdef-contrast-color-wcag2",
      "type": "function",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "dynamic-range-limit-mix()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-dynamic-range-limit-mix",
      "type": "function",
      "value": "dynamic-range-limit-mix( [ <'dynamic-range-limit'> && <percentage [0,100]> ]#{2,} )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "ictcp()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-ictcp",
      "type": "function",
      "value": "ictcp([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "jzazbz()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-jzazbz",
      "type": "function",
      "value": "jzazbz([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "jzczhz()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-jzczhz",
      "type": "function",
      "value": "jzczhz([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<hue> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "hdr-color()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-hdr-color",
      "type": "function",
      "value": "color-hdr([ <color> && <number [0,∞]>? ]#{2})",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "rgb()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-rgb",
      "type": "function",
      "value": "[ <legacy-rgb-syntax> | <modern-rgb-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "rgba()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-rgba",
      "type": "function",
      "value": "[ <legacy-rgba-syntax> | <modern-rgba-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "hsl()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-hsl",
      "type": "function",
      "value": "[ <legacy-hsl-syntax> | <modern-hsl-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "hsla()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-hsla",
      "type": "function",
      "value": "[ <legacy-hsla-syntax> | <modern-hsla-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "media()",
      "href": "https://drafts.csswg.org/css-conditional-5/#funcdef-media",
      "type": "function",
      "value": "media( [ <mf-plain> | <mf-boolean> | <mf-range> ] )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "supports()",
      "href": "https://drafts.csswg.org/css-conditional-5/#funcdef-supports",
      "type": "function",
      "value": "supports( <declaration> )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "leader()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-leader",
      "type": "function",
      "value": "leader( <leader-type> )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "target-counter()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-target-counter",
      "type": "function",
      "value": "target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "target-counters()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-target-counters",
      "type": "function",
      "value": "target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "target-text()",
      "href": "https://drafts.csswg.org/css-content-3/#target-text-function",
      "type": "function",
      "value": "target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "string()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-string",
      "type": "function",
      "value": "string( <custom-ident> , [ first | start | last | first-except ]? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "content()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-content",
      "type": "function",
      "value": "content( [ text | before | after | first-letter | marker ]? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "symbols()",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#funcdef-symbols",
      "type": "function",
      "value": "symbols( <symbols-type>? [ <string> | <image> ]+ )",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "linear()",
      "href": "https://drafts.csswg.org/css-easing-2/#funcdef-linear",
      "type": "function",
      "value": "linear( [ <number> && <percentage>{0,2} ]# )",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "cubic-bezier()",
      "href": "https://drafts.csswg.org/css-easing-2/#funcdef-cubic-bezier",
      "type": "function",
      "value": "cubic-bezier( [ <number [0,1]>, <number> ]#{2} )",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "steps()",
      "href": "https://drafts.csswg.org/css-easing-2/#funcdef-steps",
      "type": "function",
      "value": "steps( <integer>, <step-position>?)",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "env()",
      "href": "https://drafts.csswg.org/css-env-1/#funcdef-env",
      "type": "function",
      "value": "env( <custom-ident> <integer [0,∞]>*, <declaration-value>? )",
      "spec": {
        "shortname": "css-env",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "palette-mix()",
      "prose": "With the palette-mix() function defined as follows:",
      "href": "https://drafts.csswg.org/css-fonts-4/#funcdef-palette-mix",
      "type": "function",
      "value": "palette-mix(<color-interpolation-method> , [ [normal | light | dark | <palette-identifier> | <palette-mix()> ] && <percentage [0,100]>? ]#{2})",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "control-value()",
      "prose": "The control-value() function computes to the current value of the form control it is on. If it is used on an element that is not a form control, it returns an empty string.",
      "href": "https://drafts.csswg.org/css-forms-1/#funcdef-control-value",
      "type": "function",
      "value": "control-value( <type>? )",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<repeat-line-color>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat-line-color>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<repeat-line-style>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat-line-style>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<repeat-line-width>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat-line-width>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "running()",
      "href": "https://drafts.csswg.org/css-gcpm-3/#funcdef-running",
      "type": "function",
      "value": "running( <custom-ident> )",
      "spec": {
        "shortname": "css-gcpm",
        "currentSpec": true
      }
    },
    {
      "for": "grid-template-columns",
      "name": "minmax()",
      "value": "minmax(min, max)",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-minmax",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "grid-template-columns",
      "name": "fit-content()",
      "value": "fit-content( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "grid-template-rows",
      "name": "minmax()",
      "value": "minmax(min, max)",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-minmax",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "grid-template-rows",
      "name": "fit-content()",
      "value": "fit-content( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<track-repeat>",
      "name": "repeat()",
      "prose": "The repeat() notation represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-track-repeat-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat>",
      "name": "repeat()",
      "prose": "The repeat() notation represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-track-repeat-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<fixed-repeat>",
      "name": "repeat()",
      "prose": "The repeat() notation represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-track-repeat-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "image-set()",
      "prose": "Delivering the most appropriate image resolution for a user’s device can be a difficult task. Ideally, images should be in the same resolution as the device they’re being viewed in, which can vary between users. However, other factors can factor into the decision of which image to send; for example, if the user is on a slow mobile connection, they may prefer to receive lower-res images rather than waiting for a large proper-res image to load. The image-set() function allows an author to ignore most of these issues, simply providing multiple resolutions of an image and letting the UA decide which is most appropriate in a given situation.",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-image-set",
      "type": "function",
      "value": "image-set( <image-set-option># )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "image()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-image",
      "type": "function",
      "value": "image( <image-tags>? [ <image-src>? , <color>? ]! )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "cross-fade()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-cross-fade",
      "type": "function",
      "value": "cross-fade( <cf-image># )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "element()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-element",
      "type": "function",
      "value": "element( <id-selector> )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "conic-gradient()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-conic-gradient",
      "type": "function",
      "value": "conic-gradient( [ <conic-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "repeating-linear-gradient()",
      "prose": "In addition to linear-gradient() and radial-gradient(), this specification defines repeating-linear-gradient() and repeating-radial-gradient() values. These notations take the same values and are interpreted the same as their respective non-repeating siblings defined previously.",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-repeating-linear-gradient",
      "type": "function",
      "value": "repeating-linear-gradient( [ <linear-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "repeating-radial-gradient()",
      "prose": "In addition to linear-gradient() and radial-gradient(), this specification defines repeating-linear-gradient() and repeating-radial-gradient() values. These notations take the same values and are interpreted the same as their respective non-repeating siblings defined previously.",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-repeating-radial-gradient",
      "type": "function",
      "value": "repeating-radial-gradient( [ <radial-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "repeating-conic-gradient()",
      "prose": "In addition to linear-gradient(), radial-gradient(), and conic-gradient(), this specification defines repeating-linear-gradient(), repeating-radial-gradient(), and repeating-conic-gradient() values. These notations take the same values and are interpreted the same as their respective non-repeating siblings defined previously.",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-repeating-conic-gradient",
      "type": "function",
      "value": "repeating-conic-gradient( [ <conic-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "stripes()",
      "prose": "The stripes() function defines a 1D image as a comma-separated list of colored stripes, each placed end-to-end on the paint line in the order given.",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-stripes",
      "type": "function",
      "value": "stripes( <color-stripe># )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "-webkit-image-set()",
      "prose": "Implementations must accept -webkit-image-set() as a parse-time alias of image-set(). (It’s a valid value, with identical arguments to image-set(), and is turned into image-set() during parsing.)",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef--webkit-image-set",
      "type": "function",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "image-set()",
      "name": "type()",
      "value": "type( <string> )",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-image-set-type",
      "type": "function",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "linear-gradient()",
      "prose": "The linear-gradient() notation specifies a linear gradient in CSS. Its syntax is as follows:",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-linear-gradient",
      "type": "function",
      "value": "linear-gradient( [ <linear-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "radial-gradient()",
      "prose": "The radial-gradient() notation specifies a radial gradient by indicating the center of the gradient (where the 0% ellipse will be) and the size and shape of the ending shape (the 100% ellipse). Color stops are given as a list, just as for linear-gradient(). Starting from the gradient center and progressing towards (and potentially beyond) the ending shape, uniformly-scaled concentric ellipses are drawn and colored according to the specified color stops.",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-radial-gradient",
      "type": "function",
      "value": "radial-gradient( [ <radial-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "counter()",
      "prose": "Counters have no visible effect by themselves, but their values can be used with the counter() and counters() functions, whose used values represent counter values as strings or images. They are defined as follows:",
      "href": "https://drafts.csswg.org/css-lists-3/#funcdef-counter",
      "type": "function",
      "value": "counter( <counter-name>, <counter-style>? )",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "counters()",
      "prose": "Counters have no visible effect by themselves, but their values can be used with the counter() and counters() functions, whose used values represent counter values as strings or images. They are defined as follows:",
      "href": "https://drafts.csswg.org/css-lists-3/#funcdef-counters",
      "type": "function",
      "value": "counters( <counter-name>, <string>, <counter-style>? )",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "for": "clip",
      "name": "rect()",
      "value": "rect( <top>, <right>, <bottom>, <left> )",
      "href": "https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
      "type": "function",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "for": "@function",
      "name": "type()",
      "href": "https://drafts.csswg.org/css-mixins-1/#funcdef-function-type",
      "type": "function",
      "value": "type( <syntax> )",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      }
    },
    {
      "for": "text-overflow",
      "name": "fade()",
      "value": "fade( [ <length-percentage> ] )",
      "href": "https://drafts.csswg.org/css-overflow-4/#funcdef-text-overflow-fade",
      "type": "function",
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "float",
      "name": "snap-block()",
      "value": "snap-block( <length> , [ start | end | near ]? )",
      "href": "https://drafts.csswg.org/css-page-floats-3/#funcdef-float-snap-block",
      "type": "function",
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "for": "float",
      "name": "snap-inline()",
      "value": "snap-inline( <length> , [ left | right | near ]? )",
      "href": "https://drafts.csswg.org/css-page-floats-3/#funcdef-float-snap-inline",
      "type": "function",
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "name": "paint()",
      "href": "https://drafts.css-houdini.org/css-paint-api-1/#funcdef-paint",
      "type": "function",
      "value": "paint( <ident>, <declaration-value>? )",
      "spec": {
        "shortname": "css-paint-api",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "shape()",
      "href": "https://drafts.csswg.org/css-shapes-2/#funcdef-shape",
      "type": "function",
      "value": "shape( <'fill-rule'>? from <position>, <shape-command>#)",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "inset()",
      "prose": "Defines an inset rectangle via insets from each edge of the reference box. If less than four <length-percentage> values are provided, the omitted values default in the same way as the margin shorthand: an omitted second or third value defaults to the first, and an omitted fourth value defaults to the second. The four <length-percentage>s define the position of the top, right, bottom, and left edges of a rectangle, respectively, as insets from the corresponding edges of the reference box. A pair of insets in either dimension that add up to more than the used dimension (such as left and right insets of 75% apiece) use the CSS Backgrounds 3 § 4.5 Overlapping Curves rules to proportionally reduce the inset effect to 100%. For example, specifying inset(75% 0 50% 0) has the top+bottom edges summing to 125% of the reference box’s height. They’re proportionally reduced to sum to 100%, identical to specifying inset(60% 0 40% 0). The optional <'border-radius'> argument(s) define rounded corners for the rectangle using the border-radius shorthand syntax.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-inset",
      "type": "function",
      "value": "inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "for": "<basic-shape>",
      "name": "xywh()",
      "prose": "Defines a rectangle via offsets from the top and left edge of the reference box, and a specified width and height. The four <length-percentage>s define, respectively, the inset from the left edge of the reference box, the inset from the top edge of the reference box, the width of the rectangle, and the height of the rectangle. The optional <'border-radius'> argument(s) define rounded corners for the inset rectangle using the border-radius shorthand syntax.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-xywh",
      "type": "function",
      "value": "xywh( <length-percentage>{2} <length-percentage [0,∞]>{2} [ round <'border-radius'> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "for": "<basic-shape>",
      "name": "rect()",
      "prose": "Defines a rectangle via insets from the top and left edges of the reference box. The four <length-percentage>s define the position of the top, right, bottom, and left edges of a rectangle, respectively, as insets from the top edge of the reference box (for the first and third values) or the left edge of the reference box (for the second and fourth values). An auto value makes the edge of the box coincide with the corresponding edge of the reference box: it’s equivalent to 0% as the first (top) or fourth (left) value, and equivalent to 100% as the second (right) or third (bottom) value. The second (right) and third (bottom) values are floored by the fourth (left) and second (top) values, respectively. For example, specifying rect(10px 0 0 20px) would place the bottom edge higher than the top edge, and the right edge further left than the left edge, so both are corrected to not cross over the other edge, identical to specifying rect(10px 20px 10px 20px). The optional <'border-radius'> argument(s) define rounded corners for the rectangle using the border-radius shorthand syntax.)",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-rect",
      "type": "function",
      "value": "rect( [ <length-percentage> | auto ]{4} [ round <'border-radius'> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "for": "<basic-shape>",
      "name": "circle()",
      "prose": "The <radial-size> argument defines the circle’s radius. Rather than referring to the gradient box, values are resolved against the reference box. Two <length-percentage> values are invalid. The <position> argument defines the center of the circle. Unless otherwise specified, this defaults to center if omitted.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-circle",
      "type": "function",
      "value": "circle( <radial-size>? [ at <position> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "ellipse()",
      "prose": "The <radial-size> argument defines the horizontal and vertical radiuses of the ellipse. Rather than referring to the gradient box, values are resolved against the reference box. The <position> argument defines the center of the ellipse. Unless otherwise specified, this defaults to center if omitted.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-ellipse",
      "type": "function",
      "value": "ellipse( <radial-size>? [ at <position> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "polygon()",
      "prose": "The <'fill-rule'> specifies the filling rule used to determine the interior. Defaults to nonzero if omitted. An optional <length> after a round keyword defines rounding for each vertex of the polygon. The length is the radius of a circle whose center lies on the bisector of the smaller angle of the vertex, and that is tangential to both sides of the vertex. Rounding polygon vertices that are both convex and concave. To avoid rounding more than half of any line segment, the rounding of each vertex must be clamped separately such that the radius is never more than the smaller of tan(angle/2) segment / 2 evaluated against both vertex line segments. This diagram shows the intent of the clamping formula. Each <length-percentage> pair specifies a vertex of the polygon, as a horizontal and vertical offset from the left and top edges of the reference box. The UA must close a polygon by connecting the last vertex with the first vertex of the list.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-polygon",
      "type": "function",
      "value": "polygon( <'fill-rule'>? [ round <length> ]? , [<length-percentage> <length-percentage>]# )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "path()",
      "prose": "The <'fill-rule'> specifies the filling rule used to determine the interior. Defaults to nonzero if omitted, unless the function is being used in a context such as SVG shapes where the fill-rule property is relevant. In that case an omitted value will use the computed value of the fill-rule property. The <string> represents an SVG Path data string. A path data string that does not conform to the to the grammar and parsing rules of SVG 1.1, or that does conform but defines an empty path, is invalid and causes the entire path() to be invalid. The initial position is defined by the first “move to” argument in the path string. For the initial direction follow SVG 1.1. The UA must close a path with an implicit closepath command (\"z\" or \"Z\") if it is not present in the string for properties that require a closed loop (such as shape-outside and clip-path).",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-path",
      "type": "function",
      "value": "path( <'fill-rule'>? , <string> )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "width",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "height",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "min-width",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "min-height",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "max-width",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "max-height",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "scale()",
      "value": "scale( [ <number> | <percentage> ]#{1,2} )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scale",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "scaleX()",
      "value": "scaleX( [ <number> | <percentage> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scalex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "scaleY()",
      "value": "scaleY( [ <number> | <percentage> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scaley",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "matrix3d()",
      "value": "matrix3d( <number>#{16} )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-matrix3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "translate3d()",
      "value": "translate3d( <length-percentage> , <length-percentage> , <length> )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-translate3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "translateZ()",
      "value": "translateZ( <length> )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-translatez",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "scale3d()",
      "value": "scale3d( [ <number> | <percentage> ]#{3} )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scale3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "scaleZ()",
      "value": "scaleZ( [ <number> | <percentage> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scalez",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotate3d()",
      "value": "rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotate3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotateX()",
      "value": "rotateX( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotatex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotateY()",
      "value": "rotateY( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotatey",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotateZ()",
      "value": "rotateZ( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotatez",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "perspective()",
      "value": "perspective( [ <length [0,∞]> | none ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-perspective",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "matrix()",
      "value": "matrix( <number>#{6} )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-matrix",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "translate()",
      "value": "translate( <length-percentage> , <length-percentage>? )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-translate",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "translateX()",
      "value": "translateX( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-translatex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "translateY()",
      "value": "translateY( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-translatey",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "scale()",
      "value": "scale( <number> , <number>? )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-scale",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "for": "transform",
      "name": "scaleX()",
      "value": "scaleX( <number> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-scalex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "scaleY()",
      "value": "scaleY( <number> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-scaley",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "rotate()",
      "value": "rotate( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-rotate",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "for": "transform",
      "name": "skew()",
      "value": "skew( [ <angle> | <zero> ] , [ <angle> | <zero> ]? )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-skew",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "skewX()",
      "value": "skewX( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-skewx",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "skewY()",
      "value": "skewY( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-skewy",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "progress()",
      "prose": "The progress() functional notation returns a <number> value representing the position of one calculation (the progress value) between two other calculations (the progress start value and progress end value). progress() is a math function.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-progress",
      "type": "function",
      "value": "progress(<calc-sum>, <calc-sum>, <calc-sum>)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "media-progress()",
      "prose": "Similar to the progress() notation, the media-progress() functional notation returns a <number> value representing current value of the specified media query [MEDIAQUERIES-4] as a progress value between two explicit values of the media query (as the progress start value and progress end value).",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-media-progress",
      "type": "function",
      "value": "media-progress(<mf-name>, <calc-sum>, <calc-sum>)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "container-progress()",
      "prose": "The container-progress() functional notation is identical to the media-progress() functional notation, except that it accepts container features [CSS-CONTAIN-3] in place of media features.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-container-progress",
      "type": "function",
      "value": "container-progress(<mf-name> [ of <container-name> ]?, <calc-sum>, <calc-sum>)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "calc-mix()",
      "prose": "The calc-mix() mix notation represents an interpolated numeric or dimensional value. Like calc(), it is a math function, with the following syntactic form:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-calc-mix",
      "type": "function",
      "value": "calc-mix( <progress>, <calc-sum>, <calc-sum> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "transform-mix()",
      "prose": "The transform-mix() mix notation represents an interpolated <transform-list>, with the following syntactic form:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-transform-mix",
      "type": "function",
      "value": "transform-mix( <progress>, <transform-list>, <transform-list> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "mix()",
      "prose": "Interpolation of any two property values can be represented by the mix() mix notation, which supports two alternative syntax patterns:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-mix",
      "type": "function",
      "value": "mix( <progress> , <whole-value> , <whole-value> ) | mix( <progress> && of <keyframes-name> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "first-valid()",
      "prose": "The first-valid() functional notation inlines the fallback behavior intrinsic to parsing declarations. Unlike most notations, it can accept any valid or invalid syntax in its arguments, and represents the first value among its arguments that is supported (parsed as valid) by the UA as the whole value of the property it’s used in.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-first-valid",
      "type": "function",
      "value": "first-valid( <declaration-value># )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "if()",
      "prose": "The if() function is an arbitrary substitution function that represents conditional values. Its argument consists of an ordered semi-colon–separated list of statements, each consisting of a condition followed by a colon followed by a value. An if() function represents the value corresponding to the first condition in its argument list to be true; if no condition matches, then the if() function represents an empty token stream.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-if",
      "type": "function",
      "value": "if( [ <if-branch> ; ]* <if-branch> ;? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "toggle()",
      "prose": "The toggle() expression allows descendant elements to cycle over a list of values instead of inheriting the same value.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-toggle",
      "type": "function",
      "value": "toggle( <whole-value># )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "inherit()",
      "prose": "Like the inherit keyword, the inherit() functional notation resolves to the computed value of a property on the parent. Rather than resolving to the value of the same property, however, it resolves to a sequence of component values representing the computed value of the property specified as its first argument. Its second argument, if present, is used as a fallback in case the first argument resolves to the guaranteed-invalid value.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-inherit",
      "type": "function",
      "value": "inherit( <custom-property-name>, <declaration-value>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "attr()",
      "prose": "The attr() function substitutes the value of an attribute on an element into a property, similar to how the var() function substitutes a custom property value into a function.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-attr",
      "type": "function",
      "value": "attr( <attr-name> <attr-type>? , <declaration-value>?)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "ident()",
      "prose": "The ident() function represents an <ident>, and can be used to manually construct <custom-ident> values from several parts.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-ident",
      "type": "function",
      "value": "ident( <ident-arg>+ )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "random()",
      "prose": "The random() function is a math function that represents a random value between a minimum and maximum value, drawn from a uniform distribution, optionally limiting the possible values to a step between those limits:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-random",
      "type": "function",
      "value": "random( <random-value-sharing>? , <calc-sum>, <calc-sum>, <calc-sum>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "random-item()",
      "prose": "The random-item() function resolves to a random item from among its list of items.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-random-item",
      "type": "function",
      "value": "random-item( <random-value-sharing> , [ <declaration-value>? ]# )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "sibling-count()",
      "prose": "The sibling-count() functional notation represents, as an <integer>, the total number of child elements in the parent of the element on which the notation is used.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-sibling-count",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "sibling-index()",
      "prose": "The sibling-index() functional notation represents, as an <integer>, the index of the element on which the notation is used among its inclusive siblings. Like :nth-child(), sibling-index() is 1-indexed.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-sibling-index",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "calc-size()",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-calc-size",
      "type": "function",
      "value": "calc-size( <calc-size-basis>, <calc-sum> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "crossorigin()",
      "prose": "<crossorigin-modifier> = crossorigin(anonymous | use-credentials)",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-request-url-modifier-crossorigin",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "<request-url-modifier>",
      "name": "integrity()",
      "prose": "<integrity-modifier> = integrity(<string>)",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-request-url-modifier-integrity",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "<request-url-modifier>",
      "name": "referrerpolicy()",
      "prose": "<referrerpolicy-modifier> = referrerpolicy(no-referrer | no-referrer-when-downgrade | same-origin | origin | strict-origin | origin-when-cross-origin | strict-origin-when-cross-origin | unsafe-url)",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-request-url-modifier-referrerpolicy",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "attr()",
      "name": "type()",
      "value": "type( <syntax> )",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-attr-type",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "url()",
      "prose": "The <url> type, written with the url() and src() functions, represents a URL, which is a pointer to a resource.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-url",
      "type": "function",
      "value": "url( <string> <url-modifier>* ) | <url-token>",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "src()",
      "prose": "The <url> type, written with the url() and src() functions, represents a URL, which is a pointer to a resource.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-src",
      "type": "function",
      "value": "src( <string> <url-modifier>* )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "calc()",
      "prose": "The calc() function is a math function that allows basic arithmetic to be performed on numerical values, using addition (+), subtraction (-), multiplication (*), division (/), and parentheses.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-calc",
      "type": "function",
      "value": "calc( <calc-sum> )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "min()",
      "prose": "The min() or max() functions contain one or more comma-separated calculations, and represent the smallest (most negative) or largest (most positive) of them, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-min",
      "type": "function",
      "value": "min( <calc-sum># )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "max()",
      "prose": "The min() or max() functions contain one or more comma-separated calculations, and represent the smallest (most negative) or largest (most positive) of them, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-max",
      "type": "function",
      "value": "max( <calc-sum># )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "clamp()",
      "prose": "The clamp() function takes three calculations—​a minimum value, a central value, and a maximum value—​and represents its central calculation, clamped according to its min and max calculations, favoring the min calculation if it conflicts with the max. (That is, given clamp(MIN, VAL, MAX), it represents exactly the same value as max(MIN, min(VAL, MAX))).",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-clamp",
      "type": "function",
      "value": "clamp( [ <calc-sum> | none ], <calc-sum>, [ <calc-sum> | none ] )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "round()",
      "value": "round( <rounding-strategy>?, <calc-sum>, <calc-sum>? )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-round",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "mod()",
      "value": "mod( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-mod",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "rem()",
      "value": "rem( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-rem",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "sin()",
      "value": "sin( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-sin",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "cos()",
      "value": "cos( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-cos",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "tan()",
      "value": "tan( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-tan",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "asin()",
      "value": "asin( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-asin",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "acos()",
      "value": "acos( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-acos",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "atan()",
      "value": "atan( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-atan",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "atan2()",
      "value": "atan2( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-atan2",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "pow()",
      "value": "pow( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-pow",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "sqrt()",
      "value": "sqrt( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-sqrt",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "hypot()",
      "value": "hypot( <calc-sum># )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-hypot",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "log()",
      "value": "log( <calc-sum>, <calc-sum>? )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-log",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "exp()",
      "value": "exp( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-exp",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "abs()",
      "value": "abs( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-abs",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "sign()",
      "value": "sign( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-sign",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "var()",
      "href": "https://drafts.csswg.org/css-variables-2/#funcdef-var",
      "type": "function",
      "value": "var( <custom-property-name> , <declaration-value>? )",
      "spec": {
        "shortname": "css-variables",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "filter()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter",
      "type": "function",
      "value": "filter( [ <image> | <string> ], <filter-value-list> )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "filter",
      "name": "blur()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-blur",
      "type": "function",
      "value": "blur( <length>? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "brightness()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-brightness",
      "type": "function",
      "value": "brightness( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "contrast()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-contrast",
      "type": "function",
      "value": "contrast( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "drop-shadow()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-drop-shadow",
      "type": "function",
      "value": "drop-shadow( [ <color>? && <length>{2,3} ] )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "grayscale()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-grayscale",
      "type": "function",
      "value": "grayscale( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "hue-rotate()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-hue-rotate",
      "type": "function",
      "value": "hue-rotate( [ <angle> | <zero> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "invert()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-invert",
      "type": "function",
      "value": "invert( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "opacity()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-opacity",
      "type": "function",
      "value": "opacity( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "saturate()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-saturate",
      "type": "function",
      "value": "saturate( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "sepia()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-sepia",
      "type": "function",
      "value": "sepia( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "ray()",
      "href": "https://drafts.fxtf.org/motion-1/#funcdef-ray",
      "type": "function",
      "value": "ray( <angle> && <ray-size>? && contain? && [at <position>]? )",
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "scroll()",
      "prose": "The scroll() functional notation can be used as a <single-animation-timeline> value in animation-timeline and specifies a scroll progress timeline. Its syntax is",
      "href": "https://drafts.csswg.org/scroll-animations-1/#funcdef-scroll",
      "type": "function",
      "value": "scroll( [ <scroller> || <axis> ]? )",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "view()",
      "prose": "The view() functional notation can be used as a <single-animation-timeline> value in animation-timeline and specifies a view progress timeline in reference to the nearest ancestor scroll container. Its syntax is",
      "href": "https://drafts.csswg.org/scroll-animations-1/#funcdef-view",
      "type": "function",
      "value": "view( [ <axis> || <'view-timeline-inset'> ]? )",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    }
  ],
  "properties": [
    {
      "name": "-webkit-text-fill-color",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-text-fill-color",
      "value": "<color>",
      "initial": "currentcolor",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "an RGBA color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "media": "visual",
      "styleDeclaration": [
        "-webkit-text-fill-color",
        "WebkitTextFillColor",
        "webkitTextFillColor"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-text-stroke-color",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-text-stroke-color",
      "value": "<color>",
      "initial": "currentcolor",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "an RGBA color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "media": "visual",
      "styleDeclaration": [
        "-webkit-text-stroke-color",
        "WebkitTextStrokeColor",
        "webkitTextStrokeColor"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-text-stroke-width",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-text-stroke-width",
      "value": "<line-width>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "-webkit-text-stroke-width",
        "WebkitTextStrokeWidth",
        "webkitTextStrokeWidth"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-text-stroke",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-text-stroke",
      "value": "<line-width> || <color>",
      "initial": "See individual properties",
      "appliesTo": "See individual properties",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "See individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "See individual properties",
      "media": "visual",
      "styleDeclaration": [
        "-webkit-text-stroke",
        "WebkitTextStroke",
        "webkitTextStroke"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "touch-action",
      "href": "https://compat.spec.whatwg.org/#propdef-touch-action",
      "value": "auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation",
      "initial": "auto",
      "appliesTo": "all elements except: non-replaced inline elements, table rows, row groups, table columns, and column groups.",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "Same as specified value",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "media": "visual",
      "styleDeclaration": [
        "touch-action",
        "touchAction"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-align-items",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-align-items",
      "legacyAliasOf": "align-items",
      "styleDeclaration": [
        "-webkit-align-items",
        "WebkitAlignItems",
        "webkitAlignItems"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ] | anchor-center"
    },
    {
      "name": "-webkit-align-content",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-align-content",
      "legacyAliasOf": "align-content",
      "styleDeclaration": [
        "-webkit-align-content",
        "WebkitAlignContent",
        "webkitAlignContent"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>"
    },
    {
      "name": "-webkit-align-self",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-align-self",
      "legacyAliasOf": "align-self",
      "styleDeclaration": [
        "-webkit-align-self",
        "WebkitAlignSelf",
        "webkitAlignSelf"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position> | anchor-center"
    },
    {
      "name": "-webkit-animation-name",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-name",
      "legacyAliasOf": "animation-name",
      "styleDeclaration": [
        "-webkit-animation-name",
        "WebkitAnimationName",
        "webkitAnimationName"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "[ none | <keyframes-name> ]#"
    },
    {
      "name": "-webkit-animation-duration",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-duration",
      "legacyAliasOf": "animation-duration",
      "styleDeclaration": [
        "-webkit-animation-duration",
        "WebkitAnimationDuration",
        "webkitAnimationDuration"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<time [0s,∞]>#"
    },
    {
      "name": "-webkit-animation-timing-function",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-timing-function",
      "legacyAliasOf": "animation-timing-function",
      "styleDeclaration": [
        "-webkit-animation-timing-function",
        "WebkitAnimationTimingFunction",
        "webkitAnimationTimingFunction"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<easing-function>#"
    },
    {
      "name": "-webkit-animation-iteration-count",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-iteration-count",
      "legacyAliasOf": "animation-iteration-count",
      "styleDeclaration": [
        "-webkit-animation-iteration-count",
        "WebkitAnimationIterationCount",
        "webkitAnimationIterationCount"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<single-animation-iteration-count>#"
    },
    {
      "name": "-webkit-animation-direction",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-direction",
      "legacyAliasOf": "animation-direction",
      "styleDeclaration": [
        "-webkit-animation-direction",
        "WebkitAnimationDirection",
        "webkitAnimationDirection"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<single-animation-direction>#"
    },
    {
      "name": "-webkit-animation-play-state",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-play-state",
      "legacyAliasOf": "animation-play-state",
      "styleDeclaration": [
        "-webkit-animation-play-state",
        "WebkitAnimationPlayState",
        "webkitAnimationPlayState"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<single-animation-play-state>#"
    },
    {
      "name": "-webkit-animation-delay",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-delay",
      "legacyAliasOf": "animation-delay",
      "styleDeclaration": [
        "-webkit-animation-delay",
        "WebkitAnimationDelay",
        "webkitAnimationDelay"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<time>#"
    },
    {
      "name": "-webkit-animation-fill-mode",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation-fill-mode",
      "legacyAliasOf": "animation-fill-mode",
      "styleDeclaration": [
        "-webkit-animation-fill-mode",
        "WebkitAnimationFillMode",
        "webkitAnimationFillMode"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<single-animation-fill-mode>#"
    },
    {
      "name": "-webkit-animation",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-animation",
      "legacyAliasOf": "animation",
      "styleDeclaration": [
        "-webkit-animation",
        "WebkitAnimation",
        "webkitAnimation"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<single-animation>#"
    },
    {
      "name": "-webkit-backface-visibility",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-backface-visibility",
      "legacyAliasOf": "backface-visibility",
      "styleDeclaration": [
        "-webkit-backface-visibility",
        "WebkitBackfaceVisibility",
        "webkitBackfaceVisibility"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "visible | hidden"
    },
    {
      "name": "-webkit-background-clip",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-background-clip",
      "legacyAliasOf": "background-clip",
      "styleDeclaration": [
        "-webkit-background-clip",
        "WebkitBackgroundClip",
        "webkitBackgroundClip"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<visual-box>#"
    },
    {
      "name": "-webkit-background-origin",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-background-origin",
      "legacyAliasOf": "background-origin",
      "styleDeclaration": [
        "-webkit-background-origin",
        "WebkitBackgroundOrigin",
        "webkitBackgroundOrigin"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<visual-box>#"
    },
    {
      "name": "-webkit-background-size",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-background-size",
      "legacyAliasOf": "background-size",
      "styleDeclaration": [
        "-webkit-background-size",
        "WebkitBackgroundSize",
        "webkitBackgroundSize"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<bg-size>#"
    },
    {
      "name": "-webkit-border-bottom-left-radius",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-border-bottom-left-radius",
      "legacyAliasOf": "border-bottom-left-radius",
      "styleDeclaration": [
        "-webkit-border-bottom-left-radius",
        "WebkitBorderBottomLeftRadius",
        "webkitBorderBottomLeftRadius"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<length-percentage [0,∞]>{1,2}"
    },
    {
      "name": "-webkit-border-bottom-right-radius",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-border-bottom-right-radius",
      "legacyAliasOf": "border-bottom-right-radius",
      "styleDeclaration": [
        "-webkit-border-bottom-right-radius",
        "WebkitBorderBottomRightRadius",
        "webkitBorderBottomRightRadius"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<length-percentage [0,∞]>{1,2}"
    },
    {
      "name": "-webkit-border-top-left-radius",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-border-top-left-radius",
      "legacyAliasOf": "border-top-left-radius",
      "styleDeclaration": [
        "-webkit-border-top-left-radius",
        "WebkitBorderTopLeftRadius",
        "webkitBorderTopLeftRadius"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<length-percentage [0,∞]>{1,2}"
    },
    {
      "name": "-webkit-border-top-right-radius",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-border-top-right-radius",
      "legacyAliasOf": "border-top-right-radius",
      "styleDeclaration": [
        "-webkit-border-top-right-radius",
        "WebkitBorderTopRightRadius",
        "webkitBorderTopRightRadius"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<length-percentage [0,∞]>{1,2}"
    },
    {
      "name": "-webkit-border-radius",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-border-radius",
      "legacyAliasOf": "border-radius",
      "styleDeclaration": [
        "-webkit-border-radius",
        "WebkitBorderRadius",
        "webkitBorderRadius"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<length-percentage [0,∞]>{1,4} [ / <length-percentage [0,∞]>{1,4} ]?"
    },
    {
      "name": "-webkit-box-shadow",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-box-shadow",
      "legacyAliasOf": "box-shadow",
      "styleDeclaration": [
        "-webkit-box-shadow",
        "WebkitBoxShadow",
        "webkitBoxShadow"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<spread-shadow>#"
    },
    {
      "name": "-webkit-box-sizing",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-box-sizing",
      "legacyAliasOf": "box-sizing",
      "styleDeclaration": [
        "-webkit-box-sizing",
        "WebkitBoxSizing",
        "webkitBoxSizing"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "content-box | border-box"
    },
    {
      "name": "-webkit-flex",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-flex-propdef",
      "legacyAliasOf": "flex",
      "styleDeclaration": [
        "-webkit-flex",
        "WebkitFlex",
        "webkitFlex"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]"
    },
    {
      "name": "-webkit-flex-basis",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-flex-basis",
      "legacyAliasOf": "flex-basis",
      "styleDeclaration": [
        "-webkit-flex-basis",
        "WebkitFlexBasis",
        "webkitFlexBasis"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "content | <'width'>"
    },
    {
      "name": "-webkit-flex-direction",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-flex-direction",
      "legacyAliasOf": "flex-direction",
      "styleDeclaration": [
        "-webkit-flex-direction",
        "WebkitFlexDirection",
        "webkitFlexDirection"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "row | row-reverse | column | column-reverse"
    },
    {
      "name": "-webkit-flex-flow",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-flex-flow",
      "legacyAliasOf": "flex-flow",
      "styleDeclaration": [
        "-webkit-flex-flow",
        "WebkitFlexFlow",
        "webkitFlexFlow"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<'flex-direction'> || <'flex-wrap'>"
    },
    {
      "name": "-webkit-flex-grow",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-flex-grow",
      "legacyAliasOf": "flex-grow",
      "styleDeclaration": [
        "-webkit-flex-grow",
        "WebkitFlexGrow",
        "webkitFlexGrow"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<number [0,∞]>"
    },
    {
      "name": "-webkit-flex-shrink",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-flex-shrink",
      "legacyAliasOf": "flex-shrink",
      "styleDeclaration": [
        "-webkit-flex-shrink",
        "WebkitFlexShrink",
        "webkitFlexShrink"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<number [0,∞]>"
    },
    {
      "name": "-webkit-flex-wrap",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-flex-wrap",
      "legacyAliasOf": "flex-wrap",
      "styleDeclaration": [
        "-webkit-flex-wrap",
        "WebkitFlexWrap",
        "webkitFlexWrap"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "nowrap | wrap | wrap-reverse"
    },
    {
      "name": "-webkit-filter",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-filter",
      "legacyAliasOf": "filter",
      "styleDeclaration": [
        "-webkit-filter",
        "WebkitFilter",
        "webkitFilter"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "none | <filter-value-list>"
    },
    {
      "name": "-webkit-justify-content",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-justify-content",
      "legacyAliasOf": "justify-content",
      "styleDeclaration": [
        "-webkit-justify-content",
        "WebkitJustifyContent",
        "webkitJustifyContent"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]"
    },
    {
      "name": "-webkit-mask",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask",
      "legacyAliasOf": "mask",
      "styleDeclaration": [
        "-webkit-mask",
        "WebkitMask",
        "webkitMask"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<mask-layer>#"
    },
    {
      "name": "-webkit-mask-box-image",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-box-image",
      "legacyAliasOf": "mask-border",
      "styleDeclaration": [
        "-webkit-mask-box-image",
        "WebkitMaskBoxImage",
        "webkitMaskBoxImage"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>"
    },
    {
      "name": "-webkit-mask-box-image-outset",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-box-image-outset",
      "legacyAliasOf": "mask-border-outset",
      "styleDeclaration": [
        "-webkit-mask-box-image-outset",
        "WebkitMaskBoxImageOutset",
        "webkitMaskBoxImageOutset"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "[ <length> | <number> ]{1,4}"
    },
    {
      "name": "-webkit-mask-box-image-repeat",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-box-image-repeat",
      "legacyAliasOf": "mask-border-repeat",
      "styleDeclaration": [
        "-webkit-mask-box-image-repeat",
        "WebkitMaskBoxImageRepeat",
        "webkitMaskBoxImageRepeat"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "[ stretch | repeat | round | space ]{1,2}"
    },
    {
      "name": "-webkit-mask-box-image-slice",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-box-image-slice",
      "legacyAliasOf": "mask-border-slice",
      "styleDeclaration": [
        "-webkit-mask-box-image-slice",
        "WebkitMaskBoxImageSlice",
        "webkitMaskBoxImageSlice"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "[ <number> | <percentage> ]{1,4} fill?"
    },
    {
      "name": "-webkit-mask-box-image-source",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-box-image-source",
      "legacyAliasOf": "mask-border-source",
      "styleDeclaration": [
        "-webkit-mask-box-image-source",
        "WebkitMaskBoxImageSource",
        "webkitMaskBoxImageSource"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "none | <image>"
    },
    {
      "name": "-webkit-mask-box-image-width",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-box-image-width",
      "legacyAliasOf": "mask-border-width",
      "styleDeclaration": [
        "-webkit-mask-box-image-width",
        "WebkitMaskBoxImageWidth",
        "webkitMaskBoxImageWidth"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "[ <length-percentage> | <number> | auto ]{1,4}"
    },
    {
      "name": "-webkit-mask-clip",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-clip",
      "legacyAliasOf": "mask-clip",
      "styleDeclaration": [
        "-webkit-mask-clip",
        "WebkitMaskClip",
        "webkitMaskClip"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "[ <coord-box> | no-clip ]#"
    },
    {
      "name": "-webkit-mask-composite",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-composite",
      "legacyAliasOf": "mask-composite",
      "styleDeclaration": [
        "-webkit-mask-composite",
        "WebkitMaskComposite",
        "webkitMaskComposite"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<compositing-operator>#"
    },
    {
      "name": "-webkit-mask-image",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-image",
      "legacyAliasOf": "mask-image",
      "styleDeclaration": [
        "-webkit-mask-image",
        "WebkitMaskImage",
        "webkitMaskImage"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<mask-reference>#"
    },
    {
      "name": "-webkit-mask-origin",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-origin",
      "legacyAliasOf": "mask-origin",
      "styleDeclaration": [
        "-webkit-mask-origin",
        "WebkitMaskOrigin",
        "webkitMaskOrigin"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<coord-box>#"
    },
    {
      "name": "-webkit-mask-position",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-position",
      "legacyAliasOf": "mask-position",
      "styleDeclaration": [
        "-webkit-mask-position",
        "WebkitMaskPosition",
        "webkitMaskPosition"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<position>#"
    },
    {
      "name": "-webkit-mask-repeat",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-repeat",
      "legacyAliasOf": "mask-repeat",
      "styleDeclaration": [
        "-webkit-mask-repeat",
        "WebkitMaskRepeat",
        "webkitMaskRepeat"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<repeat-style>#"
    },
    {
      "name": "-webkit-mask-size",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-mask-size",
      "legacyAliasOf": "mask-size",
      "styleDeclaration": [
        "-webkit-mask-size",
        "WebkitMaskSize",
        "webkitMaskSize"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<bg-size>#"
    },
    {
      "name": "-webkit-order",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-order",
      "legacyAliasOf": "order",
      "styleDeclaration": [
        "-webkit-order",
        "WebkitOrder",
        "webkitOrder"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<integer>"
    },
    {
      "name": "-webkit-perspective",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-perspective",
      "legacyAliasOf": "perspective",
      "styleDeclaration": [
        "-webkit-perspective",
        "WebkitPerspective",
        "webkitPerspective"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "none | <length [0,∞]>"
    },
    {
      "name": "-webkit-perspective-origin",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-perspective-origin",
      "legacyAliasOf": "perspective-origin",
      "styleDeclaration": [
        "-webkit-perspective-origin",
        "WebkitPerspectiveOrigin",
        "webkitPerspectiveOrigin"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<position>"
    },
    {
      "name": "-webkit-transform-origin",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transform-origin",
      "legacyAliasOf": "transform-origin",
      "styleDeclaration": [
        "-webkit-transform-origin",
        "WebkitTransformOrigin",
        "webkitTransformOrigin"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "[ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] <length>? | [ [ center | left | right ] && [ center | top | bottom ] ] <length>?"
    },
    {
      "name": "-webkit-transform-style",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transform-style",
      "legacyAliasOf": "transform-style",
      "styleDeclaration": [
        "-webkit-transform-style",
        "WebkitTransformStyle",
        "webkitTransformStyle"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "flat | preserve-3d"
    },
    {
      "name": "-webkit-transform",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transform",
      "legacyAliasOf": "transform",
      "styleDeclaration": [
        "-webkit-transform",
        "WebkitTransform",
        "webkitTransform"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "none | <transform-list>"
    },
    {
      "name": "-webkit-transition-delay",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transition-delay",
      "legacyAliasOf": "transition-delay",
      "styleDeclaration": [
        "-webkit-transition-delay",
        "WebkitTransitionDelay",
        "webkitTransitionDelay"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<time>#"
    },
    {
      "name": "-webkit-transition-duration",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transition-duration",
      "legacyAliasOf": "transition-duration",
      "styleDeclaration": [
        "-webkit-transition-duration",
        "WebkitTransitionDuration",
        "webkitTransitionDuration"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<time [0s,∞]>#"
    },
    {
      "name": "-webkit-transition-property",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transition-property",
      "legacyAliasOf": "transition-property",
      "styleDeclaration": [
        "-webkit-transition-property",
        "WebkitTransitionProperty",
        "webkitTransitionProperty"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "none | <single-transition-property>#"
    },
    {
      "name": "-webkit-transition-timing-function",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transition-timing-function",
      "legacyAliasOf": "transition-timing-function",
      "styleDeclaration": [
        "-webkit-transition-timing-function",
        "WebkitTransitionTimingFunction",
        "webkitTransitionTimingFunction"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<easing-function>#"
    },
    {
      "name": "-webkit-transition",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-transition",
      "legacyAliasOf": "transition",
      "styleDeclaration": [
        "-webkit-transition",
        "WebkitTransition",
        "webkitTransition"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "<single-transition>#"
    },
    {
      "name": "-webkit-text-size-adjust",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-text-size-adjust",
      "legacyAliasOf": "text-size-adjust",
      "styleDeclaration": [
        "-webkit-text-size-adjust",
        "WebkitTextSizeAdjust",
        "webkitTextSizeAdjust"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      },
      "value": "auto | none | <percentage [0,∞]>"
    },
    {
      "name": "-webkit-box-align",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-box-align",
      "styleDeclaration": [
        "-webkit-box-align",
        "WebkitBoxAlign",
        "webkitBoxAlign"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-box-flex",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-box-flex",
      "styleDeclaration": [
        "-webkit-box-flex",
        "WebkitBoxFlex",
        "webkitBoxFlex"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-box-ordinal-group",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-box-ordinal-group",
      "styleDeclaration": [
        "-webkit-box-ordinal-group",
        "WebkitBoxOrdinalGroup",
        "webkitBoxOrdinalGroup"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-box-orient",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-box-orient",
      "styleDeclaration": [
        "-webkit-box-orient",
        "WebkitBoxOrient",
        "webkitBoxOrient"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-box-pack",
      "href": "https://compat.spec.whatwg.org/#propdef--webkit-box-pack",
      "styleDeclaration": [
        "-webkit-box-pack",
        "WebkitBoxPack",
        "webkitBoxPack"
      ],
      "spec": {
        "shortname": "compat",
        "currentSpec": true
      }
    },
    {
      "name": "mix-blend-mode",
      "href": "https://drafts.fxtf.org/compositing-2/#propdef-mix-blend-mode",
      "value": "<blend-mode> | plus-darker | plus-lighter",
      "initial": "normal",
      "appliesTo": "All elements. In SVG, it applies to container elements, graphics elements and graphics referencing elements. [SVG11]",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual",
      "animatable": "no",
      "styleDeclaration": [
        "mix-blend-mode",
        "mixBlendMode"
      ],
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      }
    },
    {
      "name": "isolation",
      "href": "https://drafts.fxtf.org/compositing-2/#propdef-isolation",
      "value": "<isolation-mode>",
      "initial": "auto",
      "appliesTo": "All elements. In SVG, it applies to container elements, graphics elements and graphics referencing elements. [SVG11]",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual",
      "animatable": "no",
      "styleDeclaration": [
        "isolation"
      ],
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      }
    },
    {
      "name": "background-blend-mode",
      "href": "https://drafts.fxtf.org/compositing-2/#propdef-background-blend-mode",
      "value": "<mix-blend-mode>#",
      "initial": "normal",
      "appliesTo": "All HTML elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual",
      "animatable": "no",
      "styleDeclaration": [
        "background-blend-mode",
        "backgroundBlendMode"
      ],
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      }
    },
    {
      "name": "align-content",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-align-content",
      "value": "normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>",
      "initial": "normal",
      "appliesTo": "block containers, multicol containers, flex containers, and grid containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "align-content",
        "alignContent"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "justify-content",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-justify-content",
      "value": "normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]",
      "initial": "normal",
      "appliesTo": "multicol containers, flex containers, and grid containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "justify-content",
        "justifyContent"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "place-content",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-place-content",
      "value": "<'align-content'> <'justify-content'>?",
      "initial": "normal",
      "appliesTo": "block containers, flex containers, and grid containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "place-content",
        "placeContent"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "justify-self",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-justify-self",
      "value": "auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | anchor-center",
      "initial": "auto",
      "appliesTo": "block-level boxes, absolutely-positioned boxes, and grid items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "justify-self",
        "justifySelf"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "align-self",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-align-self",
      "value": "auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position> | anchor-center",
      "initial": "auto",
      "appliesTo": "flex items, grid items, and absolutely-positioned boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "align-self",
        "alignSelf"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "place-self",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-place-self",
      "value": "<'align-self'> <'justify-self'>?",
      "initial": "auto",
      "appliesTo": "block-level boxes, absolutely-positioned boxes, and grid items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "place-self",
        "placeSelf"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "justify-items",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-justify-items",
      "value": "normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ] | anchor-center",
      "initial": "legacy",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s), except for legacy (see prose)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "justify-items",
        "justifyItems"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "align-items",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-align-items",
      "value": "normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ] | anchor-center",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "align-items",
        "alignItems"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "place-items",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-place-items",
      "value": "<'align-items'> <'justify-items'>?",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "place-items",
        "placeItems"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "row-gap",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-row-gap",
      "value": "normal | <length-percentage [0,∞]>",
      "initial": "normal",
      "appliesTo": "multi-column containers, flex containers, grid containers",
      "inherited": "no",
      "percentages": "see § 8.3 Percentages In gap Properties",
      "computedValue": "specified keyword, else a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "row-gap",
        "rowGap"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "column-gap",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-column-gap",
      "value": "normal | <length-percentage [0,∞]>",
      "initial": "normal",
      "appliesTo": "multi-column containers, flex containers, grid containers",
      "inherited": "no",
      "percentages": "see § 8.3 Percentages In gap Properties",
      "computedValue": "specified keyword, else a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "column-gap",
        "columnGap"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "gap",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-gap",
      "value": "<'row-gap'> <'column-gap'>?",
      "initial": "see individual properties",
      "appliesTo": "multi-column containers, flex containers, grid containers",
      "inherited": "no",
      "percentages": "refer to corresponding dimension of the content area",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "gap"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "grid-row-gap",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-grid-row-gap",
      "legacyAliasOf": "row-gap",
      "styleDeclaration": [
        "grid-row-gap",
        "gridRowGap"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      },
      "value": "normal | <length-percentage [0,∞]>"
    },
    {
      "name": "grid-column-gap",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-grid-column-gap",
      "legacyAliasOf": "column-gap",
      "styleDeclaration": [
        "grid-column-gap",
        "gridColumnGap"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      },
      "value": "normal | <length-percentage [0,∞]>"
    },
    {
      "name": "grid-gap",
      "href": "https://drafts.csswg.org/css-align-3/#propdef-grid-gap",
      "legacyAliasOf": "gap",
      "styleDeclaration": [
        "grid-gap",
        "gridGap"
      ],
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      },
      "value": "<'row-gap'> <'column-gap'>?"
    },
    {
      "name": "anchor-name",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-anchor-name",
      "value": "none | <dashed-ident>#",
      "initial": "none",
      "appliesTo": "all elements that generate a principal box",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "anchor-name",
        "anchorName"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "anchor-scope",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-anchor-scope",
      "value": "none | all | <dashed-ident>#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "anchor-scope",
        "anchorScope"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "position-anchor",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-anchor",
      "value": "auto | <anchor-name>",
      "initial": "auto",
      "appliesTo": "absolutely positioned boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "position-anchor",
        "positionAnchor"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "position-area",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-area",
      "value": "none | <position-area>",
      "initial": "none",
      "appliesTo": "positioned boxes with a default anchor box",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a pair of keywords, see § 3.1.3 Computed Value and Serialization of <position-area>",
      "canonicalOrder": "per grammar",
      "animationType": "TBD",
      "styleDeclaration": [
        "position-area",
        "positionArea"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "top",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-top",
      "value": "auto | <length-percentage> | <anchor()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "top"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "left",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-left",
      "value": "auto | <length-percentage> | <anchor()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "left"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "right",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-right",
      "value": "auto | <length-percentage> | <anchor()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "right"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "bottom",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-bottom",
      "value": "auto | <length-percentage> | <anchor()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "bottom"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "position-visibility",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-visibility",
      "value": "always | [ anchors-valid || anchors-visible || no-overflow ]",
      "initial": "anchors-visible",
      "appliesTo": "absolutely positioned boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "position-visibility",
        "positionVisibility"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "width",
      "href": "https://drafts.csswg.org/css-sizing-3/#propdef-width",
      "value": "auto | <length-percentage [0,∞]> | min-content | max-content | fit-content(<length-percentage [0,∞]>) | <calc-size()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "all elements except non-replaced inlines",
      "inherited": "no",
      "percentages": "relative to width/height of containing block",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type, recursing into fit-content()",
      "logicalPropertyGroup": "size",
      "styleDeclaration": [
        "width"
      ],
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      }
    },
    {
      "name": "height",
      "href": "https://drafts.csswg.org/css-sizing-3/#propdef-height",
      "value": "auto | <length-percentage [0,∞]> | min-content | max-content | fit-content(<length-percentage [0,∞]>) | <calc-size()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "all elements except non-replaced inlines",
      "inherited": "no",
      "percentages": "relative to width/height of containing block",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type, recursing into fit-content()",
      "logicalPropertyGroup": "size",
      "styleDeclaration": [
        "height"
      ],
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      }
    },
    {
      "name": "min-width",
      "href": "https://drafts.csswg.org/css-sizing-3/#propdef-min-width",
      "value": "auto | <length-percentage [0,∞]> | min-content | max-content | fit-content(<length-percentage [0,∞]>) | <calc-size()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "all elements that accept width or height",
      "inherited": "no",
      "percentages": "relative to width/height of containing block",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value, recursing into fit-content()",
      "logicalPropertyGroup": "min-size",
      "styleDeclaration": [
        "min-width",
        "minWidth"
      ],
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      }
    },
    {
      "name": "min-height",
      "href": "https://drafts.csswg.org/css-sizing-3/#propdef-min-height",
      "value": "auto | <length-percentage [0,∞]> | min-content | max-content | fit-content(<length-percentage [0,∞]>) | <calc-size()> | <anchor-size()>",
      "initial": "auto",
      "appliesTo": "all elements that accept width or height",
      "inherited": "no",
      "percentages": "relative to width/height of containing block",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value, recursing into fit-content()",
      "logicalPropertyGroup": "min-size",
      "styleDeclaration": [
        "min-height",
        "minHeight"
      ],
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      }
    },
    {
      "name": "max-width",
      "href": "https://drafts.csswg.org/css-sizing-3/#propdef-max-width",
      "value": "none | <length-percentage [0,∞]> | min-content | max-content | fit-content(<length-percentage [0,∞]>) | <calc-size()> | <anchor-size()>",
      "initial": "none",
      "appliesTo": "all elements that accept width or height",
      "inherited": "no",
      "percentages": "relative to width/height of containing block",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value, recursing into fit-content()",
      "logicalPropertyGroup": "max-size",
      "styleDeclaration": [
        "max-width",
        "maxWidth"
      ],
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      }
    },
    {
      "name": "max-height",
      "href": "https://drafts.csswg.org/css-sizing-3/#propdef-max-height",
      "value": "none | <length-percentage [0,∞]> | min-content | max-content | fit-content(<length-percentage [0,∞]>) | <calc-size()> | <anchor-size()>",
      "initial": "none",
      "appliesTo": "all elements that accept width or height",
      "inherited": "no",
      "percentages": "relative to width/height of containing block",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value, recursing into fit-content()",
      "logicalPropertyGroup": "max-size",
      "styleDeclaration": [
        "max-height",
        "maxHeight"
      ],
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      }
    },
    {
      "name": "margin-top",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-margin-top",
      "value": "<length-percentage> | auto | <anchor-size()>",
      "initial": "0",
      "appliesTo": "all elements except internal table elements, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-top",
        "marginTop"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "margin-left",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-margin-left",
      "value": "<length-percentage> | auto | <anchor-size()>",
      "initial": "0",
      "appliesTo": "all elements except internal table elements, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-left",
        "marginLeft"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "margin-right",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-margin-right",
      "value": "<length-percentage> | auto | <anchor-size()>",
      "initial": "0",
      "appliesTo": "all elements except internal table elements, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-right",
        "marginRight"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "margin-bottom",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-margin-bottom",
      "value": "<length-percentage> | auto | <anchor-size()>",
      "initial": "0",
      "appliesTo": "all elements except internal table elements, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-bottom",
        "marginBottom"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "position-try-fallbacks",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-try-fallbacks",
      "value": "none | [ [<dashed-ident> || <try-tactic>] | <'position-area'> ]#",
      "initial": "none",
      "appliesTo": "absolutely positioned boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "position-try-fallbacks",
        "positionTryFallbacks"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "position-try-order",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-try-order",
      "value": "normal | <try-size>",
      "initial": "normal",
      "appliesTo": "absolutely positioned boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "position-try-order",
        "positionTryOrder"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "position-try",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-try",
      "value": "<'position-try-order'>? <'position-try-fallbacks'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "position-try",
        "positionTry"
      ],
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "animation-duration",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-duration",
      "value": "<time [0s,∞]>#",
      "initial": "0s",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a duration",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-duration",
        "animationDuration"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-composition",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-composition",
      "value": "<single-animation-composition>#",
      "initial": "replace",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-composition",
        "animationComposition"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-timeline",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-timeline",
      "value": "<single-animation-timeline>#",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item either the keyword none, the keyword auto, a case-sensitive css identifier, a computed scroll() function, or a computed view() function",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-timeline",
        "animationTimeline"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-type",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-type",
      "value": "<single-animation-trigger-type>#",
      "initial": "once",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-trigger-type",
        "animationTriggerType"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-timeline",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-timeline",
      "value": "<single-animation-timeline>#",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item either the keyword none, the keyword auto, a case-sensitive css identifier, a computed scroll() function, or a computed view() function",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-trigger-timeline",
        "animationTriggerTimeline"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-range",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-range",
      "value": "[ <'animation-trigger-range-start'> <'animation-trigger-range-end'>? ]#",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "animation-trigger-range",
        "animationTriggerRange"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-range-start",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-range-start",
      "value": "[ normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]#",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the specified named timeline range if one was specified, else to the entire timeline",
      "computedValue": "list, each item either the keyword normal or a timeline range and progress percentage",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-trigger-range-start",
        "animationTriggerRangeStart"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-range-end",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-range-end",
      "value": "[ normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]#",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the specified named timeline range if one was specified, else to the entire timeline",
      "computedValue": "list, each item either the keyword normal or a timeline range and progress percentage",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-trigger-range-end",
        "animationTriggerRangeEnd"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-exit-range",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-exit-range",
      "value": "[ <'animation-trigger-exit-range-start'> <'animation-trigger-exit-range-end'>? ]#",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "animation-trigger-exit-range",
        "animationTriggerExitRange"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-exit-range-start",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-exit-range-start",
      "value": "[ auto | normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]#",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the specified named timeline range if one was specified, else to the entire timeline",
      "computedValue": "list, each item either the keyword normal or a timeline range and progress percentage",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-trigger-exit-range-start",
        "animationTriggerExitRangeStart"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger-exit-range-end",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger-exit-range-end",
      "value": "[ auto | normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]#",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the specified named timeline range if one was specified, else to the entire timeline",
      "computedValue": "list, each item either the keyword normal or a timeline range and progress percentage",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-trigger-exit-range-end",
        "animationTriggerExitRangeEnd"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-trigger",
      "href": "https://drafts.csswg.org/css-animations-2/#propdef-animation-trigger",
      "value": "<single-animation-trigger>#",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-trigger",
        "animationTrigger"
      ],
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "animation-name",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-name",
      "value": "[ none | <keyframes-name> ]#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item either a case-sensitive css identifier or the keyword none",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-name",
        "animationName"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-timing-function",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-timing-function",
      "value": "<easing-function>#",
      "initial": "ease",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a computed <easing-function>",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-timing-function",
        "animationTimingFunction"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-iteration-count",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-iteration-count",
      "value": "<single-animation-iteration-count>#",
      "initial": "1",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item either a number or the keyword infinite",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-iteration-count",
        "animationIterationCount"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-direction",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-direction",
      "value": "<single-animation-direction>#",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-direction",
        "animationDirection"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-play-state",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-play-state",
      "value": "<single-animation-play-state>#",
      "initial": "running",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-play-state",
        "animationPlayState"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-delay",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-delay",
      "value": "<time>#",
      "initial": "0s",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a duration",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-delay",
        "animationDelay"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-fill-mode",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation-fill-mode",
      "value": "<single-animation-fill-mode>#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-fill-mode",
        "animationFillMode"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation",
      "href": "https://drafts.csswg.org/css-animations-1/#propdef-animation",
      "value": "<single-animation>#",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation"
      ],
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "background-repeat-x",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-repeat-x",
      "value": "<repetition>#",
      "initial": "repeat",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "background-repeat",
      "styleDeclaration": [
        "background-repeat-x",
        "backgroundRepeatX"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-repeat-y",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-repeat-y",
      "value": "<repetition>#",
      "initial": "repeat",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "background-repeat",
      "styleDeclaration": [
        "background-repeat-y",
        "backgroundRepeatY"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-repeat-block",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-repeat-block",
      "value": "<repetition>#",
      "initial": "repeat",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "background-repeat",
      "styleDeclaration": [
        "background-repeat-block",
        "backgroundRepeatBlock"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-repeat-inline",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-repeat-inline",
      "value": "<repetition>#",
      "initial": "repeat",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "background-repeat",
      "styleDeclaration": [
        "background-repeat-inline",
        "backgroundRepeatInline"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-repeat",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-repeat",
      "value": "<repeat-style>#",
      "initial": "repeat",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a pair of keywords, one per dimension",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "background-repeat",
        "backgroundRepeat"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background-position",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-position",
      "value": "<bg-position>#",
      "initial": "0% 0%",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to size of background positioning area minus size of background image; see text",
      "computedValue": "list, each item a pair of offsets (horizontal and vertical) from the top left origin each given as a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "styleDeclaration": [
        "background-position",
        "backgroundPosition"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background-position-x",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-position-x",
      "value": "[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#",
      "initial": "0%",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to width of background positioning area minus width of background image",
      "computedValue": "A list, each item consisting of: an offset given as a computed <length-percentage> value, plus an origin keyword",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "logicalPropertyGroup": "background-position",
      "styleDeclaration": [
        "background-position-x",
        "backgroundPositionX"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-position-y",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-position-y",
      "value": "[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#",
      "initial": "0%",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to height of background positioning area minus height of background image",
      "computedValue": "A list, each item consisting of: an offset given as a computed <length-percentage> value, plus an origin keyword",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "logicalPropertyGroup": "background-position",
      "styleDeclaration": [
        "background-position-y",
        "backgroundPositionY"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-position-inline",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-position-inline",
      "value": "[ center | [ [ start | end ]? <length-percentage>? ]! ]#",
      "initial": "0%",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to inline-size of background positioning area minus inline-size of background image",
      "computedValue": "A list, each item consisting of: an offset given as a computed <length-percentage> value, plus an origin keyword",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "logicalPropertyGroup": "background-position",
      "styleDeclaration": [
        "background-position-inline",
        "backgroundPositionInline"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-position-block",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-position-block",
      "value": "[ center | [ [ start | end ]? <length-percentage>? ]! ]#",
      "initial": "0%",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to size of background positioning area minus size of background image",
      "computedValue": "A list, each item consisting of: an offset given as a computed <length-percentage> value, plus an origin keyword",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "logicalPropertyGroup": "background-position",
      "styleDeclaration": [
        "background-position-block",
        "backgroundPositionBlock"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-clip",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-clip",
      "value": "<visual-box>#",
      "initial": "border-box",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "styleDeclaration": [
        "background-clip",
        "backgroundClip"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background-tbd",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-tbd",
      "value": "<bg-layer>#",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "background-tbd",
        "backgroundTbd"
      ],
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "background-color",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-color",
      "value": "<color>",
      "initial": "transparent",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "background-color",
        "backgroundColor"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background-image",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-image",
      "value": "<bg-image>#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item either an <image> or the keyword none",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "background-image",
        "backgroundImage"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background-attachment",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-attachment",
      "value": "<attachment>#",
      "initial": "scroll",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item the keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "background-attachment",
        "backgroundAttachment"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background-origin",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-origin",
      "value": "<visual-box>#",
      "initial": "padding-box",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "styleDeclaration": [
        "background-origin",
        "backgroundOrigin"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background-size",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background-size",
      "value": "<bg-size>#",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "see text",
      "computedValue": "list, each item a pair of sizes (one per axis) each represented as either a keyword or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "styleDeclaration": [
        "background-size",
        "backgroundSize"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "background",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-background",
      "value": "<bg-layer>#? , <final-bg-layer>",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "background"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-style",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-style",
      "value": "<line-style>{1,4}",
      "initial": "see individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-style",
        "borderStyle"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-width",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-width",
      "value": "<line-width>{1,4}",
      "initial": "see individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-width",
        "borderWidth"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-image-source",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-image-source",
      "value": "none | <image>",
      "initial": "none",
      "appliesTo": "All elements, except internal table elements when border-collapse is collapse",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword none or the computed <image>",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "border-image-source",
        "borderImageSource"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-image-slice",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-image-slice",
      "value": "[<number [0,∞]> | <percentage [0,∞]>]{1,4} && fill?",
      "initial": "100%",
      "appliesTo": "All elements, except internal table elements when border-collapse is collapse",
      "inherited": "no",
      "percentages": "refer to size of the border image",
      "computedValue": "four values, each either a number or percentage; plus a fill keyword if specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-image-slice",
        "borderImageSlice"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-image-width",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-image-width",
      "value": "[ <length-percentage [0,∞]> | <number [0,∞]> | auto ]{1,4}",
      "initial": "1",
      "appliesTo": "All elements, except internal table elements when border-collapse is collapse",
      "inherited": "no",
      "percentages": "Relative to width/height of the border image area",
      "computedValue": "four values, each either a number, the keyword auto, or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-image-width",
        "borderImageWidth"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-image-outset",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-image-outset",
      "value": "[ <length [0,∞]> | <number [0,∞]> ]{1,4}",
      "initial": "0",
      "appliesTo": "All elements, except internal table elements when border-collapse is collapse",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "four values, each a number or absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-image-outset",
        "borderImageOutset"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-image-repeat",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-image-repeat",
      "value": "[ stretch | repeat | round | space ]{1,2}",
      "initial": "stretch",
      "appliesTo": "All elements, except internal table elements when border-collapse is collapse",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "two keywords, one per axis",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "border-image-repeat",
        "borderImageRepeat"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-image",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#propdef-border-image",
      "value": "<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>",
      "initial": "See individual properties",
      "appliesTo": "See individual properties",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "See individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "See individual properties",
      "styleDeclaration": [
        "border-image",
        "borderImage"
      ],
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "border-top-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-top-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-top-color",
        "borderTopColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-right-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-right-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-right-color",
        "borderRightColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-bottom-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-bottom-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-bottom-color",
        "borderBottomColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-left-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-left-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-left-color",
        "borderLeftColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-start-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-start-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-block-start-color",
        "borderBlockStartColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-end-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-end-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-block-end-color",
        "borderBlockEndColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-start-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-start-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-inline-start-color",
        "borderInlineStartColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-end-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-end-color",
      "value": "<color> | <image-1D>",
      "initial": "currentcolor",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the computed color and/or a one-dimensional image function",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "logicalPropertyGroup": "border-color",
      "styleDeclaration": [
        "border-inline-end-color",
        "borderInlineEndColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-color",
      "value": "[ <color> | <image-1D> ]{1,4}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-color",
        "borderColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-color",
      "value": "<'border-top-color'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-block-color",
        "borderBlockColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-color",
      "value": "<'border-top-color'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-inline-color",
        "borderInlineColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-top-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-top-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-top-style",
        "borderTopStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-right-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-right-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-right-style",
        "borderRightStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-bottom-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-bottom-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-bottom-style",
        "borderBottomStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-left-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-left-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-left-style",
        "borderLeftStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-start-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-start-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-block-start-style",
        "borderBlockStartStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-end-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-end-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-block-end-style",
        "borderBlockEndStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-start-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-start-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-inline-start-style",
        "borderInlineStartStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-end-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-end-style",
      "value": "<line-style>",
      "initial": "none",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "border-style",
      "styleDeclaration": [
        "border-inline-end-style",
        "borderInlineEndStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-style",
      "value": "<'border-top-style'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-block-style",
        "borderBlockStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-style",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-style",
      "value": "<'border-top-style'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-inline-style",
        "borderInlineStyle"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-top-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-top-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-top-width",
        "borderTopWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-right-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-right-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-right-width",
        "borderRightWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-bottom-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-bottom-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-bottom-width",
        "borderBottomWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-left-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-left-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-left-width",
        "borderLeftWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-start-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-start-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-block-start-width",
        "borderBlockStartWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-end-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-end-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-block-end-width",
        "borderBlockEndWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-start-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-start-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-inline-start-width",
        "borderInlineStartWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-end-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-end-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; zero if the border style is none or hidden",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-width",
      "styleDeclaration": [
        "border-inline-end-width",
        "borderInlineEndWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-width",
      "value": "<'border-top-width'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-block-width",
        "borderBlockWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-width",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-width",
      "value": "<'border-top-width'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-inline-width",
        "borderInlineWidth"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-top",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-top",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-top",
        "borderTop"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-right",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-right",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-right",
        "borderRight"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-bottom",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-bottom",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-bottom",
        "borderBottom"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-left",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-left",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-left",
        "borderLeft"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-start",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-start",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-block-start",
        "borderBlockStart"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-end",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-end",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-block-end",
        "borderBlockEnd"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-start",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-start",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-inline-start",
        "borderInlineStart"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-end",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-end",
      "value": "<line-width> || <line-style> || <color>",
      "initial": "See individual properties",
      "appliesTo": "all elements except ruby base containers and ruby annotation containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-inline-end",
        "borderInlineEnd"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block",
      "value": "<'border-block-start'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-block",
        "borderBlock"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline",
      "value": "<'border-block-start'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "border-inline",
        "borderInline"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-top-left-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-top-left-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-top-left-radius",
        "borderTopLeftRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-top-right-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-top-right-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-top-right-radius",
        "borderTopRightRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-bottom-right-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-bottom-right-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-bottom-right-radius",
        "borderBottomRightRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-bottom-left-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-bottom-left-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-bottom-left-radius",
        "borderBottomLeftRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-start-start-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-start-start-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-start-start-radius",
        "borderStartStartRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-start-end-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-start-end-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-start-end-radius",
        "borderStartEndRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-end-start-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-end-start-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-end-start-radius",
        "borderEndStartRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-end-end-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-end-end-radius",
      "value": "<length-percentage [0,∞]>{1,2}",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "pair of computed <length-percentage> values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "logicalPropertyGroup": "border-radius",
      "styleDeclaration": [
        "border-end-end-radius",
        "borderEndEndRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-top-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-top-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-top-radius",
        "borderTopRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-right-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-right-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-right-radius",
        "borderRightRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-bottom-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-bottom-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-bottom-radius",
        "borderBottomRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-left-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-left-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-left-radius",
        "borderLeftRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-start-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-start-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-block-start-radius",
        "borderBlockStartRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-block-end-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-block-end-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-block-end-radius",
        "borderBlockEndRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-start-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-start-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-inline-start-radius",
        "borderInlineStartRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-inline-end-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-inline-end-radius",
      "value": "<length-percentage [0,∞]>{1,2} [ / <length-percentage [0,∞]>{1,2} ]?",
      "initial": "0",
      "appliesTo": "all elements (but see prose)",
      "inherited": "no",
      "percentages": "Refer to corresponding dimension of the border box.",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-inline-end-radius",
        "borderInlineEndRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-radius",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-radius",
      "value": "<length-percentage [0,∞]>{1,4} [ / <length-percentage [0,∞]>{1,4} ]?",
      "initial": "0",
      "appliesTo": "all elements, except table element when border-collapse is collapse",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "border-radius",
        "borderRadius"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-shape",
      "value": "<corner-shape-value>{1,4}",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-shape",
        "cornerShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-top-left-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-top-left-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-top-left-shape",
        "cornerTopLeftShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-top-right-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-top-right-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-top-right-shape",
        "cornerTopRightShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-bottom-right-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-bottom-right-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-bottom-right-shape",
        "cornerBottomRightShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-bottom-left-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-bottom-left-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-bottom-left-shape",
        "cornerBottomLeftShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-start-start-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-start-start-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-start-start-shape",
        "cornerStartStartShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-start-end-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-start-end-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-start-end-shape",
        "cornerStartEndShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-end-start-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-end-start-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-end-start-shape",
        "cornerEndStartShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-end-end-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-end-end-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the corresponding superellipse() value",
      "canonicalOrder": "per grammar",
      "animationType": "see superellipse interpolation",
      "logicalPropertyGroup": "corner-shape",
      "styleDeclaration": [
        "corner-end-end-shape",
        "cornerEndEndShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-top-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-top-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-top-shape",
        "cornerTopShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-right-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-right-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-right-shape",
        "cornerRightShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-bottom-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-bottom-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-bottom-shape",
        "cornerBottomShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-left-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-left-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-left-shape",
        "cornerLeftShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-block-start-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-block-start-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-block-start-shape",
        "cornerBlockStartShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-block-end-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-block-end-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-block-end-shape",
        "cornerBlockEndShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-inline-start-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-inline-start-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-inline-start-shape",
        "cornerInlineStartShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "corner-inline-end-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-corner-inline-end-shape",
      "value": "<corner-shape-value>",
      "initial": "round",
      "appliesTo": "all elements where border-radius can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "corner-inline-end-shape",
        "cornerInlineEndShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-limit",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-limit",
      "value": "all | [ sides | corners ] <length-percentage [0,∞]>? | [ top | right | bottom | left ] <length-percentage [0,∞]>",
      "initial": "all",
      "appliesTo": "all elements, except table element when border-collapse is collapse",
      "inherited": "no",
      "percentages": "relative to border-box",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "border-limit",
        "borderLimit"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-clip",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-clip",
      "value": "normal | [ <length-percentage [0,∞]> | <flex> ]+",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to length of border-edge side",
      "computedValue": "normal, or a list consisting of absolute lengths, or percentages as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-clip",
        "borderClip"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-clip-top",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-clip-top",
      "value": "normal | [ <length-percentage [0,∞]> | <flex> ]+",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to length of border-edge side",
      "computedValue": "normal, or a list consisting of absolute lengths, or percentages as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-clip-top",
        "borderClipTop"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-clip-right",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-clip-right",
      "value": "normal | [ <length-percentage [0,∞]> | <flex> ]+",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to length of border-edge side",
      "computedValue": "normal, or a list consisting of absolute lengths, or percentages as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-clip-right",
        "borderClipRight"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-clip-bottom",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-clip-bottom",
      "value": "normal | [ <length-percentage [0,∞]> | <flex> ]+",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to length of border-edge side",
      "computedValue": "normal, or a list consisting of absolute lengths, or percentages as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-clip-bottom",
        "borderClipBottom"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-clip-left",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-clip-left",
      "value": "normal | [ <length-percentage [0,∞]> | <flex> ]+",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "refer to length of border-edge side",
      "computedValue": "normal, or a list consisting of absolute lengths, or percentages as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-clip-left",
        "borderClipLeft"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "box-shadow-color",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-box-shadow-color",
      "value": "<color>#",
      "initial": "currentcolor",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "box-shadow-color",
        "boxShadowColor"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "box-shadow-offset",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-box-shadow-offset",
      "value": "[ none | <length>{2} ]#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item either none or a pair of offsets (horizontal and vertical) from the element‘s box",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value, treating none as 0 0 when interpolated with non-none values.",
      "styleDeclaration": [
        "box-shadow-offset",
        "boxShadowOffset"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "box-shadow-blur",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-box-shadow-blur",
      "value": "<length [0,∞]>#",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a <length>",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "box-shadow-blur",
        "boxShadowBlur"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "box-shadow-spread",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-box-shadow-spread",
      "value": "<length>#",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a <length>",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "box-shadow-spread",
        "boxShadowSpread"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "box-shadow-position",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-box-shadow-position",
      "value": "[ outset | inset ]#",
      "initial": "outset",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item one of the keywords",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "box-shadow-position",
        "boxShadowPosition"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "box-shadow",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-box-shadow",
      "value": "<spread-shadow>#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "box-shadow",
        "boxShadow"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "border-shape",
      "href": "https://drafts.csswg.org/css-borders-4/#propdef-border-shape",
      "value": "none | [ <basic-shape> <geometry-box>?]{1,2}",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the given <geometry-box>, or to border box if not given.",
      "computedValue": "list, each item a computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-shape",
        "borderShape"
      ],
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "margin",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-margin",
      "value": "<'margin-top'>{1,4}",
      "initial": "0",
      "appliesTo": "all elements except internal table elements, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "margin"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "margin-trim",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-margin-trim",
      "value": "none | [ block || inline ] | [ block-start || inline-start || block-end || inline-end ]",
      "initial": "none",
      "appliesTo": "block containers, multi-column containers, flex containers, grid containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "a set of zero to four keywords indicating which sides to trim",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "margin-trim",
        "marginTrim"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "padding-top",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-padding-top",
      "value": "<length-percentage [0,∞]>",
      "initial": "0",
      "appliesTo": "all elements except: internal table elements other than table cells, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-top",
        "paddingTop"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "padding-right",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-padding-right",
      "value": "<length-percentage [0,∞]>",
      "initial": "0",
      "appliesTo": "all elements except: internal table elements other than table cells, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-right",
        "paddingRight"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "padding-bottom",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-padding-bottom",
      "value": "<length-percentage [0,∞]>",
      "initial": "0",
      "appliesTo": "all elements except: internal table elements other than table cells, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-bottom",
        "paddingBottom"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "padding-left",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-padding-left",
      "value": "<length-percentage [0,∞]>",
      "initial": "0",
      "appliesTo": "all elements except: internal table elements other than table cells, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-left",
        "paddingLeft"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "padding",
      "href": "https://drafts.csswg.org/css-box-4/#propdef-padding",
      "value": "<'padding-top'>{1,4}",
      "initial": "0",
      "appliesTo": "all elements except: internal table elements other than table cells, ruby base containers, and ruby annotation containers",
      "inherited": "no",
      "percentages": "refer to logical width of containing block",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "padding"
      ],
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "break-before",
      "href": "https://drafts.csswg.org/css-break-4/#propdef-break-before",
      "value": "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
      "initial": "auto",
      "appliesTo": "block-level boxes, grid items, flex items, table row groups, table rows (but see prose)",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "break-before",
        "breakBefore"
      ],
      "spec": {
        "shortname": "css-break",
        "currentSpec": true
      }
    },
    {
      "name": "break-after",
      "href": "https://drafts.csswg.org/css-break-4/#propdef-break-after",
      "value": "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
      "initial": "auto",
      "appliesTo": "block-level boxes, grid items, flex items, table row groups, table rows (but see prose)",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "break-after",
        "breakAfter"
      ],
      "spec": {
        "shortname": "css-break",
        "currentSpec": true
      }
    },
    {
      "name": "break-inside",
      "href": "https://drafts.csswg.org/css-break-4/#propdef-break-inside",
      "value": "auto | avoid | avoid-page | avoid-column | avoid-region",
      "initial": "auto",
      "appliesTo": "all elements except inline-level boxes, internal ruby boxes, table column boxes, table column group boxes, absolutely-positioned boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "break-inside",
        "breakInside"
      ],
      "spec": {
        "shortname": "css-break",
        "currentSpec": true
      }
    },
    {
      "name": "orphans",
      "href": "https://drafts.csswg.org/css-break-4/#propdef-orphans",
      "value": "<integer [1,∞]>",
      "initial": "2",
      "appliesTo": "block containers that establish an inline formatting context",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "orphans"
      ],
      "spec": {
        "shortname": "css-break",
        "currentSpec": true
      }
    },
    {
      "name": "widows",
      "href": "https://drafts.csswg.org/css-break-4/#propdef-widows",
      "value": "<integer [1,∞]>",
      "initial": "2",
      "appliesTo": "block containers that establish an inline formatting context",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "widows"
      ],
      "spec": {
        "shortname": "css-break",
        "currentSpec": true
      }
    },
    {
      "name": "margin-break",
      "href": "https://drafts.csswg.org/css-break-4/#propdef-margin-break",
      "value": "auto | keep | discard",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "margin-break",
        "marginBreak"
      ],
      "spec": {
        "shortname": "css-break",
        "currentSpec": true
      }
    },
    {
      "name": "box-decoration-break",
      "href": "https://drafts.csswg.org/css-break-4/#propdef-box-decoration-break",
      "value": "slice | clone",
      "initial": "slice",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "box-decoration-break",
        "boxDecorationBreak"
      ],
      "spec": {
        "shortname": "css-break",
        "currentSpec": true
      }
    },
    {
      "name": "all",
      "href": "https://drafts.csswg.org/css-cascade-5/#propdef-all",
      "value": "initial | inherit | unset | revert | revert-layer",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "all"
      ],
      "spec": {
        "shortname": "css-cascade",
        "currentSpec": true
      }
    },
    {
      "name": "color-scheme",
      "href": "https://drafts.csswg.org/css-color-adjust-1/#propdef-color-scheme",
      "value": "normal | [ light | dark | <custom-ident> ]+ && only?",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the keyword normal, or an ordered list of specified color scheme keywords",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "color-scheme",
        "colorScheme"
      ],
      "spec": {
        "shortname": "css-color-adjust",
        "currentSpec": true
      }
    },
    {
      "name": "forced-color-adjust",
      "href": "https://drafts.csswg.org/css-color-adjust-1/#propdef-forced-color-adjust",
      "value": "auto | none | preserve-parent-color",
      "initial": "auto",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "forced-color-adjust",
        "forcedColorAdjust"
      ],
      "spec": {
        "shortname": "css-color-adjust",
        "currentSpec": true
      }
    },
    {
      "name": "print-color-adjust",
      "href": "https://drafts.csswg.org/css-color-adjust-1/#propdef-print-color-adjust",
      "value": "economy | exact",
      "initial": "economy",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "print-color-adjust",
        "printColorAdjust"
      ],
      "spec": {
        "shortname": "css-color-adjust",
        "currentSpec": true
      }
    },
    {
      "name": "color-adjust",
      "href": "https://drafts.csswg.org/css-color-adjust-1/#propdef-color-adjust",
      "value": "<'print-color-adjust'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "color-adjust",
        "colorAdjust"
      ],
      "spec": {
        "shortname": "css-color-adjust",
        "currentSpec": true
      }
    },
    {
      "name": "dynamic-range-limit",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#propdef-dynamic-range-limit",
      "value": "standard | no-limit | constrained | <dynamic-range-limit-mix()>",
      "initial": "no-limit",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "see Computed Value for dynamic-range-limit",
      "canonicalOrder": "per grammar",
      "animationType": "by dynamic-range-limit-mix()",
      "styleDeclaration": [
        "dynamic-range-limit",
        "dynamicRangeLimit"
      ],
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "color",
      "href": "https://drafts.csswg.org/css-color-4/#propdef-color",
      "value": "<color>",
      "initial": "CanvasText",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "computed color, see resolving color values",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "color"
      ],
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "opacity",
      "href": "https://drafts.csswg.org/css-color-4/#propdef-opacity",
      "value": "<opacity-value>",
      "initial": "1",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "map to the range [0,1]",
      "computedValue": "specified number, clamped to the range [0,1]",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "opacity"
      ],
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "container-type",
      "href": "https://drafts.csswg.org/css-conditional-5/#propdef-container-type",
      "value": "normal | [ [ size | inline-size ] || scroll-state ]",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "container-type",
        "containerType"
      ],
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "container-name",
      "href": "https://drafts.csswg.org/css-conditional-5/#propdef-container-name",
      "value": "none | <custom-ident>+",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none, or an ordered list of identifiers",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "container-name",
        "containerName"
      ],
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "container",
      "href": "https://drafts.csswg.org/css-conditional-5/#propdef-container",
      "value": "<'container-name'> [ / <'container-type'> ]?",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "container"
      ],
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "contain",
      "href": "https://drafts.csswg.org/css-contain-2/#propdef-contain",
      "value": "none | strict | content | [ [size | inline-size] || layout || style || paint ]",
      "initial": "none",
      "appliesTo": "See below",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or one or more of size, layout, paint",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "contain"
      ],
      "spec": {
        "shortname": "css-contain",
        "currentSpec": true
      }
    },
    {
      "name": "content-visibility",
      "href": "https://drafts.csswg.org/css-contain-2/#propdef-content-visibility",
      "value": "visible | auto | hidden",
      "initial": "visible",
      "appliesTo": "elements for which size containment can apply",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "see § 4.1 Animating and Interpolating content-visibility",
      "styleDeclaration": [
        "content-visibility",
        "contentVisibility"
      ],
      "spec": {
        "shortname": "css-contain",
        "currentSpec": true
      }
    },
    {
      "name": "content",
      "href": "https://drafts.csswg.org/css-content-3/#propdef-content",
      "value": "normal | none | [ <content-replacement> | <content-list> ] [/ [ <string> | <counter> | <attr()> ]+ ]? | <element()>",
      "initial": "normal",
      "appliesTo": "all elements, tree-abiding pseudo-elements, and page margin boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "See prose below",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "content"
      ],
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "quotes",
      "href": "https://drafts.csswg.org/css-content-3/#propdef-quotes",
      "value": "auto | none | match-parent | [ <string> <string> ]+",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the keyword none, the keyword auto or match-parent, or a list, each item a pair of string values",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "quotes"
      ],
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "string-set",
      "href": "https://drafts.csswg.org/css-content-3/#propdef-string-set",
      "value": "none | [ <custom-ident> <string>+ ]#",
      "initial": "none",
      "appliesTo": "all elements, but not pseudo-elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword none or a list, each item an identifier paired with a list of string values",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "string-set",
        "stringSet"
      ],
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "bookmark-level",
      "href": "https://drafts.csswg.org/css-content-3/#propdef-bookmark-level",
      "value": "none | <integer [1,∞]>",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword none or the specified integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "bookmark-level",
        "bookmarkLevel"
      ],
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "bookmark-label",
      "href": "https://drafts.csswg.org/css-content-3/#propdef-bookmark-label",
      "value": "<content-list>",
      "initial": "content(text)",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "bookmark-label",
        "bookmarkLabel"
      ],
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "bookmark-state",
      "href": "https://drafts.csswg.org/css-content-3/#propdef-bookmark-state",
      "value": "open | closed",
      "initial": "open",
      "appliesTo": "block-level elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "bookmark-state",
        "bookmarkState"
      ],
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "display",
      "href": "https://drafts.csswg.org/css-display-4/#propdef-display",
      "value": "[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy> | <display-outside> || [ <display-inside> | math ]",
      "initial": "inline",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "a pair of keywords representing the inner and outer display types plus optional list-item flag, or a <display-internal> or <display-box> keyword; see prose in a variety of specs for computation rules",
      "canonicalOrder": "per grammar",
      "animationType": "see § 2.9 Animating and Interpolating display",
      "styleDeclaration": [
        "display"
      ],
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "order",
      "href": "https://drafts.csswg.org/css-display-4/#propdef-order",
      "value": "<integer>",
      "initial": "0",
      "appliesTo": "flex items and grid items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "order"
      ],
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "reading-flow",
      "href": "https://drafts.csswg.org/css-display-4/#propdef-reading-flow",
      "value": "normal | source-order | flex-visual | flex-flow | grid-rows | grid-columns | grid-order",
      "initial": "normal",
      "appliesTo": "block, flex and grid containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "reading-flow",
        "readingFlow"
      ],
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "reading-order",
      "href": "https://drafts.csswg.org/css-display-4/#propdef-reading-order",
      "value": "<integer>",
      "initial": "0",
      "appliesTo": "Direct block-level, grid item, or flex item children of a reading flow container.",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "reading-order",
        "readingOrder"
      ],
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "visibility",
      "href": "https://drafts.csswg.org/css-display-4/#propdef-visibility",
      "value": "visible | hidden | force-hidden | collapse",
      "initial": "visible",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "visibility"
      ],
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "wrap-flow",
      "href": "https://drafts.csswg.org/css-exclusions-1/#propdef-wrap-flow",
      "value": "auto | both | start | end | minimum | maximum | clear",
      "initial": "auto",
      "appliesTo": "block-level elements.",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified except for element’s whose float computed value is not none, in which case the computed value is auto.",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "wrap-flow",
        "wrapFlow"
      ],
      "spec": {
        "shortname": "css-exclusions",
        "currentSpec": true
      }
    },
    {
      "name": "wrap-through",
      "href": "https://drafts.csswg.org/css-exclusions-1/#propdef-wrap-through",
      "value": "wrap | none",
      "initial": "wrap",
      "appliesTo": "block-level elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "wrap-through",
        "wrapThrough"
      ],
      "spec": {
        "shortname": "css-exclusions",
        "currentSpec": true
      }
    },
    {
      "name": "flex-direction",
      "href": "https://drafts.csswg.org/css-flexbox-1/#propdef-flex-direction",
      "value": "row | row-reverse | column | column-reverse",
      "initial": "row",
      "appliesTo": "flex containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "flex-direction",
        "flexDirection"
      ],
      "spec": {
        "shortname": "css-flexbox",
        "currentSpec": true
      }
    },
    {
      "name": "flex-wrap",
      "href": "https://drafts.csswg.org/css-flexbox-1/#propdef-flex-wrap",
      "value": "nowrap | wrap | wrap-reverse",
      "initial": "nowrap",
      "appliesTo": "flex containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "flex-wrap",
        "flexWrap"
      ],
      "spec": {
        "shortname": "css-flexbox",
        "currentSpec": true
      }
    },
    {
      "name": "flex-flow",
      "href": "https://drafts.csswg.org/css-flexbox-1/#propdef-flex-flow",
      "value": "<'flex-direction'> || <'flex-wrap'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "flex-flow",
        "flexFlow"
      ],
      "spec": {
        "shortname": "css-flexbox",
        "currentSpec": true
      }
    },
    {
      "name": "flex",
      "href": "https://drafts.csswg.org/css-flexbox-1/#propdef-flex",
      "value": "none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]",
      "initial": "0 1 auto",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "by computed value type",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "flex"
      ],
      "spec": {
        "shortname": "css-flexbox",
        "currentSpec": true
      }
    },
    {
      "name": "flex-grow",
      "href": "https://drafts.csswg.org/css-flexbox-1/#propdef-flex-grow",
      "value": "<number [0,∞]>",
      "initial": "0",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified number",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "flex-grow",
        "flexGrow"
      ],
      "spec": {
        "shortname": "css-flexbox",
        "currentSpec": true
      }
    },
    {
      "name": "flex-shrink",
      "href": "https://drafts.csswg.org/css-flexbox-1/#propdef-flex-shrink",
      "value": "<number [0,∞]>",
      "initial": "1",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "number",
      "styleDeclaration": [
        "flex-shrink",
        "flexShrink"
      ],
      "spec": {
        "shortname": "css-flexbox",
        "currentSpec": true
      }
    },
    {
      "name": "flex-basis",
      "href": "https://drafts.csswg.org/css-flexbox-1/#propdef-flex-basis",
      "value": "content | <'width'>",
      "initial": "auto",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "relative to the flex container’s inner main size",
      "computedValue": "specified keyword or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "flex-basis",
        "flexBasis"
      ],
      "spec": {
        "shortname": "css-flexbox",
        "currentSpec": true
      }
    },
    {
      "name": "font-size-adjust",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-size-adjust",
      "value": "none | <number [0,∞]>",
      "initial": "none",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "a number or the keyword none",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "font-size-adjust",
        "fontSizeAdjust"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-family",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-family",
      "value": "[ <family-name> | <generic-family> ]#",
      "initial": "depends on user agent",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "list, each item a string and/or <generic-family> keywords",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-family",
        "fontFamily"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-weight",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-weight",
      "value": "<font-weight-absolute> | bolder | lighter",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "a number, see below",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "font-weight",
        "fontWeight"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-width",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-width",
      "value": "normal | <percentage [0,∞]> | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "Not resolved",
      "computedValue": "a percentage, see below",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "font-width",
        "fontWidth"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-style",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-style",
      "value": "normal | italic | left | right | oblique <angle [-90deg,90deg]>?",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the keyword specified, plus angle in degrees if specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type;normal animates as oblique 0deg",
      "styleDeclaration": [
        "font-style",
        "fontStyle"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-size",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-size",
      "value": "<absolute-size> | <relative-size> | <length-percentage [0,∞]> | math",
      "initial": "medium",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "refer to parent element’s font size",
      "computedValue": "an absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "font-size",
        "fontSize"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font",
      "value": "[ [ <'font-style'> || <font-variant-css2> || <'font-weight'> || <font-width-css3> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'># ] | <system-family-name>",
      "initial": "see individual properties",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "font"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-synthesis-weight",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-synthesis-weight",
      "value": "auto | none",
      "initial": "auto",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "font-synthesis-weight",
        "fontSynthesisWeight"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-synthesis-style",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-synthesis-style",
      "value": "auto | none | oblique-only",
      "initial": "auto",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "font-synthesis-style",
        "fontSynthesisStyle"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-synthesis-small-caps",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-synthesis-small-caps",
      "value": "auto | none",
      "initial": "auto",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-synthesis-small-caps",
        "fontSynthesisSmallCaps"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-synthesis-position",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-synthesis-position",
      "value": "auto | none",
      "initial": "auto",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-synthesis-position",
        "fontSynthesisPosition"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-synthesis",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-synthesis",
      "value": "none | [ weight || style || small-caps || position]",
      "initial": "weight style small-caps position",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-synthesis",
        "fontSynthesis"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-kerning",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-kerning",
      "value": "auto | normal | none",
      "initial": "auto",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-kerning",
        "fontKerning"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant-ligatures",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-ligatures",
      "value": "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant-ligatures",
        "fontVariantLigatures"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant-position",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-position",
      "value": "normal | sub | super",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant-position",
        "fontVariantPosition"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant-caps",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-caps",
      "value": "normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant-caps",
        "fontVariantCaps"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant-numeric",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-numeric",
      "value": "normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant-numeric",
        "fontVariantNumeric"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant-alternates",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-alternates",
      "value": "normal | [ stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) ]",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant-alternates",
        "fontVariantAlternates"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant-east-asian",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-east-asian",
      "value": "normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant-east-asian",
        "fontVariantEastAsian"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant",
      "value": "normal | none | [ [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ] || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || [ stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) ] || [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ] || [ <east-asian-variant-values> || <east-asian-width-values> || ruby ] || [ sub | super ] || [ text | emoji | unicode ] ]",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant",
        "fontVariant"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-feature-settings",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-feature-settings",
      "value": "normal | <feature-tag-value>#",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-feature-settings",
        "fontFeatureSettings"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-language-override",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-language-override",
      "value": "normal | <string>",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified string or the keyword none",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-language-override",
        "fontLanguageOverride"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-optical-sizing",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-optical-sizing",
      "value": "auto | none",
      "initial": "auto",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-optical-sizing",
        "fontOpticalSizing"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variation-settings",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variation-settings",
      "value": "normal | [ <opentype-tag> <number>]#",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the keyword normal or a list, each item a string paired with a number",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "styleDeclaration": [
        "font-variation-settings",
        "fontVariationSettings"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-palette",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-palette",
      "value": "normal | light | dark | <palette-identifier> | <palette-mix()>",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/a",
      "computedValue": "specified keyword, identifier or <palette-mix()> function. <palette-mix()> must be simplified to a single keyword or identifier if resulting palette is equivalent.",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "font-palette",
        "fontPalette"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-variant-emoji",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-emoji",
      "value": "normal | text | emoji | unicode",
      "initial": "normal",
      "appliesTo": "all elements and text",
      "inherited": "yes",
      "percentages": "N/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "font-variant-emoji",
        "fontVariantEmoji"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "font-stretch",
      "href": "https://drafts.csswg.org/css-fonts-4/#propdef-font-stretch",
      "legacyAliasOf": "font-width",
      "styleDeclaration": [
        "font-stretch",
        "fontStretch"
      ],
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      },
      "value": "normal | <percentage [0,∞]> | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded"
    },
    {
      "name": "appearance",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-appearance",
      "value": "none | auto | base | <compat-auto> | <compat-special> | base",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "appearance"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "field-sizing",
      "href": "https://drafts.csswg.org/css-forms-1/#propdef-field-sizing",
      "value": "fixed | content",
      "initial": "fixed",
      "appliesTo": "elements with default preferred size",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "field-sizing",
        "fieldSizing"
      ],
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "name": "slider-orientation",
      "href": "https://drafts.csswg.org/css-forms-1/#propdef-slider-orientation",
      "value": "auto | left-to-right | right-to-left | top-to-bottom | bottom-to-top",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "slider-orientation",
        "sliderOrientation"
      ],
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "name": "input-security",
      "href": "https://drafts.csswg.org/css-forms-1/#propdef-input-security",
      "value": "auto | none",
      "initial": "auto",
      "appliesTo": "sensitive text inputs",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "input-security",
        "inputSecurity"
      ],
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "name": "column-rule-break",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-column-rule-break",
      "value": "none | spanning-item | intersection",
      "initial": "spanning-item",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "column-rule-break",
        "columnRuleBreak"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "row-rule-break",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-row-rule-break",
      "value": "none | spanning-item | intersection",
      "initial": "spanning-item",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "row-rule-break",
        "rowRuleBreak"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "rule-break",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-rule-break",
      "value": "<'column-rule-break'>",
      "initial": "see individual properties",
      "appliesTo": "Same as column-rule-break and row-rule-break",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rule-break",
        "ruleBreak"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "column-rule-outset",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-column-rule-outset",
      "value": "<length-percentage>",
      "initial": "50%",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "refer to the crossing gap width",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "column-rule-outset",
        "columnRuleOutset"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "row-rule-outset",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-row-rule-outset",
      "value": "<length-percentage>",
      "initial": "50%",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "refer to the crossing gap width",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "row-rule-outset",
        "rowRuleOutset"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "rule-outset",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-rule-outset",
      "value": "<'column-rule-outset'>",
      "initial": "see individual properties",
      "appliesTo": "Same as column-rule-outset and row-rule-outset",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rule-outset",
        "ruleOutset"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "rule-paint-order",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-rule-paint-order",
      "value": "row-over-column | column-over-row",
      "initial": "row-over-column",
      "appliesTo": "grid containers, flex containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "rule-paint-order",
        "rulePaintOrder"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "column-rule-color",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-column-rule-color",
      "value": "<line-color-list> | <auto-line-color-list>",
      "initial": "currentcolor",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "column-rule-color",
        "columnRuleColor"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "row-rule-color",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-row-rule-color",
      "value": "<line-color-list> | <auto-line-color-list>",
      "initial": "currentcolor",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "row-rule-color",
        "rowRuleColor"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "column-rule-style",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-column-rule-style",
      "value": "<line-style-list> | <auto-line-style-list>",
      "initial": "none",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "column-rule-style",
        "columnRuleStyle"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "row-rule-style",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-row-rule-style",
      "value": "<line-style-list> | <auto-line-style-list>",
      "initial": "none",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "row-rule-style",
        "rowRuleStyle"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "column-rule-width",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-column-rule-width",
      "value": "<line-width-list> | <auto-line-width-list>",
      "initial": "medium",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "list of absolute lengths, snapped as a border width, or 0 under conditions described below",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "column-rule-width",
        "columnRuleWidth"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "row-rule-width",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-row-rule-width",
      "value": "<line-width-list> | <auto-line-width-list>",
      "initial": "medium",
      "appliesTo": "grid containers, flex containers, multicol containers, and masonry containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "list of absolute lengths, snapped as a border width, or 0 under conditions described below",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "row-rule-width",
        "rowRuleWidth"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "column-rule",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-column-rule",
      "value": "<gap-rule-list> | <gap-auto-rule-list>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "column-rule",
        "columnRule"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "row-rule",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-row-rule",
      "value": "<gap-rule-list> | <gap-auto-rule-list>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "row-rule",
        "rowRule"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "rule-color",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-rule-color",
      "value": "<'column-rule-color'>",
      "initial": "see individual properties",
      "appliesTo": "Same as column-rule-color and row-rule-color",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rule-color",
        "ruleColor"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "rule-style",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-rule-style",
      "value": "<'column-rule-style'>",
      "initial": "see individual properties",
      "appliesTo": "Same as column-rule-style and row-rule-style",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rule-style",
        "ruleStyle"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "rule-width",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-rule-width",
      "value": "<'column-rule-width'>",
      "initial": "see individual properties",
      "appliesTo": "Same as column-rule-width and row-rule-width",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rule-width",
        "ruleWidth"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "rule",
      "href": "https://drafts.csswg.org/css-gaps-1/#propdef-rule",
      "value": "<'column-rule'>",
      "initial": "see individual properties",
      "appliesTo": "Same as column-rule and row-rule",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rule"
      ],
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "copy-into",
      "href": "https://drafts.csswg.org/css-gcpm-4/#propdef-copy-into",
      "value": "none | [ [ <custom-ident> <content-level>] [, <custom-ident> <content-level>]* ]?",
      "initial": "none",
      "appliesTo": "all elements and pseudo-elements, but not ::first-line or ::first-letter.",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "copy-into",
        "copyInto"
      ],
      "spec": {
        "shortname": "css-gcpm-4",
        "currentSpec": false
      }
    },
    {
      "name": "position",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-position",
      "value": "static | relative | absolute | sticky | fixed | <running()>",
      "initial": "static",
      "appliesTo": "all elements except table-column-group and table-column",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "position"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "float",
      "href": "https://drafts.csswg.org/css-page-floats-3/#propdef-float",
      "value": "block-start | block-end | inline-start | inline-end | snap-block | <snap-block()> | snap-inline | <snap-inline()> | left | right | top | bottom | none | footnote",
      "initial": "none",
      "appliesTo": "all elements.",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "float"
      ],
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "name": "footnote-display",
      "href": "https://drafts.csswg.org/css-gcpm-3/#propdef-footnote-display",
      "value": "block | inline | compact",
      "initial": "block",
      "appliesTo": "elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "footnote-display",
        "footnoteDisplay"
      ],
      "spec": {
        "shortname": "css-gcpm",
        "currentSpec": true
      }
    },
    {
      "name": "footnote-policy",
      "href": "https://drafts.csswg.org/css-gcpm-3/#propdef-footnote-policy",
      "value": "auto | line | block",
      "initial": "auto",
      "appliesTo": "elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "footnote-policy",
        "footnotePolicy"
      ],
      "spec": {
        "shortname": "css-gcpm",
        "currentSpec": true
      }
    },
    {
      "name": "item-slack",
      "href": "https://drafts.csswg.org/css-grid-3/#propdef-item-slack",
      "value": "<length-percentage> | infinite",
      "initial": "1em",
      "appliesTo": "masonry containers",
      "inherited": "no",
      "percentages": "relative to the grid-axis content box size of the masonry container",
      "computedValue": "a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "as length",
      "styleDeclaration": [
        "item-slack",
        "itemSlack"
      ],
      "spec": {
        "shortname": "css-grid-3",
        "currentSpec": false
      }
    },
    {
      "name": "item-direction",
      "href": "https://drafts.csswg.org/css-grid-3/#propdef-item-direction",
      "value": "auto | row | column | row-reverse | column-reverse",
      "initial": "auto",
      "appliesTo": "flex containers, grid containers, masonry containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "item-direction",
        "itemDirection"
      ],
      "spec": {
        "shortname": "css-grid-3",
        "currentSpec": false
      }
    },
    {
      "name": "item-track",
      "href": "https://drafts.csswg.org/css-grid-3/#propdef-item-track",
      "value": "auto | row | column | row-reverse | column-reverse",
      "initial": "auto",
      "appliesTo": "flex containers, grid containers, masonry containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "item-track",
        "itemTrack"
      ],
      "spec": {
        "shortname": "css-grid-3",
        "currentSpec": false
      }
    },
    {
      "name": "item-wrap",
      "href": "https://drafts.csswg.org/css-grid-3/#propdef-item-wrap",
      "value": "[ auto | nowrap | wrap ] || [ normal | reverse ] | wrap-reverse",
      "initial": "auto",
      "appliesTo": "flex containers, grid containers, masonry containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "item-wrap",
        "itemWrap"
      ],
      "spec": {
        "shortname": "css-grid-3",
        "currentSpec": false
      }
    },
    {
      "name": "item-cross",
      "href": "https://drafts.csswg.org/css-grid-3/#propdef-item-cross",
      "value": "[ auto | nowrap | wrap ] || [ normal | reverse ] | wrap-reverse",
      "initial": "auto",
      "appliesTo": "flex containers, grid containers, masonry containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "item-cross",
        "itemCross"
      ],
      "spec": {
        "shortname": "css-grid-3",
        "currentSpec": false
      }
    },
    {
      "name": "item-pack",
      "href": "https://drafts.csswg.org/css-grid-3/#propdef-item-pack",
      "value": "normal | dense || balance",
      "initial": "normal",
      "appliesTo": "flex containers, grid containers, masonry containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "item-pack",
        "itemPack"
      ],
      "spec": {
        "shortname": "css-grid-3",
        "currentSpec": false
      }
    },
    {
      "name": "item-flow",
      "href": "https://drafts.csswg.org/css-grid-3/#propdef-item-flow",
      "value": "<'item-direction'> || <'item-wrap'> || <'item-pack'> || <'item-slack'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "item-flow",
        "itemFlow"
      ],
      "spec": {
        "shortname": "css-grid-3",
        "currentSpec": false
      }
    },
    {
      "name": "grid-template-columns",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-template-columns",
      "value": "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
      "initial": "none",
      "appliesTo": "grid containers",
      "inherited": "no",
      "percentages": "refer to corresponding dimension of the content area",
      "computedValue": "the keyword none or a computed track list",
      "canonicalOrder": "per grammar",
      "animationType": "if the list lengths match, by computed value type per item in the computed track list (see § 7.2.5 Computed Value of a Track Listing and § 7.2.3.3 Interpolation/Combination of repeat()); discrete otherwise",
      "styleDeclaration": [
        "grid-template-columns",
        "gridTemplateColumns"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-template-rows",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-template-rows",
      "value": "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
      "initial": "none",
      "appliesTo": "grid containers",
      "inherited": "no",
      "percentages": "refer to corresponding dimension of the content area",
      "computedValue": "the keyword none or a computed track list",
      "canonicalOrder": "per grammar",
      "animationType": "if the list lengths match, by computed value type per item in the computed track list (see § 7.2.5 Computed Value of a Track Listing and § 7.2.3.3 Interpolation/Combination of repeat()); discrete otherwise",
      "styleDeclaration": [
        "grid-template-rows",
        "gridTemplateRows"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-template-areas",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-template-areas",
      "value": "none | <string>+",
      "initial": "none",
      "appliesTo": "grid containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a list of string values",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "grid-template-areas",
        "gridTemplateAreas"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-template",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-template",
      "value": "none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",
      "initial": "none",
      "appliesTo": "grid containers",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "grid-template",
        "gridTemplate"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-auto-columns",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-auto-columns",
      "value": "<track-size>+",
      "initial": "auto",
      "appliesTo": "grid containers",
      "inherited": "no",
      "percentages": "see Track Sizing",
      "computedValue": "see Track Sizing",
      "canonicalOrder": "per grammar",
      "animationType": "if the list lengths match, by computed value type per item; discrete otherwise",
      "styleDeclaration": [
        "grid-auto-columns",
        "gridAutoColumns"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-auto-rows",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-auto-rows",
      "value": "<track-size>+",
      "initial": "auto",
      "appliesTo": "grid containers",
      "inherited": "no",
      "percentages": "see Track Sizing",
      "computedValue": "see Track Sizing",
      "canonicalOrder": "per grammar",
      "animationType": "if the list lengths match, by computed value type per item; discrete otherwise",
      "styleDeclaration": [
        "grid-auto-rows",
        "gridAutoRows"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-auto-flow",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-auto-flow",
      "value": "[ row | column ] || dense",
      "initial": "row",
      "appliesTo": "grid containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "grid-auto-flow",
        "gridAutoFlow"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid",
      "value": "<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>",
      "initial": "none",
      "appliesTo": "grid containers",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "grid"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-row-start",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-row-start",
      "value": "<grid-line>",
      "initial": "auto",
      "appliesTo": "grid items and absolutely-positioned boxes whose containing block is a grid container",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword, identifier, and/or integer",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "grid-row-start",
        "gridRowStart"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-column-start",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-column-start",
      "value": "<grid-line>",
      "initial": "auto",
      "appliesTo": "grid items and absolutely-positioned boxes whose containing block is a grid container",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword, identifier, and/or integer",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "grid-column-start",
        "gridColumnStart"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-row-end",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-row-end",
      "value": "<grid-line>",
      "initial": "auto",
      "appliesTo": "grid items and absolutely-positioned boxes whose containing block is a grid container",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword, identifier, and/or integer",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "grid-row-end",
        "gridRowEnd"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-column-end",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-column-end",
      "value": "<grid-line>",
      "initial": "auto",
      "appliesTo": "grid items and absolutely-positioned boxes whose containing block is a grid container",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword, identifier, and/or integer",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "grid-column-end",
        "gridColumnEnd"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-row",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-row",
      "value": "<grid-line> [ / <grid-line> ]?",
      "initial": "auto",
      "appliesTo": "grid items and absolutely-positioned boxes whose containing block is a grid container",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "discrete",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "grid-row",
        "gridRow"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-column",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-column",
      "value": "<grid-line> [ / <grid-line> ]?",
      "initial": "auto",
      "appliesTo": "grid items and absolutely-positioned boxes whose containing block is a grid container",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "discrete",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "grid-column",
        "gridColumn"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "grid-area",
      "href": "https://drafts.csswg.org/css-grid-2/#propdef-grid-area",
      "value": "<grid-line> [ / <grid-line> ]{0,3}",
      "initial": "auto",
      "appliesTo": "grid items and absolutely-positioned boxes whose containing block is a grid container",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "discrete",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "grid-area",
        "gridArea"
      ],
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "object-fit",
      "href": "https://drafts.csswg.org/css-images-3/#propdef-object-fit",
      "value": "fill | contain | cover | none | scale-down",
      "initial": "fill",
      "appliesTo": "replaced elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "object-fit",
        "objectFit"
      ],
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "image-resolution",
      "href": "https://drafts.csswg.org/css-images-4/#propdef-image-resolution",
      "value": "[ from-image || <resolution> ] && snap?",
      "initial": "1dppx",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword(s) and/or <resolution> (possibly adjusted for snap, see below)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "image-resolution",
        "imageResolution"
      ],
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "object-view-box",
      "href": "https://drafts.csswg.org/css-images-5/#propdef-object-view-box",
      "value": "none | <basic-shape-rect>",
      "initial": "none",
      "appliesTo": "replaced elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword, or computed function",
      "canonicalOrder": "per grammar",
      "animationType": "as if possible, otherwise discrete",
      "styleDeclaration": [
        "object-view-box",
        "objectViewBox"
      ],
      "spec": {
        "shortname": "css-images-5",
        "currentSpec": false
      }
    },
    {
      "name": "object-position",
      "href": "https://drafts.csswg.org/css-images-3/#propdef-object-position",
      "value": "<position>",
      "initial": "50% 50%",
      "appliesTo": "replaced elements",
      "inherited": "no",
      "percentages": "refer to width and height of element itself",
      "computedValue": "as for background-position",
      "canonicalOrder": "the horizontal component of the <position>, followed by the vertical component",
      "animationType": "as for background-position",
      "styleDeclaration": [
        "object-position",
        "objectPosition"
      ],
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "image-orientation",
      "href": "https://drafts.csswg.org/css-images-3/#propdef-image-orientation",
      "value": "from-image | none | [ <angle> || flip ]",
      "initial": "from-image",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the specified keyword, or an <angle>, rounded and normalized (see text), plus optionally a flip keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "image-orientation",
        "imageOrientation"
      ],
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "image-rendering",
      "href": "https://drafts.csswg.org/css-images-3/#propdef-image-rendering",
      "value": "auto | smooth | high-quality | pixelated | crisp-edges",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "image-rendering",
        "imageRendering"
      ],
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "dominant-baseline",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-dominant-baseline",
      "value": "auto | text-bottom | alphabetic | ideographic | middle | central | mathematical | hanging | text-top",
      "initial": "auto",
      "appliesTo": "block containers, inline boxes, table rows, grid containers, flex containers, and SVG text content elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "dominant-baseline",
        "dominantBaseline"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "vertical-align",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-vertical-align",
      "value": "[ first | last] || <'alignment-baseline'> || <'baseline-shift'>",
      "initial": "baseline",
      "appliesTo": "see individual properties",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "vertical-align",
        "verticalAlign"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "baseline-source",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-baseline-source",
      "value": "auto | first | last",
      "initial": "auto",
      "appliesTo": "inline-level boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "baseline-source",
        "baselineSource"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "alignment-baseline",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-alignment-baseline",
      "value": "baseline | text-bottom | alphabetic | ideographic | middle | central | mathematical | text-top",
      "initial": "baseline",
      "appliesTo": "inline-level boxes, flex items, grid items, table cells, and SVG text content elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "alignment-baseline",
        "alignmentBaseline"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "baseline-shift",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-baseline-shift",
      "value": "<length-percentage> | sub | super | top | center | bottom",
      "initial": "0",
      "appliesTo": "inline-level boxes and SVG text content elements",
      "inherited": "no",
      "percentages": "refer to the used value of line-height",
      "computedValue": "the specified keyword or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "baseline-shift",
        "baselineShift"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "line-height",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-line-height",
      "value": "normal | <number [0,∞]> | <length-percentage [0,∞]>",
      "initial": "normal",
      "appliesTo": "non-replaced inline boxes and SVG text content elements",
      "inherited": "yes",
      "percentages": "computed relative to 1em",
      "computedValue": "the specified keyword, a number, or a computed <length> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "line-height",
        "lineHeight"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "line-fit-edge",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-line-fit-edge",
      "value": "leading | <text-edge>",
      "initial": "leading",
      "appliesTo": "inline boxes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "line-fit-edge",
        "lineFitEdge"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "text-box",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-text-box",
      "value": "normal | <'text-box-trim'> || <'text-box-edge'>",
      "initial": "normal",
      "appliesTo": "block containers, multi-column containers, and inline boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-box",
        "textBox"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "text-box-trim",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-text-box-trim",
      "value": "none | trim-start | trim-end | trim-both",
      "initial": "none",
      "appliesTo": "block containers, multi-column containers, and inline boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-box-trim",
        "textBoxTrim"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "text-box-edge",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-text-box-edge",
      "value": "auto | <text-edge>",
      "initial": "auto",
      "appliesTo": "block containers and inline boxes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-box-edge",
        "textBoxEdge"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "inline-sizing",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-inline-sizing",
      "value": "normal | stretch",
      "initial": "normal",
      "appliesTo": "inline boxes, but not ruby container boxes nor internal ruby boxes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "inline-sizing",
        "inlineSizing"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "initial-letter",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-initial-letter",
      "value": "normal | <number [1,∞]> <integer [1,∞]> | <number [1,∞]> && [ drop | raise ]?",
      "initial": "normal",
      "appliesTo": "certain inline-level boxes and ::first-letter and inside ::marker boxes (see prose)",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword normal or a number paired with an integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "initial-letter",
        "initialLetter"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "initial-letter-align",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-initial-letter-align",
      "value": "[ border-box? [ alphabetic | ideographic | hanging | leading ]? ]!",
      "initial": "alphabetic",
      "appliesTo": "certain inline-level boxes and ::first-letter and inside ::marker boxes (see prose)",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "initial-letter-align",
        "initialLetterAlign"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "initial-letter-wrap",
      "href": "https://drafts.csswg.org/css-inline-3/#propdef-initial-letter-wrap",
      "value": "none | first | all | grid | <length-percentage>",
      "initial": "none",
      "appliesTo": "certain inline-level boxes and ::first-letter and inside ::marker boxes (see prose)",
      "inherited": "yes",
      "percentages": "relative to logical width of (last fragment of) initial letter",
      "computedValue": "specified keyword or computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "initial-letter-wrap",
        "initialLetterWrap"
      ],
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "line-grid",
      "href": "https://drafts.csswg.org/css-line-grid-1/#propdef-line-grid",
      "value": "match-parent | create",
      "initial": "match-parent",
      "appliesTo": "block, flex and grid containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "line-grid",
        "lineGrid"
      ],
      "spec": {
        "shortname": "css-line-grid",
        "currentSpec": true
      }
    },
    {
      "name": "line-snap",
      "href": "https://drafts.csswg.org/css-line-grid-1/#propdef-line-snap",
      "value": "none | baseline | contain",
      "initial": "none",
      "appliesTo": "block container elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "line-snap",
        "lineSnap"
      ],
      "spec": {
        "shortname": "css-line-grid",
        "currentSpec": true
      }
    },
    {
      "name": "box-snap",
      "href": "https://drafts.csswg.org/css-line-grid-1/#propdef-box-snap",
      "value": "none | block-start | block-end | center | baseline | last-baseline",
      "initial": "none",
      "appliesTo": "block-level boxes and internal table elements except table cells",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "box-snap",
        "boxSnap"
      ],
      "spec": {
        "shortname": "css-line-grid",
        "currentSpec": true
      }
    },
    {
      "name": "link-parameters",
      "href": "https://drafts.csswg.org/css-link-params-1/#propdef-link-parameters",
      "value": "none | <link-param>+",
      "initial": "none",
      "appliesTo": "all elements and pseudo-elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "link-parameters",
        "linkParameters"
      ],
      "spec": {
        "shortname": "css-link-params",
        "currentSpec": true
      }
    },
    {
      "name": "list-style-image",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-list-style-image",
      "value": "<image> | none",
      "initial": "none",
      "appliesTo": "list items",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the keyword noneor the computed <image>",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "list-style-image",
        "listStyleImage"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "list-style-type",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-list-style-type",
      "value": "<counter-style> | <string> | none",
      "initial": "disc",
      "appliesTo": "list items",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "list-style-type",
        "listStyleType"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "list-style-position",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-list-style-position",
      "value": "inside | outside",
      "initial": "outside",
      "appliesTo": "list items",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "keyword, but see prose",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "list-style-position",
        "listStylePosition"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "list-style",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-list-style",
      "value": "<'list-style-position'> || <'list-style-image'> || <'list-style-type'>",
      "initial": "see individual properties",
      "appliesTo": "list items",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "list-style",
        "listStyle"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "marker-side",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-marker-side",
      "value": "match-self | match-parent",
      "initial": "match-self",
      "appliesTo": "list items",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "marker-side",
        "markerSide"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "counter-reset",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-counter-reset",
      "value": "[ <counter-name> <integer>? | <reversed-counter-name> <integer>? ]+ | none",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a list, each item an identifier or a reversed() function paired with an integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "counter-reset",
        "counterReset"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "counter-increment",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-counter-increment",
      "value": "[ <counter-name> <integer>? ]+ | none",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a list, each item an identifier paired with an integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "counter-increment",
        "counterIncrement"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "counter-set",
      "href": "https://drafts.csswg.org/css-lists-3/#propdef-counter-set",
      "value": "[ <counter-name> <integer>? ]+ | none",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a list, each item an identifier paired with an integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "counter-set",
        "counterSet"
      ],
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "block-size",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-block-size",
      "value": "<'width'>",
      "initial": "auto",
      "appliesTo": "Same as height and width",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as height, width",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "size",
      "styleDeclaration": [
        "block-size",
        "blockSize"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "inline-size",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-inline-size",
      "value": "<'width'>",
      "initial": "auto",
      "appliesTo": "Same as height and width",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as height, width",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "size",
      "styleDeclaration": [
        "inline-size",
        "inlineSize"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "min-block-size",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-min-block-size",
      "value": "<'min-width'>",
      "initial": "0",
      "appliesTo": "same as height and width",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as min-height, min-width",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "min-size",
      "styleDeclaration": [
        "min-block-size",
        "minBlockSize"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "min-inline-size",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-min-inline-size",
      "value": "<'min-width'>",
      "initial": "0",
      "appliesTo": "same as height and width",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as min-height, min-width",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "min-size",
      "styleDeclaration": [
        "min-inline-size",
        "minInlineSize"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "max-block-size",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-max-block-size",
      "value": "<'max-width'>",
      "initial": "none",
      "appliesTo": "same as height and width",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as max-height, max-width",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "max-size",
      "styleDeclaration": [
        "max-block-size",
        "maxBlockSize"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "max-inline-size",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-max-inline-size",
      "value": "<'max-width'>",
      "initial": "none",
      "appliesTo": "same as height and width",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as max-height, max-width",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "max-size",
      "styleDeclaration": [
        "max-inline-size",
        "maxInlineSize"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "margin-block-start",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-margin-block-start",
      "value": "<'margin-top'>",
      "initial": "0",
      "appliesTo": "Same as margin-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding margin-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-block-start",
        "marginBlockStart"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "margin-block-end",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-margin-block-end",
      "value": "<'margin-top'>",
      "initial": "0",
      "appliesTo": "Same as margin-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding margin-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-block-end",
        "marginBlockEnd"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "margin-inline-start",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-margin-inline-start",
      "value": "<'margin-top'>",
      "initial": "0",
      "appliesTo": "Same as margin-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding margin-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-inline-start",
        "marginInlineStart"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "margin-inline-end",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-margin-inline-end",
      "value": "<'margin-top'>",
      "initial": "0",
      "appliesTo": "Same as margin-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding margin-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "margin",
      "styleDeclaration": [
        "margin-inline-end",
        "marginInlineEnd"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "margin-block",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-margin-block",
      "value": "<'margin-top'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "margin-block",
        "marginBlock"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "margin-inline",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-margin-inline",
      "value": "<'margin-top'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "margin-inline",
        "marginInline"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "padding-block-start",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-padding-block-start",
      "value": "<'padding-top'>",
      "initial": "0",
      "appliesTo": "Same as padding-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding padding-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-block-start",
        "paddingBlockStart"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "padding-block-end",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-padding-block-end",
      "value": "<'padding-top'>",
      "initial": "0",
      "appliesTo": "Same as padding-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding padding-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-block-end",
        "paddingBlockEnd"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "padding-inline-start",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-padding-inline-start",
      "value": "<'padding-top'>",
      "initial": "0",
      "appliesTo": "Same as padding-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding padding-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-inline-start",
        "paddingInlineStart"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "padding-inline-end",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-padding-inline-end",
      "value": "<'padding-top'>",
      "initial": "0",
      "appliesTo": "Same as padding-top",
      "inherited": "no",
      "percentages": "As for the corresponding physical property",
      "computedValue": "Same as corresponding padding-* properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "padding",
      "styleDeclaration": [
        "padding-inline-end",
        "paddingInlineEnd"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "padding-block",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-padding-block",
      "value": "<'padding-top'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "padding-block",
        "paddingBlock"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "padding-inline",
      "href": "https://drafts.csswg.org/css-logical-1/#propdef-padding-inline",
      "value": "<'padding-top'>{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "padding-inline",
        "paddingInline"
      ],
      "spec": {
        "shortname": "css-logical",
        "currentSpec": true
      }
    },
    {
      "name": "clip-path",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-clip-path",
      "value": "<clip-source> | [ <basic-shape> || <geometry-box> ] | none",
      "initial": "none",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified, but with <url> values made absolute",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "clip-path",
        "clipPath"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "clip-rule",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-clip-rule",
      "value": "nonzero | evenodd",
      "initial": "nonzero",
      "appliesTo": "Applies to SVG graphics elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "clip-rule",
        "clipRule"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-image",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-image",
      "value": "<mask-reference>#",
      "initial": "none",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none, a computed <image>, or a computed <url>",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-image",
        "maskImage"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-mode",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-mode",
      "value": "<masking-mode>#",
      "initial": "match-source",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-mode",
        "maskMode"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-repeat",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-repeat",
      "value": "<repeat-style>#",
      "initial": "repeat",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "Consists of: two keywords, one per dimension",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-repeat",
        "maskRepeat"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-position",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-position",
      "value": "<position>#",
      "initial": "0% 0%",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "refer to size of mask painting area minus size of mask layer image; see text background-position [CSS3BG]",
      "computedValue": "Consisting of: two keywords representing the origin and two offsets from that origin, each given as an absolute length (if given a <length>), otherwise as a percentage.",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "mask-position",
        "maskPosition"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-clip",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-clip",
      "value": "[ <coord-box> | no-clip ]#",
      "initial": "border-box",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-clip",
        "maskClip"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-origin",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-origin",
      "value": "<coord-box>#",
      "initial": "border-box",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-origin",
        "maskOrigin"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-size",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-size",
      "value": "<bg-size>#",
      "initial": "auto",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified, but with lengths made absolute",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "mask-size",
        "maskSize"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-composite",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-composite",
      "value": "<compositing-operator>#",
      "initial": "add",
      "appliesTo": "All elements. In SVG, it applies to container elements without the defs element and all graphics elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-composite",
        "maskComposite"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask",
      "value": "<mask-layer>#",
      "initial": "see individual properties",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "media": "visual",
      "styleDeclaration": [
        "mask"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-border-source",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-border-source",
      "value": "none | <image>",
      "initial": "none",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "they keyword none or the computed <image>",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-border-source",
        "maskBorderSource"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-border-mode",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-border-mode",
      "value": "luminance | alpha",
      "initial": "alpha",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-border-mode",
        "maskBorderMode"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-border-slice",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-border-slice",
      "value": "[ <number> | <percentage> ]{1,4} fill?",
      "initial": "0",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "refer to size of the mask border image",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "mask-border-slice",
        "maskBorderSlice"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-border-width",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-border-width",
      "value": "[ <length-percentage> | <number> | auto ]{1,4}",
      "initial": "auto",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "relative to width/height of the mask border image area",
      "computedValue": "all <length>s made absolute, otherwise as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "mask-border-width",
        "maskBorderWidth"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-border-outset",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-border-outset",
      "value": "[ <length> | <number> ]{1,4}",
      "initial": "0",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "all <length>s made absolute, otherwise as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "mask-border-outset",
        "maskBorderOutset"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-border-repeat",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-border-repeat",
      "value": "[ stretch | repeat | round | space ]{1,2}",
      "initial": "stretch",
      "appliesTo": "All elements. In SVG, it applies to container elements excluding the defs element, all graphics elements and the use element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-border-repeat",
        "maskBorderRepeat"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-border",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-border",
      "value": "<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>",
      "initial": "See individual properties",
      "appliesTo": "See individual properties",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "See individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "See individual properties",
      "media": "visual",
      "styleDeclaration": [
        "mask-border",
        "maskBorder"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "mask-type",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-type",
      "value": "luminance | alpha",
      "initial": "luminance",
      "appliesTo": "mask elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "mask-type",
        "maskType"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "clip",
      "href": "https://drafts.fxtf.org/css-masking-1/#propdef-clip",
      "value": "<rect()> | auto",
      "initial": "auto",
      "appliesTo": "Absolutely positioned elements. In SVG, it applies to elements which establish a new viewport, pattern elements and mask elements.",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "clip"
      ],
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "column-width",
      "href": "https://drafts.csswg.org/css-multicol-2/#propdef-column-width",
      "value": "auto | <length [0,∞]> | min-content | max-content | fit-content(<length-percentage>)",
      "initial": "auto",
      "appliesTo": "block containers except table wrapper boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword auto or an absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "column-width",
        "columnWidth"
      ],
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      }
    },
    {
      "name": "column-height",
      "href": "https://drafts.csswg.org/css-multicol-2/#propdef-column-height",
      "value": "auto | <length [0,∞]>",
      "initial": "auto",
      "appliesTo": "block containers except table wrapper boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword auto or an absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "column-height",
        "columnHeight"
      ],
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      }
    },
    {
      "name": "column-count",
      "href": "https://drafts.csswg.org/css-multicol-2/#propdef-column-count",
      "value": "auto | <integer [1,∞]>",
      "initial": "auto",
      "appliesTo": "block containers except table wrapper boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "column-count",
        "columnCount"
      ],
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      }
    },
    {
      "name": "column-wrap",
      "href": "https://drafts.csswg.org/css-multicol-2/#propdef-column-wrap",
      "value": "auto | nowrap | wrap",
      "initial": "auto",
      "appliesTo": "multicol containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "column-wrap",
        "columnWrap"
      ],
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      }
    },
    {
      "name": "columns",
      "href": "https://drafts.csswg.org/css-multicol-2/#propdef-columns",
      "value": "<'column-width'> || <'column-count'> [ / <'column-height'> ]?",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "columns"
      ],
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      }
    },
    {
      "name": "column-span",
      "href": "https://drafts.csswg.org/css-multicol-2/#propdef-column-span",
      "value": "none | <integer [1,∞]> | all | auto",
      "initial": "none",
      "appliesTo": "in-flow block-level elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "column-span",
        "columnSpan"
      ],
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      }
    },
    {
      "name": "column-fill",
      "href": "https://drafts.csswg.org/css-multicol-2/#propdef-column-fill",
      "value": "auto | balance | balance-all",
      "initial": "balance",
      "appliesTo": "multicol containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "column-fill",
        "columnFill"
      ],
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      }
    },
    {
      "name": "spatial-navigation-contain",
      "href": "https://drafts.csswg.org/css-nav-1/#propdef-spatial-navigation-contain",
      "value": "auto | contain",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "spatial-navigation-contain",
        "spatialNavigationContain"
      ],
      "spec": {
        "shortname": "css-nav",
        "currentSpec": true
      }
    },
    {
      "name": "spatial-navigation-action",
      "href": "https://drafts.csswg.org/css-nav-1/#propdef-spatial-navigation-action",
      "value": "auto | focus | scroll",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "spatial-navigation-action",
        "spatialNavigationAction"
      ],
      "spec": {
        "shortname": "css-nav",
        "currentSpec": true
      }
    },
    {
      "name": "spatial-navigation-function",
      "href": "https://drafts.csswg.org/css-nav-1/#propdef-spatial-navigation-function",
      "value": "normal | grid",
      "initial": "normal",
      "appliesTo": "spatial navigation containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "spatial-navigation-function",
        "spatialNavigationFunction"
      ],
      "spec": {
        "shortname": "css-nav",
        "currentSpec": true
      }
    },
    {
      "name": "overflow-clip-margin-top",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-top",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-top",
        "overflowClipMarginTop"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-right",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-right",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-right",
        "overflowClipMarginRight"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-bottom",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-bottom",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-bottom",
        "overflowClipMarginBottom"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-left",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-left",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-left",
        "overflowClipMarginLeft"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-block-start",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-block-start",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-block-start",
        "overflowClipMarginBlockStart"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-inline-start",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-inline-start",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-inline-start",
        "overflowClipMarginInlineStart"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-block-end",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-block-end",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-block-end",
        "overflowClipMarginBlockEnd"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-inline-end",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-inline-end",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "canonicalOrder": "per grammar",
      "logicalPropertyGroup": "overflow-clip-margin",
      "styleDeclaration": [
        "overflow-clip-margin-inline-end",
        "overflowClipMarginInlineEnd"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-overflow-clip-margin",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the computed <length> and a <visual-box> keyword",
      "canonicalOrder": "per grammar",
      "animationType": "per computed value if the <visual-box> values match; otherwise discrete",
      "styleDeclaration": [
        "overflow-clip-margin",
        "overflowClipMargin"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "overflow-clip-margin-inline",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-inline",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "overflow-clip-margin-inline",
        "overflowClipMarginInline"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-clip-margin-block",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-overflow-clip-margin-block",
      "value": "<visual-box> || <length [0,∞]>",
      "initial": "0px",
      "appliesTo": "boxes to which overflow applies",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "overflow-clip-margin-block",
        "overflowClipMarginBlock"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-overflow",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-text-overflow",
      "value": "clip | ellipsis",
      "initial": "clip",
      "appliesTo": "block containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-overflow",
        "textOverflow"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "block-ellipsis",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-block-ellipsis",
      "value": "none | auto | <string>",
      "initial": "none",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "block-ellipsis",
        "blockEllipsis"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "line-clamp",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-line-clamp",
      "value": "none | <integer [1,∞]> || <'block-ellipsis'>",
      "initial": "none",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "line-clamp",
        "lineClamp"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "-webkit-line-clamp",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef--webkit-line-clamp",
      "value": "none | <integer [1,∞]>",
      "initial": "none",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "-webkit-line-clamp",
        "WebkitLineClamp",
        "webkitLineClamp"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "continue",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-continue",
      "value": "auto | discard | -webkit-discard",
      "initial": "auto",
      "appliesTo": "block containers and multicol containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "continue"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "max-lines",
      "href": "https://drafts.csswg.org/css-overflow-4/#propdef-max-lines",
      "value": "none | <integer [1,∞]>",
      "initial": "none",
      "appliesTo": "block containers which are also fragmentation containers that capture region breaks",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword none or an integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "max-lines",
        "maxLines"
      ],
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      }
    },
    {
      "name": "scroll-marker-group",
      "href": "https://drafts.csswg.org/css-overflow-5/#propdef-scroll-marker-group",
      "value": "none | before | after",
      "initial": "none",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "scroll-marker-group",
        "scrollMarkerGroup"
      ],
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-x",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-overflow-x",
      "value": "visible | hidden | clip | scroll | auto",
      "initial": "visible",
      "appliesTo": "block containers [CSS2], flex containers [CSS3-FLEXBOX], grid containers [CSS3-GRID-LAYOUT]",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "usually specified value, but see text",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overflow",
      "styleDeclaration": [
        "overflow-x",
        "overflowX"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "overflow-y",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-overflow-y",
      "value": "visible | hidden | clip | scroll | auto",
      "initial": "visible",
      "appliesTo": "block containers [CSS2], flex containers [CSS3-FLEXBOX], grid containers [CSS3-GRID-LAYOUT]",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "usually specified value, but see text",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overflow",
      "styleDeclaration": [
        "overflow-y",
        "overflowY"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "overflow-block",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-overflow-block",
      "value": "visible | hidden | clip | scroll | auto",
      "initial": "visible",
      "appliesTo": "block containers [CSS2], flex containers [CSS3-FLEXBOX], grid containers [CSS3-GRID-LAYOUT]",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "usually specified value, but see text",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overflow",
      "styleDeclaration": [
        "overflow-block",
        "overflowBlock"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "overflow-inline",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-overflow-inline",
      "value": "visible | hidden | clip | scroll | auto",
      "initial": "visible",
      "appliesTo": "block containers [CSS2], flex containers [CSS3-FLEXBOX], grid containers [CSS3-GRID-LAYOUT]",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "usually specified value, but see text",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overflow",
      "styleDeclaration": [
        "overflow-inline",
        "overflowInline"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "overflow",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-overflow",
      "value": "<'overflow-block'>{1,2}",
      "initial": "visible",
      "appliesTo": "block containers [CSS2], flex containers [CSS3-FLEXBOX], and grid containers [CSS3-GRID-LAYOUT]",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "discrete",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "overflow"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-behavior",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-scroll-behavior",
      "value": "auto | smooth",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "scroll-behavior",
        "scrollBehavior"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "scrollbar-gutter",
      "href": "https://drafts.csswg.org/css-overflow-3/#propdef-scrollbar-gutter",
      "value": "auto | stable && both-edges?",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "scrollbar-gutter",
        "scrollbarGutter"
      ],
      "spec": {
        "shortname": "css-overflow",
        "currentSpec": true
      }
    },
    {
      "name": "overscroll-behavior",
      "href": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior",
      "value": "[ contain | none | auto ]{1,2}",
      "initial": "auto auto",
      "appliesTo": "scroll container elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "overscroll-behavior",
        "overscrollBehavior"
      ],
      "spec": {
        "shortname": "css-overscroll",
        "currentSpec": true
      }
    },
    {
      "name": "overscroll-behavior-x",
      "href": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-x",
      "value": "contain | none | auto",
      "initial": "auto",
      "appliesTo": "scroll container elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overscroll-behavior",
      "media": "visual",
      "styleDeclaration": [
        "overscroll-behavior-x",
        "overscrollBehaviorX"
      ],
      "spec": {
        "shortname": "css-overscroll",
        "currentSpec": true
      }
    },
    {
      "name": "overscroll-behavior-y",
      "href": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-y",
      "value": "contain | none | auto",
      "initial": "auto",
      "appliesTo": "scroll container elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overscroll-behavior",
      "media": "visual",
      "styleDeclaration": [
        "overscroll-behavior-y",
        "overscrollBehaviorY"
      ],
      "spec": {
        "shortname": "css-overscroll",
        "currentSpec": true
      }
    },
    {
      "name": "overscroll-behavior-inline",
      "href": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-inline",
      "value": "contain | none | auto",
      "initial": "auto",
      "appliesTo": "scroll container elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overscroll-behavior",
      "media": "visual",
      "styleDeclaration": [
        "overscroll-behavior-inline",
        "overscrollBehaviorInline"
      ],
      "spec": {
        "shortname": "css-overscroll",
        "currentSpec": true
      }
    },
    {
      "name": "overscroll-behavior-block",
      "href": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-block",
      "value": "contain | none | auto",
      "initial": "auto",
      "appliesTo": "scroll container elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "logicalPropertyGroup": "overscroll-behavior",
      "media": "visual",
      "styleDeclaration": [
        "overscroll-behavior-block",
        "overscrollBehaviorBlock"
      ],
      "spec": {
        "shortname": "css-overscroll",
        "currentSpec": true
      }
    },
    {
      "name": "float-reference",
      "href": "https://drafts.csswg.org/css-page-floats-3/#propdef-float-reference",
      "value": "inline | column | region | page",
      "initial": "inline",
      "appliesTo": "all elements.",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "float-reference",
        "floatReference"
      ],
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "name": "clear",
      "href": "https://drafts.csswg.org/css-page-floats-3/#propdef-clear",
      "value": "inline-start | inline-end | block-start | block-end | left | right | top | bottom | both-inline | both-block | both | none",
      "initial": "none",
      "appliesTo": "block-level elements, floats, regions, pages",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "clear"
      ],
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "name": "float-defer",
      "href": "https://drafts.csswg.org/css-page-floats-3/#propdef-float-defer",
      "value": "<integer> | last | none",
      "initial": "none",
      "appliesTo": "floats",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword or integer",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "float-defer",
        "floatDefer"
      ],
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "name": "float-offset",
      "href": "https://drafts.csswg.org/css-page-floats-3/#propdef-float-offset",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "floats",
      "inherited": "no",
      "percentages": "see prose",
      "computedValue": "computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "float-offset",
        "floatOffset"
      ],
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "name": "page",
      "href": "https://drafts.csswg.org/css-page-3/#propdef-page",
      "value": "auto | <custom-ident>",
      "initial": "auto",
      "appliesTo": "boxes that create class A break points",
      "inherited": "no (but see prose)",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "page"
      ],
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "overlay",
      "href": "https://drafts.csswg.org/css-position-4/#propdef-overlay",
      "value": "none | auto",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "see prose",
      "styleDeclaration": [
        "overlay"
      ],
      "spec": {
        "shortname": "css-position-4",
        "currentSpec": false
      }
    },
    {
      "name": "inset-block-start",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-inset-block-start",
      "value": "auto | <length-percentage>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "inset-block-start",
        "insetBlockStart"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "inset-inline-start",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-inset-inline-start",
      "value": "auto | <length-percentage>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "inset-inline-start",
        "insetInlineStart"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "inset-block-end",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-inset-block-end",
      "value": "auto | <length-percentage>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "inset-block-end",
        "insetBlockEnd"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "inset-inline-end",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-inset-inline-end",
      "value": "auto | <length-percentage>",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "refer to size of containing block; see prose",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "inset",
      "styleDeclaration": [
        "inset-inline-end",
        "insetInlineEnd"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "inset-block",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-inset-block",
      "value": "<'top'>{1,2}",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "inset-block",
        "insetBlock"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "inset-inline",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-inset-inline",
      "value": "<'top'>{1,2}",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "inset-inline",
        "insetInline"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "inset",
      "href": "https://drafts.csswg.org/css-position-3/#propdef-inset",
      "value": "<'top'>{1,4}",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "inset"
      ],
      "spec": {
        "shortname": "css-position",
        "currentSpec": true
      }
    },
    {
      "name": "flow-into",
      "href": "https://drafts.csswg.org/css-regions-1/#propdef-flow-into",
      "value": "none | <ident> [element | content]?",
      "initial": "none",
      "appliesTo": "All elements, but not pseudo-elements such as ::first-line, ::first-letter, ::before or ::after.",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "flow-into",
        "flowInto"
      ],
      "spec": {
        "shortname": "css-regions",
        "currentSpec": true
      }
    },
    {
      "name": "flow-from",
      "href": "https://drafts.csswg.org/css-regions-1/#propdef-flow-from",
      "value": "<ident> | none",
      "initial": "none",
      "appliesTo": "Non-replaced block containers. This might be expanded in future versions of the specification to allow other types of containers to receive flow content.",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "flow-from",
        "flowFrom"
      ],
      "spec": {
        "shortname": "css-regions",
        "currentSpec": true
      }
    },
    {
      "name": "region-fragment",
      "href": "https://drafts.csswg.org/css-regions-1/#propdef-region-fragment",
      "value": "auto | break",
      "initial": "auto",
      "appliesTo": "CSS Regions",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "region-fragment",
        "regionFragment"
      ],
      "spec": {
        "shortname": "css-regions",
        "currentSpec": true
      }
    },
    {
      "name": "block-step-size",
      "href": "https://drafts.csswg.org/css-rhythm-1/#propdef-block-step-size",
      "value": "none | <length [0,∞]>",
      "initial": "none",
      "appliesTo": "block-level boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword or absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "block-step-size",
        "blockStepSize"
      ],
      "spec": {
        "shortname": "css-rhythm",
        "currentSpec": true
      }
    },
    {
      "name": "block-step-insert",
      "href": "https://drafts.csswg.org/css-rhythm-1/#propdef-block-step-insert",
      "value": "margin-box | padding-box | content-box",
      "initial": "margin-box",
      "appliesTo": "block-level boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "block-step-insert",
        "blockStepInsert"
      ],
      "spec": {
        "shortname": "css-rhythm",
        "currentSpec": true
      }
    },
    {
      "name": "block-step-align",
      "href": "https://drafts.csswg.org/css-rhythm-1/#propdef-block-step-align",
      "value": "auto | center | start | end",
      "initial": "auto",
      "appliesTo": "block-level boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "block-step-align",
        "blockStepAlign"
      ],
      "spec": {
        "shortname": "css-rhythm",
        "currentSpec": true
      }
    },
    {
      "name": "block-step-round",
      "href": "https://drafts.csswg.org/css-rhythm-1/#propdef-block-step-round",
      "value": "up | down | nearest",
      "initial": "up",
      "appliesTo": "block-level boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "block-step-round",
        "blockStepRound"
      ],
      "spec": {
        "shortname": "css-rhythm",
        "currentSpec": true
      }
    },
    {
      "name": "block-step",
      "href": "https://drafts.csswg.org/css-rhythm-1/#propdef-block-step",
      "value": "<'block-step-size'> || <'block-step-insert'> || <'block-step-align'> || <'block-step-round'>",
      "initial": "see individual properties",
      "appliesTo": "block-level boxes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "block-step",
        "blockStep"
      ],
      "spec": {
        "shortname": "css-rhythm",
        "currentSpec": true
      }
    },
    {
      "name": "line-height-step",
      "href": "https://drafts.csswg.org/css-rhythm-1/#propdef-line-height-step",
      "value": "<length [0,∞]>",
      "initial": "0",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "line-height-step",
        "lineHeightStep"
      ],
      "spec": {
        "shortname": "css-rhythm",
        "currentSpec": true
      }
    },
    {
      "name": "border-boundary",
      "href": "https://drafts.csswg.org/css-round-display-1/#propdef-border-boundary",
      "value": "none | parent | display",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "border-boundary",
        "borderBoundary"
      ],
      "spec": {
        "shortname": "css-round-display",
        "currentSpec": true
      }
    },
    {
      "name": "ruby-position",
      "href": "https://drafts.csswg.org/css-ruby-1/#propdef-ruby-position",
      "value": "[ alternate || [ over | under ] ] | inter-character",
      "initial": "alternate",
      "appliesTo": "ruby annotation containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "ruby-position",
        "rubyPosition"
      ],
      "spec": {
        "shortname": "css-ruby",
        "currentSpec": true
      }
    },
    {
      "name": "ruby-merge",
      "href": "https://drafts.csswg.org/css-ruby-1/#propdef-ruby-merge",
      "value": "separate | merge | auto",
      "initial": "separate",
      "appliesTo": "interlinear ruby annotation containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "ruby-merge",
        "rubyMerge"
      ],
      "spec": {
        "shortname": "css-ruby",
        "currentSpec": true
      }
    },
    {
      "name": "ruby-align",
      "href": "https://drafts.csswg.org/css-ruby-1/#propdef-ruby-align",
      "value": "start | center | space-between | space-around",
      "initial": "space-around",
      "appliesTo": "ruby bases, ruby annotations, ruby base containers, ruby annotation containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "ruby-align",
        "rubyAlign"
      ],
      "spec": {
        "shortname": "css-ruby",
        "currentSpec": true
      }
    },
    {
      "name": "ruby-overhang",
      "href": "https://drafts.csswg.org/css-ruby-1/#propdef-ruby-overhang",
      "value": "auto | none",
      "initial": "auto",
      "appliesTo": "ruby annotation containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "ruby-overhang",
        "rubyOverhang"
      ],
      "spec": {
        "shortname": "css-ruby",
        "currentSpec": true
      }
    },
    {
      "name": "overflow-anchor",
      "href": "https://drafts.csswg.org/css-scroll-anchoring-1/#propdef-overflow-anchor",
      "value": "auto | none",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "overflow-anchor",
        "overflowAnchor"
      ],
      "spec": {
        "shortname": "css-scroll-anchoring",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-initial-target",
      "href": "https://drafts.csswg.org/css-scroll-snap-2/#propdef-scroll-initial-target",
      "value": "none | nearest",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "none",
      "styleDeclaration": [
        "scroll-initial-target",
        "scrollInitialTarget"
      ],
      "spec": {
        "shortname": "css-scroll-snap-2",
        "currentSpec": false
      }
    },
    {
      "name": "scroll-snap-type",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-snap-type",
      "value": "none | [ x | y | block | inline | both ] [ mandatory | proximity ]?",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "scroll-snap-type",
        "scrollSnapType"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding",
      "value": "[ auto | <length-percentage [0,∞]> ]{1,4}",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the corresponding dimension of the scroll container’s scrollport",
      "computedValue": "per side, either the keyword auto or a computed <length-percentage> value",
      "animationType": "by computed value type",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "scroll-padding",
        "scrollPadding"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin",
      "value": "<length>{1,4}",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "per side, an absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "scroll-margin",
        "scrollMargin"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-snap-align",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-snap-align",
      "value": "[ none | start | end | center ]{1,2}",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "two keywords",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "scroll-snap-align",
        "scrollSnapAlign"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-snap-stop",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-snap-stop",
      "value": "normal | always",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "scroll-snap-stop",
        "scrollSnapStop"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-top",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-top",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-top",
        "scrollPaddingTop"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-right",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-right",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-right",
        "scrollPaddingRight"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-bottom",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-bottom",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-bottom",
        "scrollPaddingBottom"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-left",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-left",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-left",
        "scrollPaddingLeft"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-inline-start",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-inline-start",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-inline-start",
        "scrollPaddingInlineStart"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-block-start",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-block-start",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-block-start",
        "scrollPaddingBlockStart"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-inline-end",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-inline-end",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-inline-end",
        "scrollPaddingInlineEnd"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-block-end",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-block-end",
      "value": "auto | <length-percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-padding",
      "styleDeclaration": [
        "scroll-padding-block-end",
        "scrollPaddingBlockEnd"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-block",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-block",
      "value": "[ auto | <length-percentage [0,∞]> ]{1,2}",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "see individual properties",
      "animationType": "by computed value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "scroll-padding-block",
        "scrollPaddingBlock"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-padding-inline",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-padding-inline",
      "value": "[ auto | <length-percentage [0,∞]> ]{1,2}",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "relative to the scroll container’s scrollport",
      "computedValue": "see individual properties",
      "animationType": "by computed value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "scroll-padding-inline",
        "scrollPaddingInline"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-top",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-top",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-top",
        "scrollMarginTop"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-right",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-right",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-right",
        "scrollMarginRight"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-bottom",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-bottom",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-bottom",
        "scrollMarginBottom"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-left",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-left",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-left",
        "scrollMarginLeft"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-block-start",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-block-start",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-block-start",
        "scrollMarginBlockStart"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-inline-start",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-inline-start",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-inline-start",
        "scrollMarginInlineStart"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-block-end",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-block-end",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-block-end",
        "scrollMarginBlockEnd"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-inline-end",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-inline-end",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "scroll-margin",
      "styleDeclaration": [
        "scroll-margin-inline-end",
        "scrollMarginInlineEnd"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-block",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-block",
      "value": "<length>{1,2}",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "animationType": "by computed value type",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "scroll-margin-block",
        "scrollMarginBlock"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-margin-inline",
      "href": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-margin-inline",
      "value": "<length>{1,2}",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "see individual properties",
      "animationType": "by computed value type",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "scroll-margin-inline",
        "scrollMarginInline"
      ],
      "spec": {
        "shortname": "css-scroll-snap",
        "currentSpec": true
      }
    },
    {
      "name": "scrollbar-color",
      "href": "https://drafts.csswg.org/css-scrollbars-1/#propdef-scrollbar-color",
      "value": "auto | <color>{2}",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword or two computed colors",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "scrollbar-color",
        "scrollbarColor"
      ],
      "spec": {
        "shortname": "css-scrollbars",
        "currentSpec": true
      }
    },
    {
      "name": "scrollbar-width",
      "href": "https://drafts.csswg.org/css-scrollbars-1/#propdef-scrollbar-width",
      "value": "auto | thin | none",
      "initial": "auto",
      "appliesTo": "scroll containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "scrollbar-width",
        "scrollbarWidth"
      ],
      "spec": {
        "shortname": "css-scrollbars",
        "currentSpec": true
      }
    },
    {
      "name": "shape-inside",
      "href": "https://drafts.csswg.org/css-shapes-2/#propdef-shape-inside",
      "value": "auto | outside-shape | [ <basic-shape> || shape-box ] | <image> | display",
      "initial": "auto",
      "appliesTo": "block-level elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "computed lengths for <basic-shape>, the absolute URL for <url>, otherwise as specified",
      "canonicalOrder": "per grammar",
      "animationType": "as defined for <basic-shape>, otherwise discrete",
      "styleDeclaration": [
        "shape-inside",
        "shapeInside"
      ],
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "name": "shape-padding",
      "href": "https://drafts.csswg.org/css-shapes-2/#propdef-shape-padding",
      "value": "<length-percentage [0,∞]>",
      "initial": "0",
      "appliesTo": "block-level elements",
      "inherited": "no",
      "percentages": "refer to the inline size of the containing block",
      "computedValue": "computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "shape-padding",
        "shapePadding"
      ],
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "name": "shape-outside",
      "href": "https://drafts.csswg.org/css-shapes-1/#propdef-shape-outside",
      "value": "none | [ <basic-shape> || <shape-box> ] | <image>",
      "initial": "none",
      "appliesTo": "floats and initial letter boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as defined for <basic-shape> (with <shape-box> following, if supplied); else the computed <image>; else the keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "as defined for <basic-shape>, otherwise discrete",
      "styleDeclaration": [
        "shape-outside",
        "shapeOutside"
      ],
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "shape-image-threshold",
      "href": "https://drafts.csswg.org/css-shapes-1/#propdef-shape-image-threshold",
      "value": "<opacity-value>",
      "initial": "0",
      "appliesTo": "floats",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified number, clamped to the range [0,1]",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "shape-image-threshold",
        "shapeImageThreshold"
      ],
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "shape-margin",
      "href": "https://drafts.csswg.org/css-shapes-1/#propdef-shape-margin",
      "value": "<length-percentage [0,∞]>",
      "initial": "0",
      "appliesTo": "floats and initial letter boxes",
      "inherited": "no",
      "percentages": "refer to the inline size of the containing block",
      "computedValue": "computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "shape-margin",
        "shapeMargin"
      ],
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "text-size-adjust",
      "href": "https://drafts.csswg.org/css-size-adjust-1/#propdef-text-size-adjust",
      "value": "auto | none | <percentage [0,∞]>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "see below",
      "computedValue": "specified keyword or percentage",
      "canonicalOrder": "N/A",
      "animationType": "by computed value",
      "styleDeclaration": [
        "text-size-adjust",
        "textSizeAdjust"
      ],
      "spec": {
        "shortname": "css-size-adjust",
        "currentSpec": true
      }
    },
    {
      "name": "aspect-ratio",
      "href": "https://drafts.csswg.org/css-sizing-4/#propdef-aspect-ratio",
      "value": "auto || <ratio>",
      "initial": "auto",
      "appliesTo": "all elements except inline boxes and internal ruby or table boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword or a pair of numbers",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "aspect-ratio",
        "aspectRatio"
      ],
      "spec": {
        "shortname": "css-sizing-4",
        "currentSpec": false
      }
    },
    {
      "name": "contain-intrinsic-width",
      "href": "https://drafts.csswg.org/css-sizing-4/#propdef-contain-intrinsic-width",
      "value": "auto? [ none | <length [0,∞]> ]",
      "initial": "none",
      "appliesTo": "elements with size containment",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified, with <length> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "contain-intrinsic-size",
      "styleDeclaration": [
        "contain-intrinsic-width",
        "containIntrinsicWidth"
      ],
      "spec": {
        "shortname": "css-sizing-4",
        "currentSpec": false
      }
    },
    {
      "name": "contain-intrinsic-height",
      "href": "https://drafts.csswg.org/css-sizing-4/#propdef-contain-intrinsic-height",
      "value": "auto? [ none | <length [0,∞]> ]",
      "initial": "none",
      "appliesTo": "elements with size containment",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified, with <length> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "contain-intrinsic-size",
      "styleDeclaration": [
        "contain-intrinsic-height",
        "containIntrinsicHeight"
      ],
      "spec": {
        "shortname": "css-sizing-4",
        "currentSpec": false
      }
    },
    {
      "name": "contain-intrinsic-block-size",
      "href": "https://drafts.csswg.org/css-sizing-4/#propdef-contain-intrinsic-block-size",
      "value": "auto? [ none | <length [0,∞]> ]",
      "initial": "none",
      "appliesTo": "elements with size containment",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified, with <length> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "contain-intrinsic-size",
      "styleDeclaration": [
        "contain-intrinsic-block-size",
        "containIntrinsicBlockSize"
      ],
      "spec": {
        "shortname": "css-sizing-4",
        "currentSpec": false
      }
    },
    {
      "name": "contain-intrinsic-inline-size",
      "href": "https://drafts.csswg.org/css-sizing-4/#propdef-contain-intrinsic-inline-size",
      "value": "auto? [ none | <length [0,∞]> ]",
      "initial": "none",
      "appliesTo": "elements with size containment",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified, with <length> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "logicalPropertyGroup": "contain-intrinsic-size",
      "styleDeclaration": [
        "contain-intrinsic-inline-size",
        "containIntrinsicInlineSize"
      ],
      "spec": {
        "shortname": "css-sizing-4",
        "currentSpec": false
      }
    },
    {
      "name": "contain-intrinsic-size",
      "href": "https://drafts.csswg.org/css-sizing-4/#propdef-contain-intrinsic-size",
      "value": "[ auto? [ none | <length> ] ]{1,2}",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "contain-intrinsic-size",
        "containIntrinsicSize"
      ],
      "spec": {
        "shortname": "css-sizing-4",
        "currentSpec": false
      }
    },
    {
      "name": "min-intrinsic-sizing",
      "href": "https://drafts.csswg.org/css-sizing-4/#propdef-min-intrinsic-sizing",
      "value": "legacy | zero-if-scroll || zero-if-extrinsic",
      "initial": "legacy",
      "appliesTo": "all elements except inline boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "min-intrinsic-sizing",
        "minIntrinsicSizing"
      ],
      "spec": {
        "shortname": "css-sizing-4",
        "currentSpec": false
      }
    },
    {
      "name": "box-sizing",
      "href": "https://drafts.csswg.org/css-sizing-3/#propdef-box-sizing",
      "value": "content-box | border-box",
      "initial": "content-box",
      "appliesTo": "all elements that accept width or height",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "box-sizing",
        "boxSizing"
      ],
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      }
    },
    {
      "name": "voice-volume",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-volume",
      "value": "silent | [[x-soft | soft | medium | loud | x-loud] || <decibel>]",
      "initial": "medium",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "silent, or a keyword value and optionally also a decibel offset (if not zero)",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-volume",
        "voiceVolume"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "voice-balance",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-balance",
      "value": "<number> | left | center | right | leftwards | rightwards",
      "initial": "center",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the specified value resolved to a <number> between -100 and 100 (inclusive)",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-balance",
        "voiceBalance"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "speak",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-speak",
      "value": "auto | never | always",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "speak"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "speak-as",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-speak-as",
      "value": "normal | spell-out || digits || [ literal-punctuation | no-punctuation ]",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "speak-as",
        "speakAs"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "pause-before",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-pause-before",
      "value": "<time [0s,∞]> | none | x-weak | weak | medium | strong | x-strong",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "pause-before",
        "pauseBefore"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "pause-after",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-pause-after",
      "value": "<time [0s,∞]> | none | x-weak | weak | medium | strong | x-strong",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "pause-after",
        "pauseAfter"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "pause",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-pause",
      "value": "<'pause-before'> <'pause-after'>?",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "pause"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "rest-before",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-rest-before",
      "value": "<time [0s,∞]> | none | x-weak | weak | medium | strong | x-strong",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rest-before",
        "restBefore"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "rest-after",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-rest-after",
      "value": "<time [0s,∞]> | none | x-weak | weak | medium | strong | x-strong",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rest-after",
        "restAfter"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "rest",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-rest",
      "value": "<'rest-before'> <'rest-after'>?",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "rest"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "cue-before",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-cue-before",
      "value": "<uri> <decibel>? | none",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "cue-before",
        "cueBefore"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "cue-after",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-cue-after",
      "value": "<uri> <decibel>? | none",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "cue-after",
        "cueAfter"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "cue",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-cue",
      "value": "<'cue-before'> <'cue-after'>?",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "cue"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "voice-family",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-family",
      "value": "[[<family-name> | <generic-voice>],]* [<family-name> | <generic-voice>] | preserve",
      "initial": "implementation-dependent",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-family",
        "voiceFamily"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "voice-rate",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-rate",
      "value": "[normal | x-slow | slow | medium | fast | x-fast] || <percentage [0,∞]>",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "refer to default value",
      "computedValue": "a keyword value, and optionally also a percentage relative to the keyword (if not 100%)",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-rate",
        "voiceRate"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "voice-pitch",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-pitch",
      "value": "<frequency [0Hz,∞]> && absolute | [[x-low | low | medium | high | x-high] || [<frequency> | <semitones> | <percentage>]]",
      "initial": "medium",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "refer to inherited value",
      "computedValue": "one of the predefined pitch keywords if only the keyword is specified by itself, otherwise an absolute frequency calculated by converting the keyword value (if any) to a fixed frequency based on the current voice-family and by applying the specified relative offset (if any)",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-pitch",
        "voicePitch"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "voice-range",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-range",
      "value": "<frequency [0Hz,∞]> && absolute | [[x-low | low | medium | high | x-high] || [<frequency> | <semitones> | <percentage>]]",
      "initial": "medium",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "refer to inherited value",
      "computedValue": "one of the predefined pitch keywords if only the keyword is specified by itself, otherwise an absolute frequency calculated by converting the keyword value (if any) to a fixed frequency based on the current voice-family and by applying the specified relative offset (if any)",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-range",
        "voiceRange"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "voice-stress",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-stress",
      "value": "normal | strong | moderate | none | reduced",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-stress",
        "voiceStress"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "voice-duration",
      "href": "https://drafts.csswg.org/css-speech-1/#propdef-voice-duration",
      "value": "auto | <time [0s,∞]>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "voice-duration",
        "voiceDuration"
      ],
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "table-layout",
      "href": "https://drafts.csswg.org/css-tables-3/#propdef-table-layout",
      "value": "auto | fixed",
      "initial": "auto",
      "appliesTo": "table grid boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "table-layout",
        "tableLayout"
      ],
      "spec": {
        "shortname": "css-tables",
        "currentSpec": true
      }
    },
    {
      "name": "border-collapse",
      "href": "https://drafts.csswg.org/css-tables-3/#propdef-border-collapse",
      "value": "separate | collapse",
      "initial": "separate",
      "appliesTo": "table grid boxes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "border-collapse",
        "borderCollapse"
      ],
      "spec": {
        "shortname": "css-tables",
        "currentSpec": true
      }
    },
    {
      "name": "border-spacing",
      "href": "https://drafts.csswg.org/css-tables-3/#propdef-border-spacing",
      "value": "<length>{1,2}",
      "initial": "0px 0px",
      "appliesTo": "table grid boxes when border-collapse is separate",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "two absolute lengths",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "border-spacing",
        "borderSpacing"
      ],
      "spec": {
        "shortname": "css-tables",
        "currentSpec": true
      }
    },
    {
      "name": "caption-side",
      "href": "https://drafts.csswg.org/css-tables-3/#propdef-caption-side",
      "value": "top | bottom",
      "initial": "top",
      "appliesTo": "table-caption boxes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "caption-side",
        "captionSide"
      ],
      "spec": {
        "shortname": "css-tables",
        "currentSpec": true
      }
    },
    {
      "name": "empty-cells",
      "href": "https://drafts.csswg.org/css-tables-3/#propdef-empty-cells",
      "value": "show | hide",
      "initial": "show",
      "appliesTo": "table-cell boxes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "empty-cells",
        "emptyCells"
      ],
      "spec": {
        "shortname": "css-tables",
        "currentSpec": true
      }
    },
    {
      "name": "text-transform",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-text-transform",
      "value": "none | [capitalize | uppercase | lowercase ] || full-width || full-size-kana",
      "initial": "none",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-transform",
        "textTransform"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "word-space-transform",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-word-space-transform",
      "value": "none | [ space | ideographic-space ] && auto-phrase?",
      "initial": "none",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "word-space-transform",
        "wordSpaceTransform"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "white-space",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-white-space",
      "value": "normal | pre | nowrap | pre-wrap | break-spaces | pre-line",
      "initial": "normal",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "white-space",
        "whiteSpace"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "white-space-collapse",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-white-space-collapse",
      "value": "collapse | discard | preserve | preserve-breaks | preserve-spaces | break-spaces",
      "initial": "collapse",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "white-space-collapse",
        "whiteSpaceCollapse"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "white-space-trim",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-white-space-trim",
      "value": "none | discard-before || discard-after || discard-inner",
      "initial": "none",
      "appliesTo": "inline boxes and block containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "white-space-trim",
        "whiteSpaceTrim"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "tab-size",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-tab-size",
      "value": "<number [0,∞]> | <length [0,∞]>",
      "initial": "8",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the specified number or absolute length",
      "canonicalOrder": "n/a",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "tab-size",
        "tabSize"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "text-wrap-mode",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-text-wrap-mode",
      "value": "wrap | nowrap",
      "initial": "wrap",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-wrap-mode",
        "textWrapMode"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "wrap-inside",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-wrap-inside",
      "value": "auto | avoid",
      "initial": "auto",
      "appliesTo": "inline boxes",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "wrap-inside",
        "wrapInside"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "wrap-before",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-wrap-before",
      "value": "auto | avoid | avoid-line | avoid-flex | line | flex",
      "initial": "auto",
      "appliesTo": "inline-level boxes and flex items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "wrap-before",
        "wrapBefore"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "wrap-after",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-wrap-after",
      "value": "auto | avoid | avoid-line | avoid-flex | line | flex",
      "initial": "auto",
      "appliesTo": "inline-level boxes and flex items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "wrap-after",
        "wrapAfter"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-wrap-style",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-text-wrap-style",
      "value": "auto | balance | stable | pretty | avoid-orphans",
      "initial": "auto",
      "appliesTo": "block containers hat establish an inline formatting context",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-wrap-style",
        "textWrapStyle"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-wrap",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-text-wrap",
      "value": "<'text-wrap-mode'> || <'text-wrap-style'>",
      "initial": "wrap",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "see individual properties",
      "styleDeclaration": [
        "text-wrap",
        "textWrap"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "word-break",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-word-break",
      "value": "normal | keep-all | break-all | break-word",
      "initial": "normal",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "word-break",
        "wordBreak"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "line-break",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-line-break",
      "value": "auto | loose | normal | strict | anywhere",
      "initial": "auto",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "line-break",
        "lineBreak"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "hyphens",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-hyphens",
      "value": "none | manual | auto",
      "initial": "manual",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "hyphens"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "hyphenate-character",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-hyphenate-character",
      "value": "auto | <string>",
      "initial": "auto",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "hyphenate-character",
        "hyphenateCharacter"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "hyphenate-limit-zone",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-hyphenate-limit-zone",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "refers to length of the line box",
      "computedValue": "computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "hyphenate-limit-zone",
        "hyphenateLimitZone"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "hyphenate-limit-chars",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-hyphenate-limit-chars",
      "value": "[ auto | <integer> ]{1,3}",
      "initial": "auto",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "three values, each either the auto keyword or an integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "hyphenate-limit-chars",
        "hyphenateLimitChars"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "hyphenate-limit-lines",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-hyphenate-limit-lines",
      "value": "no-limit | <integer>",
      "initial": "no-limit",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword or integer",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "hyphenate-limit-lines",
        "hyphenateLimitLines"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "hyphenate-limit-last",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-hyphenate-limit-last",
      "value": "none | always | column | page | spread",
      "initial": "none",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "hyphenate-limit-last",
        "hyphenateLimitLast"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "overflow-wrap",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-overflow-wrap",
      "value": "normal | break-word | anywhere",
      "initial": "normal",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "overflow-wrap",
        "overflowWrap"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "word-wrap",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-word-wrap",
      "value": "normal | break-word | anywhere",
      "initial": "normal",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "word-wrap",
        "wordWrap"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "text-align",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-text-align",
      "value": "start | end | left | right | center | justify | match-parent | justify-all",
      "initial": "start",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "discrete",
      "canonicalOrder": "n/a",
      "styleDeclaration": [
        "text-align",
        "textAlign"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "text-align-all",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-text-align-all",
      "value": "start | end | left | right | center | justify | match-parent",
      "initial": "start",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "keyword as specified, except for match-parent which computes as defined above",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-align-all",
        "textAlignAll"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "text-align-last",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-text-align-last",
      "value": "auto | start | end | left | right | center | justify | match-parent",
      "initial": "auto",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "keyword as specified, except for match-parent which computes as defined above",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-align-last",
        "textAlignLast"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "text-justify",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-text-justify",
      "value": "auto | none | inter-word | inter-character",
      "initial": "auto",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword (except for the distribute legacy value)",
      "canonicalOrder": "n/a",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-justify",
        "textJustify"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "text-group-align",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-text-group-align",
      "value": "none | start | end | left | right | center",
      "initial": "none",
      "appliesTo": "block containers",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-group-align",
        "textGroupAlign"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "word-spacing",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-word-spacing",
      "value": "normal | <length>",
      "initial": "normal",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "an absolute length",
      "canonicalOrder": "n/a",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "word-spacing",
        "wordSpacing"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "letter-spacing",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-letter-spacing",
      "value": "normal | <length>",
      "initial": "normal",
      "appliesTo": "inline boxes and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "an absolute length",
      "canonicalOrder": "n/a",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "letter-spacing",
        "letterSpacing"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "line-padding",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-line-padding",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "inline boxes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "line-padding",
        "linePadding"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-autospace",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-text-autospace",
      "value": "normal | <autospace> | auto",
      "initial": "normal",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-autospace",
        "textAutospace"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-spacing-trim",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-text-spacing-trim",
      "value": "<spacing-trim> | auto",
      "initial": "normal",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-spacing-trim",
        "textSpacingTrim"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-spacing",
      "href": "https://drafts.csswg.org/css-text-4/#propdef-text-spacing",
      "value": "none | auto | <spacing-trim> || <autospace>",
      "initial": "see individual properties",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "animationType": "discrete",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "text-spacing",
        "textSpacing"
      ],
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-indent",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-text-indent",
      "value": "[ <length-percentage> ] && hanging? && each-line?",
      "initial": "0",
      "appliesTo": "block containers",
      "inherited": "yes",
      "percentages": "refers to block container’s own inline-axis inner size",
      "computedValue": "computed <length-percentage> value, plus any specified keywords",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "text-indent",
        "textIndent"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "hanging-punctuation",
      "href": "https://drafts.csswg.org/css-text-3/#propdef-hanging-punctuation",
      "value": "none | [ first || [ force-end | allow-end ] || last ]",
      "initial": "none",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "hanging-punctuation",
        "hangingPunctuation"
      ],
      "spec": {
        "shortname": "css-text",
        "currentSpec": true
      }
    },
    {
      "name": "text-decoration-line",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-decoration-line",
      "value": "none | [ underline || overline || line-through || blink ]",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no (but see prose, above)",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-decoration-line",
        "textDecorationLine"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-decoration-style",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-decoration-style",
      "value": "solid | double | dotted | dashed | wavy",
      "initial": "solid",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-decoration-style",
        "textDecorationStyle"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-decoration-color",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-decoration-color",
      "value": "<color>",
      "initial": "currentcolor",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "text-decoration-color",
        "textDecorationColor"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-decoration-thickness",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-decoration-thickness",
      "value": "auto | from-font | <length-percentage>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "text-decoration-thickness",
        "textDecorationThickness"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-decoration",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-decoration",
      "value": "<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "text-decoration",
        "textDecoration"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-underline-position",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-underline-position",
      "value": "auto | [ under || [ left | right ] ]",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-underline-position",
        "textUnderlinePosition"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-underline-offset",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-underline-offset",
      "value": "auto | <length-percentage>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified, with <length-percentage> values computed",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "text-underline-offset",
        "textUnderlineOffset"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-decoration-trim",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-decoration-trim",
      "value": "<length>{1,2} | auto",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword or absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "text-decoration-trim",
        "textDecorationTrim"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-decoration-skip",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-decoration-skip",
      "value": "none | auto",
      "initial": "See individual properties",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "See individual properties",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-decoration-skip",
        "textDecorationSkip"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-decoration-skip-self",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-decoration-skip-self",
      "value": "auto | skip-all | [ skip-underline || skip-overline || skip-line-through ] | no-skip",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword(s) except for skip-all, see below",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-decoration-skip-self",
        "textDecorationSkipSelf"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-decoration-skip-box",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-decoration-skip-box",
      "value": "none | all",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-decoration-skip-box",
        "textDecorationSkipBox"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-decoration-skip-spaces",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-decoration-skip-spaces",
      "value": "none | all | [ start || end ]",
      "initial": "start end",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-decoration-skip-spaces",
        "textDecorationSkipSpaces"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-decoration-skip-ink",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-decoration-skip-ink",
      "value": "auto | none | all",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-decoration-skip-ink",
        "textDecorationSkipInk"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-emphasis-style",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-emphasis-style",
      "value": "none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>",
      "initial": "none",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "the keyword none, a pair of keywords representing the shape and fill, or a string",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-emphasis-style",
        "textEmphasisStyle"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-emphasis-color",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-emphasis-color",
      "value": "<color>",
      "initial": "currentcolor",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "text-emphasis-color",
        "textEmphasisColor"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-emphasis",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-emphasis",
      "value": "<'text-emphasis-style'> || <'text-emphasis-color'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "text-emphasis",
        "textEmphasis"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-emphasis-position",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-emphasis-position",
      "value": "[ over | under ] && [ right | left ]?",
      "initial": "over right",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-emphasis-position",
        "textEmphasisPosition"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "text-emphasis-skip",
      "href": "https://drafts.csswg.org/css-text-decor-4/#propdef-text-emphasis-skip",
      "value": "spaces || punctuation || symbols || narrow",
      "initial": "spaces punctuation",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword(s)",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-emphasis-skip",
        "textEmphasisSkip"
      ],
      "spec": {
        "shortname": "css-text-decor-4",
        "currentSpec": false
      }
    },
    {
      "name": "text-shadow",
      "href": "https://drafts.csswg.org/css-text-decor-3/#propdef-text-shadow",
      "value": "none | [ <color>? && <length>{2,3} ]#",
      "initial": "none",
      "appliesTo": "text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "either the keyword none or a list, each item consisting of three absolute lengths plus a computed color",
      "canonicalOrder": "per grammar",
      "animationType": "as shadow list",
      "styleDeclaration": [
        "text-shadow",
        "textShadow"
      ],
      "spec": {
        "shortname": "css-text-decor",
        "currentSpec": true
      }
    },
    {
      "name": "translate",
      "href": "https://drafts.csswg.org/css-transforms-2/#propdef-translate",
      "value": "none | <length-percentage> [ <length-percentage> <length>? ]?",
      "initial": "none",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "relative to the width of the reference box (for the first value) or the height (for the second value)",
      "computedValue": "the keyword none or a pair of computed <length-percentage> values and an absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value, but see below for none",
      "styleDeclaration": [
        "translate"
      ],
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "rotate",
      "href": "https://drafts.csswg.org/css-transforms-2/#propdef-rotate",
      "value": "none | <angle> | [ x | y | z | <number>{3} ] && <angle>",
      "initial": "none",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none, or an <angle> with an axis consisting of a list of three <number>s",
      "canonicalOrder": "per grammar",
      "animationType": "as SLERP, but see below for none",
      "styleDeclaration": [
        "rotate"
      ],
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "scale",
      "href": "https://drafts.csswg.org/css-transforms-2/#propdef-scale",
      "value": "none | [ <number> | <percentage> ]{1,3}",
      "initial": "none",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none, or a list of 3 <number>s",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value, but see below for none",
      "styleDeclaration": [
        "scale"
      ],
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "transform-style",
      "href": "https://drafts.csswg.org/css-transforms-2/#propdef-transform-style",
      "value": "flat | preserve-3d",
      "initial": "flat",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "usedValue": "flat if a grouping property is present, specified keyword otherwise",
      "styleDeclaration": [
        "transform-style",
        "transformStyle"
      ],
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "perspective",
      "href": "https://drafts.csswg.org/css-transforms-2/#propdef-perspective",
      "value": "none | <length [0,∞]>",
      "initial": "none",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword none or an absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "perspective"
      ],
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "perspective-origin",
      "href": "https://drafts.csswg.org/css-transforms-2/#propdef-perspective-origin",
      "value": "<position>",
      "initial": "50% 50%",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "refer to the size of the reference box",
      "computedValue": "see background-position",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "perspective-origin",
        "perspectiveOrigin"
      ],
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "backface-visibility",
      "href": "https://drafts.csswg.org/css-transforms-2/#propdef-backface-visibility",
      "value": "visible | hidden",
      "initial": "visible",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "backface-visibility",
        "backfaceVisibility"
      ],
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "transform",
      "href": "https://drafts.csswg.org/css-transforms-1/#propdef-transform",
      "value": "none | <transform-list>",
      "initial": "none",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "refer to the size of reference box",
      "computedValue": "as specified, but with lengths made absolute",
      "canonicalOrder": "per grammar",
      "animationType": "transform list, see interpolation rules",
      "styleDeclaration": [
        "transform"
      ],
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "name": "transform-origin",
      "href": "https://drafts.csswg.org/css-transforms-1/#propdef-transform-origin",
      "value": "[ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] <length>? | [ [ center | left | right ] && [ center | top | bottom ] ] <length>?",
      "initial": "50% 50%",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "refer to the size of reference box",
      "computedValue": "see background-position",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "transform-origin",
        "transformOrigin"
      ],
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "name": "transform-box",
      "href": "https://drafts.csswg.org/css-transforms-1/#propdef-transform-box",
      "value": "content-box | border-box | fill-box | stroke-box | view-box",
      "initial": "view-box",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "transform-box",
        "transformBox"
      ],
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "name": "transition-behavior",
      "href": "https://drafts.csswg.org/css-transitions-2/#propdef-transition-behavior",
      "value": "<transition-behavior-value>#",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "transition-behavior",
        "transitionBehavior"
      ],
      "spec": {
        "shortname": "css-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "transition-property",
      "href": "https://drafts.csswg.org/css-transitions-1/#propdef-transition-property",
      "value": "none | <single-transition-property>#",
      "initial": "all",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "the keyword none else a list of identifiers",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "transition-property",
        "transitionProperty"
      ],
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "transition-duration",
      "href": "https://drafts.csswg.org/css-transitions-1/#propdef-transition-duration",
      "value": "<time [0s,∞]>#",
      "initial": "0s",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a duration",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "transition-duration",
        "transitionDuration"
      ],
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "transition-timing-function",
      "href": "https://drafts.csswg.org/css-transitions-1/#propdef-transition-timing-function",
      "value": "<easing-function>#",
      "initial": "ease",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "transition-timing-function",
        "transitionTimingFunction"
      ],
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "transition-delay",
      "href": "https://drafts.csswg.org/css-transitions-1/#propdef-transition-delay",
      "value": "<time>#",
      "initial": "0s",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "list, each item a duration",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "transition-delay",
        "transitionDelay"
      ],
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "transition",
      "href": "https://drafts.csswg.org/css-transitions-1/#propdef-transition",
      "value": "<single-transition>#",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "not animatable",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "transition"
      ],
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "outline",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-outline",
      "value": "<'outline-width'> || <'outline-style'> || <'outline-color'>",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "outline"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "outline-width",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-outline-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length, snapped as a border width; 0 if the outline style is none.",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "outline-width",
        "outlineWidth"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "outline-style",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-outline-style",
      "value": "auto | <outline-line-style>",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "outline-style",
        "outlineStyle"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "outline-color",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-outline-color",
      "value": "auto | <color> | <image-1D>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see below",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "outline-color",
        "outlineColor"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "outline-offset",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-outline-offset",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "outline-offset",
        "outlineOffset"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "resize",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-resize",
      "value": "none | both | horizontal | vertical | block | inline",
      "initial": "none",
      "appliesTo": "elements that are scroll containers and optionally replaced elements such as images, videos, and iframes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "resize"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "cursor",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-cursor",
      "value": "[ [ <url> | <url-set> ] [<x> <y>]? ]#? [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | grab | grabbing | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out ]",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified, except with any relative URLs converted to absolute",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "cursor"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "caret-color",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-caret-color",
      "value": "auto | <color>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "The computed value for auto is auto. For <color> values, see CSS Color 4 § 14. Resolving <color> Values.",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "caret-color",
        "caretColor"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "caret-animation",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-caret-animation",
      "value": "auto | manual",
      "initial": "auto",
      "appliesTo": "elements that accept input",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "caret-animation",
        "caretAnimation"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "caret-shape",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-caret-shape",
      "value": "auto | bar | block | underscore",
      "initial": "auto",
      "appliesTo": "elements that accept input",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "caret-shape",
        "caretShape"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "caret",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-caret",
      "value": "<'caret-color'> || <'caret-animation'> || <'caret-shape'>",
      "initial": "auto",
      "appliesTo": "elements that accept input",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "caret"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "nav-up",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-nav-up",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "nav-up",
        "navUp"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "nav-right",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-nav-right",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "nav-right",
        "navRight"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "nav-down",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-nav-down",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "nav-down",
        "navDown"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "nav-left",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-nav-left",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "nav-left",
        "navLeft"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "user-select",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-user-select",
      "value": "auto | text | none | contain | all",
      "initial": "auto",
      "appliesTo": "all elements, and optionally to the ::before and ::after pseudo-elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "user-select",
        "userSelect"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "interactivity",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-interactivity",
      "value": "auto | inert",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "interactivity"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "accent-color",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef-accent-color",
      "value": "auto | <color>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the keyword auto or a computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "accent-color",
        "accentColor"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "-webkit-appearance",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef--webkit-appearance",
      "legacyAliasOf": "appearance",
      "styleDeclaration": [
        "-webkit-appearance",
        "WebkitAppearance",
        "webkitAppearance"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      },
      "value": "none | auto | base | <compat-auto> | <compat-special> | base"
    },
    {
      "name": "-webkit-user-select",
      "href": "https://drafts.csswg.org/css-ui-4/#propdef--webkit-user-select",
      "styleDeclaration": [
        "-webkit-user-select",
        "WebkitUserSelect",
        "webkitUserSelect"
      ],
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "interpolate-size",
      "href": "https://drafts.csswg.org/css-values-5/#propdef-interpolate-size",
      "value": "numeric-only | allow-keywords",
      "initial": "numeric-only",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "interpolate-size",
        "interpolateSize"
      ],
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "view-transition-class",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#propdef-view-transition-class",
      "value": "none | <custom-ident>+",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "view-transition-class",
        "viewTransitionClass"
      ],
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "view-transition-group",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#propdef-view-transition-group",
      "value": "normal | contain | nearest | <custom-ident>",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "view-transition-group",
        "viewTransitionGroup"
      ],
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "view-transition-name",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#propdef-view-transition-name",
      "value": "none | <custom-ident>",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "view-transition-name",
        "viewTransitionName"
      ],
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "zoom",
      "href": "https://drafts.csswg.org/css-viewport/#propdef-zoom",
      "value": "<number [0,∞]> || <percentage [0,∞]>",
      "initial": "1",
      "appliesTo": "all <length> property values of all elements",
      "inherited": "no",
      "percentages": "Converted to <number>",
      "computedValue": "as specified, but with <percentage> converted to the equivalent <number>",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "media": "visual",
      "styleDeclaration": [
        "zoom"
      ],
      "spec": {
        "shortname": "css-viewport",
        "currentSpec": true
      }
    },
    {
      "name": "will-change",
      "href": "https://drafts.csswg.org/css-will-change-1/#propdef-will-change",
      "value": "auto | <animateable-feature>#",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "will-change",
        "willChange"
      ],
      "spec": {
        "shortname": "css-will-change",
        "currentSpec": true
      }
    },
    {
      "name": "direction",
      "href": "https://drafts.csswg.org/css-writing-modes-4/#propdef-direction",
      "value": "ltr | rtl",
      "initial": "ltr",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "n/a",
      "animationType": "not animatable",
      "styleDeclaration": [
        "direction"
      ],
      "spec": {
        "shortname": "css-writing-modes",
        "currentSpec": true
      }
    },
    {
      "name": "unicode-bidi",
      "href": "https://drafts.csswg.org/css-writing-modes-4/#propdef-unicode-bidi",
      "value": "normal | embed | isolate | bidi-override | isolate-override | plaintext",
      "initial": "normal",
      "appliesTo": "all elements, but see prose",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "unicode-bidi",
        "unicodeBidi"
      ],
      "spec": {
        "shortname": "css-writing-modes",
        "currentSpec": true
      }
    },
    {
      "name": "writing-mode",
      "href": "https://drafts.csswg.org/css-writing-modes-4/#propdef-writing-mode",
      "value": "horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr",
      "initial": "horizontal-tb",
      "appliesTo": "All elements except table row groups, table column groups, table rows, table columns, ruby base containers, ruby annotation containers",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "n/a",
      "animationType": "not animatable",
      "styleDeclaration": [
        "writing-mode",
        "writingMode"
      ],
      "spec": {
        "shortname": "css-writing-modes",
        "currentSpec": true
      }
    },
    {
      "name": "text-orientation",
      "href": "https://drafts.csswg.org/css-writing-modes-4/#propdef-text-orientation",
      "value": "mixed | upright | sideways",
      "initial": "mixed",
      "appliesTo": "all elements except table row groups, rows, column groups, and columns; and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "n/a",
      "animationType": "not animatable",
      "styleDeclaration": [
        "text-orientation",
        "textOrientation"
      ],
      "spec": {
        "shortname": "css-writing-modes",
        "currentSpec": true
      }
    },
    {
      "name": "glyph-orientation-vertical",
      "href": "https://drafts.csswg.org/css-writing-modes-4/#propdef-glyph-orientation-vertical",
      "value": "auto | 0deg | 90deg | 0 | 90",
      "initial": "n/a",
      "appliesTo": "n/a",
      "inherited": "n/a",
      "percentages": "n/a",
      "computedValue": "n/a",
      "canonicalOrder": "n/a",
      "animationType": "n/a",
      "styleDeclaration": [
        "glyph-orientation-vertical",
        "glyphOrientationVertical"
      ],
      "spec": {
        "shortname": "css-writing-modes",
        "currentSpec": true
      }
    },
    {
      "name": "text-combine-upright",
      "href": "https://drafts.csswg.org/css-writing-modes-4/#propdef-text-combine-upright",
      "value": "none | all | [ digits <integer [2,4]>? ]",
      "initial": "none",
      "appliesTo": "inline boxes and text",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword, plus integer if digits",
      "canonicalOrder": "n/a",
      "animationType": "not animatable",
      "styleDeclaration": [
        "text-combine-upright",
        "textCombineUpright"
      ],
      "spec": {
        "shortname": "css-writing-modes",
        "currentSpec": true
      }
    },
    {
      "name": "z-index",
      "href": "https://drafts.csswg.org/css2/#propdef-z-index",
      "value": "auto | <integer> | inherit",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual",
      "styleDeclaration": [
        "z-index",
        "zIndex"
      ],
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "page-break-before",
      "href": "https://drafts.csswg.org/css2/#propdef-page-break-before",
      "value": "auto | always | avoid | left | right | inherit",
      "initial": "auto",
      "appliesTo": "block-level elements (but see text)",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual, paged",
      "styleDeclaration": [
        "page-break-before",
        "pageBreakBefore"
      ],
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "page-break-after",
      "href": "https://drafts.csswg.org/css2/#propdef-page-break-after",
      "value": "auto | always | avoid | left | right | inherit",
      "initial": "auto",
      "appliesTo": "block-level elements (but see text)",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual, paged",
      "styleDeclaration": [
        "page-break-after",
        "pageBreakAfter"
      ],
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "page-break-inside",
      "href": "https://drafts.csswg.org/css2/#propdef-page-break-inside",
      "value": "avoid | auto | inherit",
      "initial": "auto",
      "appliesTo": "block-level elements (but see text)",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual, paged",
      "styleDeclaration": [
        "page-break-inside",
        "pageBreakInside"
      ],
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "fill-rule",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-rule",
      "value": "nonzero | evenodd",
      "initial": "nonzero",
      "appliesTo": "SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "fill-rule",
        "fillRule"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-break",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-break",
      "value": "bounding-box | slice | clone",
      "initial": "bounding-box",
      "appliesTo": "all elements",
      "inherited": "yes?",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "fill-break",
        "fillBreak"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-color",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-color",
      "value": "<color>",
      "initial": "currentcolor",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "fill-color",
        "fillColor"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-image",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-image",
      "value": "<paint>#",
      "initial": "none",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified, with any <image> computed",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "fill-image",
        "fillImage"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-origin",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-origin",
      "value": "match-parent | fill-box | stroke-box | content-box | padding-box | border-box",
      "initial": "match-parent",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "fill-origin",
        "fillOrigin"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-position",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-position",
      "value": "<position>#",
      "initial": "0% 0%",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "A list, each item consisting of: a pair of offsets (horizontal and vertical) from the top left origin each given as a combination of an absolute length and a percentage",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "fill-position",
        "fillPosition"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-size",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-size",
      "value": "<bg-size>#",
      "initial": "auto",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified, but with lengths made absolute and omitted auto keywords filled in",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "fill-size",
        "fillSize"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-repeat",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-repeat",
      "value": "<repeat-style>#",
      "initial": "repeat",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "A list, each item consisting of: two keywords, one per dimension",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "fill-repeat",
        "fillRepeat"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "fill-opacity",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-fill-opacity",
      "value": "<'opacity'>",
      "initial": "1",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the specified value converted to a <number>, clamped to the range [0,1]",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "fill-opacity",
        "fillOpacity"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-width",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-width",
      "value": "[<length-percentage> | <number>]#",
      "initial": "1px",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "relative to the scaled viewport size",
      "computedValue": "the absolute length, or percentage",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "stroke-width",
        "strokeWidth"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-align",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-align",
      "value": "center | inset | outset",
      "initial": "center",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-align",
        "strokeAlign"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-linecap",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-linecap",
      "value": "butt | round | square",
      "initial": "butt",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-linecap",
        "strokeLinecap"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-linejoin",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-linejoin",
      "value": "[ crop | arcs | miter ] || [ bevel | round | fallback ]",
      "initial": "miter",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-linejoin",
        "strokeLinejoin"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-miterlimit",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-miterlimit",
      "value": "<number>",
      "initial": "4",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "a number",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-miterlimit",
        "strokeMiterlimit"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-break",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-break",
      "value": "bounding-box | slice | clone",
      "initial": "bounding-box",
      "appliesTo": "all elements",
      "inherited": "?",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-break",
        "strokeBreak"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-dasharray",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-dasharray",
      "value": "none | [<length-percentage> | <number>]+#",
      "initial": "none",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "relative to the scaled viewport size",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "stroke-dasharray",
        "strokeDasharray"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-dashoffset",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-dashoffset",
      "value": "<length-percentage> | <number>",
      "initial": "0",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "relative to the scaled viewport size",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "stroke-dashoffset",
        "strokeDashoffset"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-dash-corner",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-dash-corner",
      "value": "none | <length>",
      "initial": "none",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified value, with lengths made absolute",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value if <length>, otherwise discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-dash-corner",
        "strokeDashCorner"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-dash-justify",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-dash-justify",
      "value": "none | [ stretch | compress ] || [ dashes || gaps ]",
      "initial": "none",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified value, with lengths made absolute",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-dash-justify",
        "strokeDashJustify"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-color",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-color",
      "value": "<color>#",
      "initial": "transparent",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the computed color",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "stroke-color",
        "strokeColor"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-image",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-image",
      "value": "<paint>#",
      "initial": "none",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified, with any <image> computed",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "stroke-image",
        "strokeImage"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-origin",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-origin",
      "value": "match-parent | fill-box | stroke-box | content-box | padding-box | border-box",
      "initial": "match-parent",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-origin",
        "strokeOrigin"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-position",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-position",
      "value": "<position>#",
      "initial": "0% 0%",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "A list, each item consisting of: a pair of offsets (horizontal and vertical) from the top left origin each given as a combination of an absolute length and a percentage",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "stroke-position",
        "strokePosition"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-size",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-size",
      "value": "<bg-size>#",
      "initial": "auto",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified, but with lengths made absolute and omitted auto keywords filled in",
      "canonicalOrder": "per grammar",
      "animationType": "repeatable list",
      "media": "visual",
      "styleDeclaration": [
        "stroke-size",
        "strokeSize"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-repeat",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-repeat",
      "value": "<repeat-style>#",
      "initial": "repeat",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "A list, each item consisting of: two keywords, one per dimension",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "stroke-repeat",
        "strokeRepeat"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-opacity",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-opacity",
      "value": "<'opacity'>",
      "initial": "1",
      "appliesTo": "text and SVG shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "the specified value converted to a <number>, clamped to the range [0,1]",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "stroke-opacity",
        "strokeOpacity"
      ],
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "backdrop-filter",
      "href": "https://drafts.fxtf.org/filter-effects-2/#propdef-backdrop-filter",
      "value": "none | <filter-value-list>",
      "initial": "none",
      "appliesTo": "All elements. In SVG, it applies to container elements without the defs element and all graphics elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "see prose in Filter Effects 1 § 14. Animation of Filters.",
      "media": "visual",
      "styleDeclaration": [
        "backdrop-filter",
        "backdropFilter"
      ],
      "spec": {
        "shortname": "filter-effects-2",
        "currentSpec": false
      }
    },
    {
      "name": "filter",
      "href": "https://drafts.fxtf.org/filter-effects-1/#propdef-filter",
      "value": "none | <filter-value-list>",
      "initial": "none",
      "appliesTo": "All elements. In SVG, it applies to container elements without the defs element, all graphics elements and the use element.",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "See prose in Animation of Filters.",
      "media": "visual",
      "styleDeclaration": [
        "filter"
      ],
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "flood-color",
      "href": "https://drafts.fxtf.org/filter-effects-1/#propdef-flood-color",
      "value": "<color>",
      "initial": "black",
      "appliesTo": "feFlood and feDropShadow elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "flood-color",
        "floodColor"
      ],
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "flood-opacity",
      "href": "https://drafts.fxtf.org/filter-effects-1/#propdef-flood-opacity",
      "value": "<'opacity'>",
      "initial": "1",
      "appliesTo": "feFlood and feDropShadow elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the specified value converted to a number, clamped to the range [0,1]",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "flood-opacity",
        "floodOpacity"
      ],
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "color-interpolation-filters",
      "href": "https://drafts.fxtf.org/filter-effects-1/#propdef-color-interpolation-filters",
      "value": "auto | sRGB | linearRGB",
      "initial": "linearRGB",
      "appliesTo": "All filter primitives",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "media": "visual",
      "styleDeclaration": [
        "color-interpolation-filters",
        "colorInterpolationFilters"
      ],
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "lighting-color",
      "href": "https://drafts.fxtf.org/filter-effects-1/#propdef-lighting-color",
      "value": "<color>",
      "initial": "white",
      "appliesTo": "feDiffuseLighting and feSpecularLighting elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "lighting-color",
        "lightingColor"
      ],
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "math-style",
      "href": "https://w3c.github.io/mathml-core/#propdef-math-style",
      "value": "normal | compact",
      "initial": "normal",
      "appliesTo": "All elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "not animatable",
      "media": "visual",
      "styleDeclaration": [
        "math-style",
        "mathStyle"
      ],
      "spec": {
        "shortname": "mathml-core",
        "currentSpec": true
      }
    },
    {
      "name": "math-shift",
      "href": "https://w3c.github.io/mathml-core/#propdef-math-shift",
      "value": "normal | compact",
      "initial": "normal",
      "appliesTo": "All elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "n/a",
      "animationType": "not animatable",
      "media": "visual",
      "styleDeclaration": [
        "math-shift",
        "mathShift"
      ],
      "spec": {
        "shortname": "mathml-core",
        "currentSpec": true
      }
    },
    {
      "name": "math-depth",
      "href": "https://w3c.github.io/mathml-core/#propdef-math-depth",
      "value": "auto-add | add(<integer>) | <integer>",
      "initial": "0",
      "appliesTo": "All elements",
      "inherited": "yes",
      "percentages": "n/a",
      "computedValue": "an integer, see below",
      "canonicalOrder": "n/a",
      "animationType": "not animatable",
      "media": "visual",
      "styleDeclaration": [
        "math-depth",
        "mathDepth"
      ],
      "spec": {
        "shortname": "mathml-core",
        "currentSpec": true
      }
    },
    {
      "name": "offset-path",
      "href": "https://drafts.fxtf.org/motion-1/#propdef-offset-path",
      "value": "none | <offset-path> || <coord-box>",
      "initial": "none",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "offset-path",
        "offsetPath"
      ],
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "offset-distance",
      "href": "https://drafts.fxtf.org/motion-1/#propdef-offset-distance",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "relative to the offset path length",
      "computedValue": "a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "offset-distance",
        "offsetDistance"
      ],
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "offset-position",
      "href": "https://drafts.fxtf.org/motion-1/#propdef-offset-position",
      "value": "normal | auto | <position>",
      "initial": "normal",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "Refer to the size of containing block",
      "computedValue": "The normal or auto keywords, or a computed <position>",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "offset-position",
        "offsetPosition"
      ],
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "offset-anchor",
      "href": "https://drafts.fxtf.org/motion-1/#propdef-offset-anchor",
      "value": "auto | <position>",
      "initial": "auto",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "relative to the width and the height of the element’s reference box",
      "computedValue": "the auto keyword or a computed <position>",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "offset-anchor",
        "offsetAnchor"
      ],
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "offset-rotate",
      "href": "https://drafts.fxtf.org/motion-1/#propdef-offset-rotate",
      "value": "[ auto | reverse ] || <angle>",
      "initial": "auto",
      "appliesTo": "transformable elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "computed <angle> value, optionally preceded by auto",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "media": "visual",
      "styleDeclaration": [
        "offset-rotate",
        "offsetRotate"
      ],
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "offset",
      "href": "https://drafts.fxtf.org/motion-1/#propdef-offset",
      "value": "[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?",
      "initial": "see individual properties",
      "appliesTo": "transformable elements",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "offset"
      ],
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-timeline-name",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-scroll-timeline-name",
      "value": "[ none | <dashed-ident> ]#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a list of CSS identifiers",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "scroll-timeline-name",
        "scrollTimelineName"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-timeline-axis",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-scroll-timeline-axis",
      "value": "[ block | inline | x | y ]#",
      "initial": "block",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "a list of the keywords specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "scroll-timeline-axis",
        "scrollTimelineAxis"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "scroll-timeline",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-scroll-timeline",
      "value": "[ <'scroll-timeline-name'> <'scroll-timeline-axis'>? ]#",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "not animatable",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "scroll-timeline",
        "scrollTimeline"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "view-timeline-name",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-view-timeline-name",
      "value": "[ none | <dashed-ident> ]#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a list of CSS identifiers",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "view-timeline-name",
        "viewTimelineName"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "view-timeline-axis",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-view-timeline-axis",
      "value": "[ block | inline | x | y ]#",
      "initial": "block",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "a list of the keywords specified",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "view-timeline-axis",
        "viewTimelineAxis"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "view-timeline-inset",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-view-timeline-inset",
      "value": "[ [ auto | <length-percentage> ]{1,2} ]#",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the corresponding dimension of the relevant scrollport",
      "computedValue": "a list consisting of two-value pairs representing the start and end insets each as either the keyword auto or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "styleDeclaration": [
        "view-timeline-inset",
        "viewTimelineInset"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "view-timeline",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-view-timeline",
      "value": "[ <'view-timeline-name'> [ <'view-timeline-axis'> || <'view-timeline-inset'> ]? ]#",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "view-timeline",
        "viewTimeline"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-range",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-animation-range",
      "value": "[ <'animation-range-start'> <'animation-range-end'>? ]#",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "animation-range",
        "animationRange"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-range-start",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-animation-range-start",
      "value": "[ normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]#",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the specified named timeline range if one was specified, else to the entire timeline",
      "computedValue": "list, each item either the keyword normal or a timeline range and progress percentage",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-range-start",
        "animationRangeStart"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "animation-range-end",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-animation-range-end",
      "value": "[ normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]#",
      "initial": "normal",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "relative to the specified named timeline range if one was specified, else to the entire timeline",
      "computedValue": "list, each item either the keyword normal or a timeline range and progress percentage",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "animation-range-end",
        "animationRangeEnd"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "timeline-scope",
      "href": "https://drafts.csswg.org/scroll-animations-1/#propdef-timeline-scope",
      "value": "none | all | <dashed-ident>#",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "the keyword none or a list of CSS identifiers",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable",
      "styleDeclaration": [
        "timeline-scope",
        "timelineScope"
      ],
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-alignment",
      "href": "https://svgwg.org/specs/strokes/#StrokeAlignmentProperty",
      "value": "center | inner | outer",
      "initial": "center",
      "appliesTo": "shapes and text content elements",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computed value": "as specified",
      "animatable": "yes",
      "styleDeclaration": [
        "stroke-alignment",
        "strokeAlignment"
      ],
      "spec": {
        "shortname": "svg-strokes",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-dashcorner",
      "href": "https://svgwg.org/specs/strokes/#StrokeDashcornerProperty",
      "value": "none | <length>",
      "initial": "none",
      "appliesTo": "shapes and text content elements",
      "inherited": "yes",
      "percentages": "refer to the size of the current viewport (see Units)",
      "media": "visual",
      "computed value": "absolute length or keyword specified",
      "animatable": "yes",
      "styleDeclaration": [
        "stroke-dashcorner",
        "strokeDashcorner"
      ],
      "spec": {
        "shortname": "svg-strokes",
        "currentSpec": true
      }
    },
    {
      "name": "stroke-dashadjust",
      "href": "https://svgwg.org/specs/strokes/#StrokeDashadjustProperty",
      "value": "none | [stretch | compress] [dashes | gaps]?",
      "initial": "none",
      "appliesTo": "shapes and text content elements",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computed value": "as specified",
      "animatable": "yes",
      "styleDeclaration": [
        "stroke-dashadjust",
        "strokeDashadjust"
      ],
      "spec": {
        "shortname": "svg-strokes",
        "currentSpec": true
      }
    },
    {
      "name": "cx",
      "href": "https://svgwg.org/svg2-draft/geometry.html#CxProperty",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "‘circle’ and ‘ellipse’ elements",
      "inherited": "no",
      "percentages": "refer to the width of the current SVG viewport (see Units)",
      "media": "visual",
      "computedValue": "an absolute length or percentage",
      "animationType": "by computed value",
      "styleDeclaration": [
        "cx"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "cy",
      "href": "https://svgwg.org/svg2-draft/geometry.html#CyProperty",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "‘circle’ and ‘ellipse’ elements",
      "inherited": "no",
      "percentages": "refer to the height of the current SVG viewport (see Units)",
      "media": "visual",
      "computedValue": "an absolute length or percentage",
      "animationType": "by computed value",
      "styleDeclaration": [
        "cy"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "r",
      "href": "https://svgwg.org/svg2-draft/geometry.html#RProperty",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "‘circle’ element",
      "inherited": "no",
      "percentages": "refer to the normalized diagonal of the current SVG viewport (see Units)",
      "media": "visual",
      "computedValue": "an absolute length or percentage",
      "animationType": "by computed value",
      "styleDeclaration": [
        "r"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "rx",
      "href": "https://svgwg.org/svg2-draft/geometry.html#RxProperty",
      "value": "<length-percentage> | auto",
      "initial": "auto",
      "appliesTo": "‘ellipse’, ‘rect’ elements",
      "inherited": "no",
      "percentages": "refer to the width of the current SVG viewport (see Units)",
      "media": "visual",
      "computedValue": "an absolute length or percentage",
      "animationType": "by computed value",
      "styleDeclaration": [
        "rx"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "ry",
      "href": "https://svgwg.org/svg2-draft/geometry.html#RyProperty",
      "value": "<length-percentage> | auto",
      "initial": "auto",
      "appliesTo": "‘ellipse’, ‘rect’",
      "inherited": "no",
      "percentages": "refer to the height of the current SVG viewport (see Units)",
      "media": "visual",
      "computedValue": "an absolute length or percentage",
      "animatableType": "by computed value",
      "styleDeclaration": [
        "ry"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "x",
      "href": "https://svgwg.org/svg2-draft/geometry.html#XProperty",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "‘svg’, ‘rect’, ‘image’, ‘foreignObject’ elements",
      "inherited": "no",
      "percentages": "refer to the width of the current SVG viewport (see Units)",
      "media": "visual",
      "computedValue": "an absolute length or percentage",
      "animationType": "by computed value",
      "styleDeclaration": [
        "x"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "y",
      "href": "https://svgwg.org/svg2-draft/geometry.html#YProperty",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "‘svg’, ‘rect’, ‘image’, ‘foreignObject’ elements",
      "inherited": "no",
      "percentages": "refer to the height of the current SVG viewport (see Units)",
      "media": "visual",
      "computedValue": "an absolute length or percentage",
      "animationType": "by computed value",
      "styleDeclaration": [
        "y"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "vector-effect",
      "href": "https://svgwg.org/svg2-draft/coords.html#VectorEffectProperty",
      "value": "none | non-scaling-stroke | non-scaling-size | non-rotation | fixed-position",
      "initial": "none",
      "appliesTo": "graphics elements and ‘use’",
      "inherited": "no",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "discrete",
      "styleDeclaration": [
        "vector-effect",
        "vectorEffect"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "d",
      "href": "https://svgwg.org/svg2-draft/paths.html#DProperty",
      "value": "none | <string>",
      "initial": "none",
      "appliesTo": "‘path’",
      "inherited": "no",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "See prose",
      "styleDeclaration": [
        "d"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "shape-subtract",
      "href": "https://svgwg.org/svg2-draft/text.html#ShapesubtractProperty",
      "value": "none | [ <basic-shape>| <uri> ]+",
      "initial": "none",
      "appliesTo": "‘text’ elements",
      "inherited": "no",
      "percentages": "Relative to the ‘viewBox’",
      "media": "visual",
      "computedValue": "computed lengths for any <basic-shape>, the absolute URI for <uri>, otherwise as specified",
      "animationType": "See Interpolation of Basic Shapes",
      "styleDeclaration": [
        "shape-subtract",
        "shapeSubtract"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "text-anchor",
      "href": "https://svgwg.org/svg2-draft/text.html#TextAnchorProperty",
      "value": "start | middle | end",
      "initial": "start",
      "appliesTo": "text content elements",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-anchor",
        "textAnchor"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "fill",
      "href": "https://svgwg.org/svg2-draft/painting.html#FillProperty",
      "value": "<paint>",
      "initial": "black",
      "appliesTo": "shapes and text content elements",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified, but with <color> values computed and <url> values made absolute",
      "animationType": "by computed value",
      "styleDeclaration": [
        "fill"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "stroke",
      "href": "https://svgwg.org/svg2-draft/painting.html#StrokeProperty",
      "value": "<paint>",
      "initial": "none",
      "appliesTo": "shapes and text content elements",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified, but with <color> values computed and <url> values made absolute",
      "animationType": "by computed value",
      "styleDeclaration": [
        "stroke"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "marker-start",
      "href": "https://svgwg.org/svg2-draft/painting.html#MarkerStartProperty",
      "value": "none | <marker-ref>",
      "initial": "none",
      "appliesTo": "shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified, but with <url> values (that are part of a <marker-ref>) made absolute",
      "animationType": "discrete",
      "styleDeclaration": [
        "marker-start",
        "markerStart"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "marker-mid",
      "href": "https://svgwg.org/svg2-draft/painting.html#MarkerMidProperty",
      "value": "none | <marker-ref>",
      "initial": "none",
      "appliesTo": "shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified, but with <url> values (that are part of a <marker-ref>) made absolute",
      "animationType": "discrete",
      "styleDeclaration": [
        "marker-mid",
        "markerMid"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "marker-end",
      "href": "https://svgwg.org/svg2-draft/painting.html#MarkerEndProperty",
      "value": "none | <marker-ref>",
      "initial": "none",
      "appliesTo": "shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified, but with <url> values (that are part of a <marker-ref>) made absolute",
      "animationType": "discrete",
      "styleDeclaration": [
        "marker-end",
        "markerEnd"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "marker",
      "href": "https://svgwg.org/svg2-draft/painting.html#MarkerProperty",
      "value": "none | <marker-ref>",
      "initial": "not defined for shorthand properties",
      "appliesTo": "shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "see individual properties",
      "animationType": "discrete",
      "styleDeclaration": [
        "marker"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "paint-order",
      "href": "https://svgwg.org/svg2-draft/painting.html#PaintOrderProperty",
      "value": "normal | [ fill || stroke || markers ]",
      "initial": "normal",
      "appliesTo": "shapes and text content elements",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "discrete",
      "styleDeclaration": [
        "paint-order",
        "paintOrder"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "color-interpolation",
      "href": "https://svgwg.org/svg2-draft/painting.html#ColorInterpolationProperty",
      "value": "auto | sRGB | linearRGB",
      "initial": "sRGB",
      "appliesTo": "container elements, graphics elements, gradient elements, ‘use’ and ‘animate’",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "discrete",
      "styleDeclaration": [
        "color-interpolation",
        "colorInterpolation"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "shape-rendering",
      "href": "https://svgwg.org/svg2-draft/painting.html#ShapeRenderingProperty",
      "value": "auto | optimizeSpeed | crispEdges | geometricPrecision",
      "initial": "auto",
      "appliesTo": "shapes",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "discrete",
      "styleDeclaration": [
        "shape-rendering",
        "shapeRendering"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "text-rendering",
      "href": "https://svgwg.org/svg2-draft/painting.html#TextRenderingProperty",
      "value": "auto | optimizeSpeed | optimizeLegibility | geometricPrecision",
      "initial": "auto",
      "appliesTo": "‘text’",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "discrete",
      "styleDeclaration": [
        "text-rendering",
        "textRendering"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "pointer-events",
      "href": "https://svgwg.org/svg2-draft/interact.html#PointerEventsProperty",
      "value": "auto | bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none",
      "initial": "auto",
      "appliesTo": "container elements, graphics elements and ‘use’",
      "inherited": "yes",
      "percentages": "N/A",
      "media": "visual",
      "computedValue": "as specified",
      "animationType": "discrete",
      "styleDeclaration": [
        "pointer-events",
        "pointerEvents"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "stop-color",
      "href": "https://svgwg.org/svg2-draft/pservers.html#StopColorProperty",
      "styleDeclaration": [
        "stop-color",
        "stopColor"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    },
    {
      "name": "stop-opacity",
      "href": "https://svgwg.org/svg2-draft/pservers.html#StopOpacityProperty",
      "styleDeclaration": [
        "stop-opacity",
        "stopOpacity"
      ],
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    }
  ],
  "selectors": [
    {
      "name": "::picker()",
      "prose": "The ::picker() pseudo-element represents the part of the form control that pops out of the page.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-picker",
      "value": "::picker( <form-control-identifier>+ )",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "name": "::picker-icon",
      "prose": "The ::picker-icon pseudo-element represents the part of the control that represents the icon denoting the presence of the picker. It is only generated when the originating element has basic appearance and if it opens a picker. It is a fully styleable pseudo-element and inherits from its originating element.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-picker-icon",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::picker-icon"
    },
    {
      "name": "::file-selector-button",
      "prose": "The ::file-selector-button pseudo-element represents the button used to open a file picker, if the UA renders such a button.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-file-selector-button",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::file-selector-button"
    },
    {
      "name": "::checkmark",
      "prose": "The ::checkmark pseudo-element represents an indicator of whether the item is checked, and is present on checkboxes, radios, and option elements.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-checkmark",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::checkmark"
    },
    {
      "name": "::slider-thumb",
      "prose": "The ::slider-thumb pseudo-element represents the portion that allows the user to adjust the progress of the control.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-slider-thumb",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::slider-thumb"
    },
    {
      "name": "::slider-track",
      "prose": "The ::slider-track pseudo-element represents the portion containing both the progressed and unprogressed portions of the control.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-slider-track",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::slider-track"
    },
    {
      "name": "::slider-fill",
      "prose": "The ::slider-fill pseudo-element represents the portion containing the progressed portion of the control. When the progress of control is indeterminate (like with <progress>), the user agent must give this portion an inline-size of zero.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-slider-fill",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::slider-fill"
    },
    {
      "name": "::placeholder",
      "prose": "The ::placeholder pseudo-element represents the portion of the input that contains the placeholder text.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-placeholder",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::placeholder"
    },
    {
      "name": "::field-text",
      "prose": "The ::field-text pseudo-element represents the portion of the input that contains the editable text.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-field-text",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::field-text"
    },
    {
      "name": "::clear-icon",
      "prose": "The ::clear-icon pseudo-element represents the portion of the input that allows the user to clear the input when clicked if provided by the user agent. With appearance: textfield, the user agent must not generate this part.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-clear-icon",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::clear-icon"
    },
    {
      "name": "::step-control",
      "prose": "The ::step-control pseudo-element represents the portion of a number input that contains the up and down buttons.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-step-control",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::step-control"
    },
    {
      "name": "::step-up",
      "prose": "The ::step-up pseudo-element represents the button that increments the value inside a number input when activated.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-step-up",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::step-up"
    },
    {
      "name": "::step-down",
      "prose": "The ::step-down pseudo-element represents the button that decrements the value inside a number input when activated.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-step-down",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::step-down"
    },
    {
      "name": "::field-component",
      "prose": "The ::field-component pseudo-element represents the portions of the control that contain the date/time component values.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-field-component",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::field-component"
    },
    {
      "name": "::field-separator",
      "prose": "The ::field-separator pseudo-element represents the portions of the control that separate the date/time component values if the user agent provides those portions.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-field-separator",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::field-separator"
    },
    {
      "name": "::color-swatch",
      "prose": "The ::color-swatch pseudo-element represents the portion of the control that displays the chosen color value.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-color-swatch",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": "::color-swatch"
    },
    {
      "name": ":low-value",
      "prose": "The :low-value pseudo-class matches on a meter element when its value is under the value specified by the low HTML attribute.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-low-value",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": ":low-value"
    },
    {
      "name": ":high-value",
      "prose": "The :high-value pseudo-class matches on a meter element when its value is over the value specified by the high HTML attribute.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-high-value",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": ":high-value"
    },
    {
      "name": ":optimal-value",
      "prose": "The :optimal-value pseudo-class matches on a meter element when its value is in the range determined by the optimum / low / high HTML attributes.",
      "href": "https://drafts.csswg.org/css-forms-1/#selectordef-optimal-value",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "value": ":optimal-value"
    },
    {
      "name": ":nth-of-page()",
      "value": ":nth-of-page(n)",
      "href": "https://drafts.csswg.org/css-gcpm-4/#selectordef-nth-of-page-n",
      "spec": {
        "shortname": "css-gcpm-4",
        "currentSpec": false
      }
    },
    {
      "name": ":first-of-page",
      "prose": "Same as :nth-of-page(n), but where n = 1 (it is the first matched element on the page).",
      "href": "https://drafts.csswg.org/css-gcpm-4/#selectordef-first-of-page",
      "spec": {
        "shortname": "css-gcpm-4",
        "currentSpec": false
      },
      "value": ":first-of-page"
    },
    {
      "name": ":last-of-page",
      "prose": "The element is the last matched element on the page.",
      "href": "https://drafts.csswg.org/css-gcpm-4/#selectordef-last-of-page",
      "spec": {
        "shortname": "css-gcpm-4",
        "currentSpec": false
      },
      "value": ":last-of-page"
    },
    {
      "name": ":start-of-page",
      "prose": "The element is the first matched element on the page, and neither it nor its ancestors have any previous siblings that appear on the page.",
      "href": "https://drafts.csswg.org/css-gcpm-4/#selectordef-start-of-page",
      "spec": {
        "shortname": "css-gcpm-4",
        "currentSpec": false
      },
      "value": ":start-of-page"
    },
    {
      "name": ":nth()",
      "href": "https://drafts.csswg.org/css-gcpm-3/#selectordef-nth",
      "value": ":nth( An+B [of <custom-ident>]? )",
      "spec": {
        "shortname": "css-gcpm",
        "currentSpec": true
      }
    },
    {
      "name": "::column",
      "prose": "The ::column pseudo-element represents the individual columns in a multi-column container. It only exists on multi-column containers.",
      "href": "https://drafts.csswg.org/css-multicol-2/#selectordef-column",
      "spec": {
        "shortname": "css-multicol",
        "currentSpec": true
      },
      "value": "::column"
    },
    {
      "name": "&",
      "prose": "When using a nested style rule, one must be able to refer to the elements matched by the parent rule; that is, after all, the entire point of nesting. To accomplish that, this specification defines a new selector, the nesting selector, written as & (U+0026 AMPERSAND).",
      "href": "https://drafts.csswg.org/css-nesting-1/#selectordef-",
      "spec": {
        "shortname": "css-nesting",
        "currentSpec": true
      },
      "value": "&"
    },
    {
      "name": "::scroll-marker-group",
      "prose": "The ::scroll-marker-group fully styleable pseudo-element is generated by a scroll container element having a computed scroll-marker-group property that is not none.",
      "href": "https://drafts.csswg.org/css-overflow-5/#selectordef-scroll-marker-group",
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      },
      "value": "::scroll-marker-group"
    },
    {
      "name": "::scroll-marker",
      "prose": "When the computed content value of a ::scroll-marker pseudo-element is not none and its nearest ancestor scroll container scroll container has a computed scroll-marker-group property that is not none, the pseudo-element generates a box attached as a child of the ::scroll-marker-group pseudo-element’s generated box on its nearest ancestor scroll container. These boxes are added in the tree order of their originating element.",
      "href": "https://drafts.csswg.org/css-overflow-5/#selectordef-scroll-marker",
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      },
      "value": "::scroll-marker"
    },
    {
      "name": ":target-current",
      "prose": "Exactly one scroll marker within each scroll marker group is determined to be active at a time. Such \"active\" scroll markers match the :target-current pseudo-class.",
      "href": "https://drafts.csswg.org/css-overflow-5/#selectordef-target-current",
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      },
      "value": ":target-current"
    },
    {
      "name": "::scroll-button()",
      "value": "::scroll-button( '*' | <scroll-button-direction> )",
      "href": "https://drafts.csswg.org/css-overflow-5/#selectordef-scroll-button---scroll-button-direction",
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      }
    },
    {
      "name": "::nth-fragment()",
      "prose": "The ::nth-fragment() pseudo-element is a pseudo-element that describes some of the fragment boxes generated by an element. The argument to the pseudo-element takes the same syntax as the argument to the :nth-child() pseudo-class defined in [SELECT], and has the same meaning except that the number is relative to fragment boxes generated by the element instead of siblings of the element.",
      "href": "https://drafts.csswg.org/css-overflow-5/#selectordef-nth-fragment",
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      }
    },
    {
      "name": "::backdrop",
      "prose": "Each element rendered in the top layer has a ::backdrop pseudo-element, for which it is the originating element.",
      "href": "https://drafts.csswg.org/css-position-4/#selectordef-backdrop",
      "spec": {
        "shortname": "css-position-4",
        "currentSpec": false
      },
      "value": "::backdrop"
    },
    {
      "name": "::first-line",
      "prose": "The ::first-line pseudo-element represents the contents of the first formatted line of its originating element.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-first-line",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::first-line"
    },
    {
      "name": "::first-letter",
      "prose": "The ::first-letter pseudo-element represents the first Letter, Number, or Symbol (Unicode category L*, N*, or S*) typographic character unit on the first formatted line of its originating element (the first letter) as well as its associated punctuation. Collectively, this text is the first-letter text. The ::first-letter pseudo-element can be used to create “initial caps” and “drop caps”, which are common typographic effects.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-first-letter",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::first-letter"
    },
    {
      "name": "::selection",
      "prose": "The ::selection pseudo-element represents the portion of a document that has been selected as the target or object of some possible future user-agent operation(s). It applies, for example, to selected text within an editable text field, which would be copied by a copy operation or replaced by a paste operation.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-selection",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::selection"
    },
    {
      "name": "::search-text",
      "prose": "The ::search-text pseudo-element represents text identified by the user agent’s find-in-page feature. Since not all UAs style matched text in ways expressible with the highlight pseudo-elements, this pseudo-element is optional to implement. The :current pseudo-class (but not ::current()) may be combined with ::search-text to represent the currently focused match instance. The :past and :future pseudo-classes are reserved for analogous use in the future. Any unsupported combination of these pseudo-classes with ::search-text must be treated as invalid.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-search-text",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::search-text"
    },
    {
      "name": "::target-text",
      "prose": "The ::target-text pseudo-element represents text directly targeted by the document URL’s fragment, if any.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-target-text",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::target-text"
    },
    {
      "name": "::spelling-error",
      "prose": "The ::spelling-error pseudo-element represents a portion of text that has been flagged by the user agent as misspelled.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-spelling-error",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::spelling-error"
    },
    {
      "name": "::grammar-error",
      "prose": "The ::grammar-error pseudo-element represents a portion of text that has been flagged by the user agent as grammatically incorrect.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-grammar-error",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::grammar-error"
    },
    {
      "name": "::highlight()",
      "value": "::highlight(<custom-ident>)",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-highlight-custom-ident",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      }
    },
    {
      "name": "::before",
      "prose": "Represents a styleable child pseudo-element immediately before the originating element’s actual content.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-before",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::before"
    },
    {
      "name": "::after",
      "prose": "Represents a styleable child pseudo-element immediately after the originating element’s actual content.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-after",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::after"
    },
    {
      "name": "::marker",
      "prose": "The ::marker pseudo-element represents the automatically generated marker box of a list item. (See [CSS-DISPLAY-3] and [CSS-LISTS-3].)",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-marker",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::marker"
    },
    {
      "name": "::details-content",
      "prose": "The ::details-content pseudo-element targets the additional information in a a details element that can be expanded or collapsed. It is an element-backed pseudo-element.",
      "href": "https://drafts.csswg.org/css-pseudo-4/#selectordef-details-content",
      "spec": {
        "shortname": "css-pseudo",
        "currentSpec": true
      },
      "value": "::details-content"
    },
    {
      "name": ":host",
      "prose": "The :host pseudo-class, when evaluated in the context of a shadow tree, matches the shadow tree’s shadow host. In any other context, it matches nothing.",
      "href": "https://drafts.csswg.org/css-scoping-1/#selectordef-host",
      "spec": {
        "shortname": "css-scoping",
        "currentSpec": true
      },
      "value": ":host"
    },
    {
      "name": ":host()",
      "prose": "The :host() function pseudo-class has the syntax:",
      "href": "https://drafts.csswg.org/css-scoping-1/#selectordef-host-function",
      "spec": {
        "shortname": "css-scoping",
        "currentSpec": true
      }
    },
    {
      "name": ":host-context()",
      "prose": "The :host-context() functional pseudo-class tests whether there is an ancestor, outside the shadow tree, which matches a particular selector. Its syntax is:",
      "href": "https://drafts.csswg.org/css-scoping-1/#selectordef-host-context",
      "spec": {
        "shortname": "css-scoping",
        "currentSpec": true
      }
    },
    {
      "name": "::slotted()",
      "prose": "The ::slotted() pseudo-element represents the elements assigned, after flattening, to a slot. This pseudo-element only exists on slots.",
      "href": "https://drafts.csswg.org/css-scoping-1/#selectordef-slotted",
      "spec": {
        "shortname": "css-scoping",
        "currentSpec": true
      }
    },
    {
      "name": ":has-slotted",
      "prose": "The :has-slotted pseudo-class matches slot elements which have a non-empty list of flattened slotted nodes.",
      "href": "https://drafts.csswg.org/css-scoping-1/#selectordef-has-slotted",
      "spec": {
        "shortname": "css-scoping",
        "currentSpec": true
      },
      "value": ":has-slotted"
    },
    {
      "name": ":snapped",
      "prose": "The :snapped pseudo-class matches any scroll snap targets, regardless of axis. The longform physical and logical pseudo-class selectors allow for more finite snapped children styling as they can target an individual axis.",
      "href": "https://drafts.csswg.org/css-scroll-snap-2/#selectordef-snapped",
      "spec": {
        "shortname": "css-scroll-snap-2",
        "currentSpec": false
      },
      "value": ":snapped"
    },
    {
      "name": ":snapped-x",
      "prose": "Matches the child snapped on the horizontal axis.",
      "href": "https://drafts.csswg.org/css-scroll-snap-2/#selectordef-snapped-x",
      "spec": {
        "shortname": "css-scroll-snap-2",
        "currentSpec": false
      },
      "value": ":snapped-x"
    },
    {
      "name": ":snapped-y",
      "prose": "Matches the child snapped on the vertical axis.",
      "href": "https://drafts.csswg.org/css-scroll-snap-2/#selectordef-snapped-y",
      "spec": {
        "shortname": "css-scroll-snap-2",
        "currentSpec": false
      },
      "value": ":snapped-y"
    },
    {
      "name": ":snapped-inline",
      "prose": "Matches the child snapped on the inline axis.",
      "href": "https://drafts.csswg.org/css-scroll-snap-2/#selectordef-snapped-inline",
      "spec": {
        "shortname": "css-scroll-snap-2",
        "currentSpec": false
      },
      "value": ":snapped-inline"
    },
    {
      "name": ":snapped-block",
      "prose": "Matches the child snapped on the block axis.",
      "href": "https://drafts.csswg.org/css-scroll-snap-2/#selectordef-snapped-block",
      "spec": {
        "shortname": "css-scroll-snap-2",
        "currentSpec": false
      },
      "value": ":snapped-block"
    },
    {
      "name": "::part()",
      "prose": "The ::part() pseudo-element allows you to select elements that have been exposed via a part attribute. The syntax is:",
      "href": "https://drafts.csswg.org/css-shadow-parts-1/#selectordef-part",
      "value": "::part( <ident>+ )",
      "spec": {
        "shortname": "css-shadow-parts",
        "currentSpec": true
      }
    },
    {
      "name": ":active-view-transition",
      "prose": "The :active-view-transition pseudo-class applies to the root element of the document, if it has an active view transition.",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#active-view-transition-pseudo",
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      },
      "value": ":active-view-transition"
    },
    {
      "name": ":active-view-transition-type()",
      "prose": "The :active-view-transition-type() pseudo-class applies to the root element of the document, if it has a matching active view transition. It has the following syntax definition:",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#active-view-transition-type-pseudo",
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "::view-transition",
      "prose": "The ::view-transition pseudo-element is a tree-abiding pseudo-element that is also a pseudo-element root. Its originating element is the document’s document element, and its containing block is the snapshot containing block.",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#selectordef-view-transition",
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      },
      "value": "::view-transition"
    },
    {
      "name": "::view-transition-group()",
      "prose": "The ::view-transition-group() pseudo-element is a named view transition pseudo-element that represents a matching named view transition capture. A ::view-transition-group() pseudo-element is generated for each view transition name as a child of the ::view-transition pseudo-element, and contains a corresponding ::view-transition-image-pair().",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#selectordef-view-transition-group",
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "::view-transition-image-pair()",
      "prose": "The ::view-transition-image-pair() pseudo-element is a named view transition pseudo-element that represents a pair of corresponding old/new view transition captures. This pseudo-element is a child of the corresponding ::view-transition-group() pseudo-element and contains a corresponding ::view-transition-old() pseudo-element and/or a corresponding ::view-transition-new() pseudo-element (in that order).",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#selectordef-view-transition-image-pair",
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "::view-transition-old()",
      "prose": "The ::view-transition-old() pseudo-element is an empty named view transition pseudo-element that represents a visual snapshot of the “old” state as a replaced element; it is omitted if there’s no “old” state to represent. Each ::view-transition-old() pseudo-element is a child of the corresponding ::view-transition-image-pair() pseudo-element.",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#selectordef-view-transition-old",
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "::view-transition-new()",
      "prose": "The ::view-transition-new() pseudo-element (like the analogous ::view-transition-old() pseudo-element) is an empty named view transition pseudo-element that represents a visual snapshot of the “new” state as a replaced element; it is omitted if there’s no “new” state to represent. Each ::view-transition-new() pseudo-element is a child of the corresponding ::view-transition-image-pair() pseudo-element.",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#selectordef-view-transition-new",
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      }
    },
    {
      "name": ":lang",
      "href": "https://drafts.csswg.org/css2/#selectordef-lang",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":lang"
    },
    {
      "name": ":first-line",
      "href": "https://drafts.csswg.org/css2/#selectordef-first-line",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":first-line"
    },
    {
      "name": ":first-letter",
      "href": "https://drafts.csswg.org/css2/#selectordef-first-letter",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":first-letter"
    },
    {
      "name": ":before",
      "href": "https://drafts.csswg.org/css2/#selectordef-before",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":before"
    },
    {
      "name": ":after",
      "href": "https://drafts.csswg.org/css2/#selectordef-after",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":after"
    },
    {
      "name": ":left",
      "prose": "All pages are automatically classified by user agents into either the :left or :right pseudo-class. Whether the first page of a document is :left or :right depends on the major writing direction of the root element. For example, the first page of a document with a left-to-right major writing direction would be a :right page, and the first page of a document with a right-to-left major writing direction would be a :left page. To explicitly force a document to begin printing on a left or right page, authors can insert a page break before the first generated box.",
      "href": "https://drafts.csswg.org/css2/#selectordef-left",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":left"
    },
    {
      "name": ":right",
      "prose": "All pages are automatically classified by user agents into either the :left or :right pseudo-class. Whether the first page of a document is :left or :right depends on the major writing direction of the root element. For example, the first page of a document with a left-to-right major writing direction would be a :right page, and the first page of a document with a right-to-left major writing direction would be a :left page. To explicitly force a document to begin printing on a left or right page, authors can insert a page break before the first generated box.",
      "href": "https://drafts.csswg.org/css2/#selectordef-right",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":right"
    },
    {
      "name": ":first",
      "prose": "Authors may also specify style for the first page of a document with the :first pseudo-class:",
      "href": "https://drafts.csswg.org/css2/#selectordef-first",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "value": ":first"
    },
    {
      "name": ":local-link",
      "prose": "The :local-link pseudo-class allows authors to style hyperlinks based on the users current location within a site. It represents an element that is the source anchor of a hyperlink whose target’s absolute URL matches the element’s own document URL. If the hyperlink’s target includes a fragment URL, then the fragment URL of the current URL must also match; if it does not, then the fragment URL portion of the current URL is not taken into account in the comparison.",
      "href": "https://drafts.csswg.org/selectors-4/#local-link-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":local-link"
    },
    {
      "name": ":state()",
      "value": ":state( <ident> )",
      "href": "https://drafts.csswg.org/selectors-5/#state-pseudo",
      "spec": {
        "shortname": "selectors-5",
        "currentSpec": false
      }
    },
    {
      "name": ":is()",
      "prose": "The matches-any pseudo-class, :is(), is a functional pseudo-class taking a <forgiving-selector-list> as its sole argument.",
      "href": "https://drafts.csswg.org/selectors-4/#matches-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":matches()",
      "prose": "As previous drafts of this specification used the name :matches() for this pseudo-class, UAs may additionally implement this obsolete name as a legacy selector alias for :is() if needed for backwards-compatibility.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-matches",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":not()",
      "prose": "The negation pseudo-class, :not(), is a functional pseudo-class taking a <complex-real-selector-list> as an argument. It represents an element that is not represented by its argument.",
      "href": "https://drafts.csswg.org/selectors-4/#negation-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":where()",
      "prose": "The Specificity-adjustment pseudo-class, :where(), is a functional pseudo-class with the same syntax and functionality as :is(). Unlike :is(), neither the :where() pseudo-class, nor any of its arguments, contribute to the specificity of the selector—​its specificity is always zero.",
      "href": "https://drafts.csswg.org/selectors-4/#where-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":has()",
      "prose": "The relational pseudo-class, :has(), is a functional pseudo-class taking a <relative-selector-list> as an argument. It represents an element if any of the relative selectors would match at least one element when anchored against this element.",
      "href": "https://drafts.csswg.org/selectors-4/#has-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":defined",
      "prose": "In some host languages, elements can have a distinction between being “defined”/“constructed” or not. The :defined pseudo-class matches elements that are fully defined, as dictated by the host language.",
      "href": "https://drafts.csswg.org/selectors-4/#defined-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":defined"
    },
    {
      "name": ":dir()",
      "prose": "The :dir() pseudo-class allows the author to write selectors that represent an element based on its directionality as determined by the document language. For example, [HTML5] defines how to determine the directionality of an element, based on a combination of the dir attribute, the surrounding text, and other factors. As another example, the its:dir and dirRule element of the Internationalization Tag Set [ITS20] are able to define the directionality of an element in [XML10].",
      "href": "https://drafts.csswg.org/selectors-4/#dir-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":lang()",
      "prose": "If the document language specifies how the (human) content language of an element is determined, it is possible to write selectors that represent an element based on its content language. The :lang() pseudo-class, which accepts a comma-separated list of one or more language ranges, represents an element whose content language is one of the languages listed in its argument. Each language range in :lang() must be a valid CSS <ident> or <string>. (Thus language ranges containing asterisks, for example, must be either correctly escaped or quoted as strings, e.g. :lang(\\*-Latn) or :lang(\"*-Latn\").)",
      "href": "https://drafts.csswg.org/selectors-4/#lang-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":any-link",
      "prose": "The :any-link pseudo-class represents an element that acts as the source anchor of a hyperlink. For example, in [HTML5], any a or area elements with an href attribute are hyperlinks, and thus match :any-link. It matches an element if the element would match either :link or :visited, and is equivalent to :is(:link, :visited).",
      "href": "https://drafts.csswg.org/selectors-4/#any-link-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":any-link"
    },
    {
      "name": ":link",
      "prose": "User agents commonly display unvisited hyperlinks differently from previously visited ones. Selectors provides the pseudo-classes :link and :visited to distinguish them:",
      "href": "https://drafts.csswg.org/selectors-4/#link-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":link"
    },
    {
      "name": ":visited",
      "prose": "User agents commonly display unvisited hyperlinks differently from previously visited ones. Selectors provides the pseudo-classes :link and :visited to distinguish them:",
      "href": "https://drafts.csswg.org/selectors-4/#visited-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":visited"
    },
    {
      "name": ":target",
      "prose": "The :target pseudo-class matches the document’s target elements. If the document’s URL has no fragment identifier, then the document has no target elements.",
      "href": "https://drafts.csswg.org/selectors-4/#target-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":target"
    },
    {
      "name": ":target-within",
      "prose": "The :target-within pseudo-class applies to any element to which the :target pseudo-class applies as well as to any element whose descendant in the flat tree (including non-element nodes, such as text nodes) matches the conditions for matching :target.",
      "href": "https://drafts.csswg.org/selectors-4/#target-within-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":target-within"
    },
    {
      "name": ":scope",
      "prose": "In some contexts, selectors are matched with respect to one or more scoping roots, such as when calling the querySelector() method in [DOM]. The :scope pseudo-class represents this scoping root, and may be either a true element or a virtual one (such as a DocumentFragment).",
      "href": "https://drafts.csswg.org/selectors-4/#scope-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":scope"
    },
    {
      "name": ":hover",
      "prose": "The :hover pseudo-class applies while the user designates an element (or pseudo-element) with a pointing device, but does not necessarily activate it. For example, a visual user agent could apply this pseudo-class when the cursor (mouse pointer) hovers over a box generated by the element. Interactive user agents that cannot detect hovering due to hardware limitations (e.g., a pen device that does not detect hovering) are still conforming; the selector will simply never match in such a UA.",
      "href": "https://drafts.csswg.org/selectors-4/#hover-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":hover"
    },
    {
      "name": ":active",
      "prose": "The :active pseudo-class applies while an element is being “activated” by the user, as defined by the host language; for example, while a hyperlink is being triggered.",
      "href": "https://drafts.csswg.org/selectors-4/#active-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":active"
    },
    {
      "name": ":focus",
      "prose": "The :focus pseudo-class applies while an element (or pseudo-element) has the focus (accepts keyboard or other forms of input).",
      "href": "https://drafts.csswg.org/selectors-4/#focus-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":focus"
    },
    {
      "name": ":focus-visible",
      "prose": "While the :focus pseudo-class always matches the currently-focused element, UAs only sometimes visibly indicate focus (such as by drawing a “focus ring”), instead using a variety of heuristics to visibly indicate the focus only when it would be most helpful to the user. The :focus-visible pseudo-class matches a focused element (or pseudo-element) in these situations only, allowing authors to change the appearance of the focus indicator without changing when a focus indicator appears.",
      "href": "https://drafts.csswg.org/selectors-4/#focus-visible-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":focus-visible"
    },
    {
      "name": ":focus-within",
      "prose": "The :focus-within pseudo-class applies to any element (or pseudo-element) for which the :focus pseudo-class applies, as well as to an element (or pseudo-element) whose descendant in the flat tree (including non-element nodes, such as text nodes) matches the conditions for matching :focus.",
      "href": "https://drafts.csswg.org/selectors-4/#focus-within-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":focus-within"
    },
    {
      "name": ":current",
      "prose": "The :current pseudo-class represents the element, or an ancestor of the element, that is currently being displayed.",
      "href": "https://drafts.csswg.org/selectors-4/#current-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":current"
    },
    {
      "name": ":current()",
      "prose": "Its alternate form :current() takes a list of compound selectors as its argument: it represents the :current element that matches the argument or, if that does not match, the innermost ancestor of the :current element that does. (If neither the :current element nor its ancestors match the argument, then the selector does not represent anything.)",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-current",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":past",
      "prose": "The :past pseudo-class represents any element that is defined to occur entirely prior to a :current element. For example, the WebVTT spec defines the :past pseudo-class relative to the current playback position of a media element. If a time-based order of elements is not defined by the document language, then this represents any element that is a (possibly indirect) previous sibling of a :current element.",
      "href": "https://drafts.csswg.org/selectors-4/#past-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":past"
    },
    {
      "name": ":future",
      "prose": "The :future pseudo-class represents any element that is defined to occur entirely after a :current element. For example, the WebVTT spec defines the :future pseudo-class relative to the current playback position of a media element. If a time-based order of elements is not defined by the document language, then this represents any element that is a (possibly indirect) next sibling of a :current element.",
      "href": "https://drafts.csswg.org/selectors-4/#future-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":future"
    },
    {
      "name": ":playing",
      "prose": "The :playing pseudo-class represents an element that is capable of being “played” or “paused”, when that element is “playing”. (This includes both when the element is explicitly playing, and when it’s temporarily stopped for some reason not connected to user intent, but will automatically resume when that reason is resolved, such as a “buffering” or “stalled” state.)",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-playing",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":playing"
    },
    {
      "name": ":paused",
      "prose": "The :paused pseudo-class represents an element that is capable of being “played” or “paused”, when that element is “paused” (i.e. not ”playing”). (This includes both an explicit “paused” state, and other non-playing states like “loaded, hasn’t been activated yet”, etc.)",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-paused",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":paused"
    },
    {
      "name": ":seeking",
      "prose": "The :seeking pseudo-class represents an element that is capable of ”seeking” when that element is ”seeking”. (For the audio and video elements of HTML, see HTML § 4.8.11.9 Seeking.)",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-seeking",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":seeking"
    },
    {
      "name": ":buffering",
      "prose": "The :buffering pseudo-class represents an element that is capable of being “played” or “paused”, when that element cannot continue playing because it is actively attempting to obtain media data but has not yet obtained enough data to resume playback. (Note that the element is still considered to be “playing” when it is “buffering”. Whenever :buffering matches an element, :playing also matches the element.)",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-buffering",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":buffering"
    },
    {
      "name": ":stalled",
      "prose": "The :stalled pseudo-class represents an element when that element cannot continue playing because it is actively attempting to obtain media data but it has failed to receive any data for some amount of time. For the audio and video elements of HTML, this amount of time is the media element stall timeout. [HTML] (Note that, like with the :buffering pseudo-class, the element is still considered to be “playing” when it is “stalled”. Whenever :stalled matches an element, :playing also matches the element.)",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-stalled",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":stalled"
    },
    {
      "name": ":muted",
      "prose": "The :muted pseudo-class represents an element that is capable of making sound, but is currently “muted“ (forced silent). (For the audio and video elements of HTML, see muted. [HTML])",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-muted",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":muted"
    },
    {
      "name": ":volume-locked",
      "prose": "The :volume-locked pseudo-class represents an element that is capable of making sound, and currently has its volume \"locked\" by the UA or the user, so the page author cannot change it. (For the audio and video elements of HTML, see the algorithm for setting the element’s effective media volume. [HTML])",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-volume-locked",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":volume-locked"
    },
    {
      "name": ":open",
      "prose": "The :open pseudo-class represents an element that has both “open” and “closed” states, and which is currently in the “open” state.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-open",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":open"
    },
    {
      "name": ":popover-open",
      "prose": "The :popover-open pseudo-class represents an element that has both “popover-showing” and “popover-hidden” states and which is currently in the “popover-showing” state.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-popover-open",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":popover-open"
    },
    {
      "name": ":modal",
      "prose": "The :modal pseudo-class represents an element which is in a state that excludes all interaction with elements outside it until it has been dismissed. Multiple elements can be :modal simultaneously, with only one of them active (able to receive input).",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-modal",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":modal"
    },
    {
      "name": ":fullscreen",
      "prose": "The :fullscreen pseudo-class represents an element which is displayed in a mode that takes up most (usually all) of the screen, such as that defined by the Fullscreen API. [FULLSCREEN]",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-fullscreen",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":fullscreen"
    },
    {
      "name": ":picture-in-picture",
      "prose": "The :picture-in-picture pseudo-class represents an element which is displayed in a mode that takes up most (usually all) of the viewport, and whose viewport is confined to part of the screen while being displayed over other content, for example when using the Picture-in-Picture API. [picture-in-picture]",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-picture-in-picture",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":picture-in-picture"
    },
    {
      "name": ":enabled",
      "prose": "The :enabled pseudo-class represents user interface elements that are in an enabled state; such elements must have a corresponding disabled state.",
      "href": "https://drafts.csswg.org/selectors-4/#enabled-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":enabled"
    },
    {
      "name": ":disabled",
      "prose": "Conversely, the :disabled pseudo-class represents user interface elements that are in a disabled state; such elements must have a corresponding enabled state.",
      "href": "https://drafts.csswg.org/selectors-4/#disabled-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":disabled"
    },
    {
      "name": ":read-write",
      "prose": "An element matches :read-write if it is user-alterable, as defined by the document language. Otherwise, it is :read-only.",
      "href": "https://drafts.csswg.org/selectors-4/#read-write-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":read-write"
    },
    {
      "name": ":read-only",
      "prose": "An element matches :read-write if it is user-alterable, as defined by the document language. Otherwise, it is :read-only.",
      "href": "https://drafts.csswg.org/selectors-4/#read-only-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":read-only"
    },
    {
      "name": ":placeholder-shown",
      "prose": "Input elements can sometimes show placeholder text as a hint to the user on what to type in. See, for example, the placeholder attribute in [HTML5]. The :placeholder-shown pseudo-class matches an input element that is showing such placeholder text, whether that text is given by an attribute or a real element, or is otherwise implied by the UA.",
      "href": "https://drafts.csswg.org/selectors-4/#placeholder-shown-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":placeholder-shown"
    },
    {
      "name": ":autofill",
      "prose": "The :autofill pseudo-class represents input elements that have been automatically filled by the user agent, and have not been subsequently altered by the user.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-autofill",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":autofill"
    },
    {
      "name": ":default",
      "prose": "The :default pseudo-class applies to the one or more UI elements that are the default among a set of similar elements. Typically applies to context menu items, buttons and select lists/menus.",
      "href": "https://drafts.csswg.org/selectors-4/#default-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":default"
    },
    {
      "name": ":checked",
      "prose": "Radio and checkbox elements can be toggled by the user. Some menu items are “checked” when the user selects them. When such elements are toggled “on” the :checked pseudo-class applies. For example, [HTML5] defines that checked checkboxes, radio buttons, and selected <option> elements match :checked.",
      "href": "https://drafts.csswg.org/selectors-4/#checked-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":checked"
    },
    {
      "name": ":indeterminate",
      "prose": "The :indeterminate pseudo-class applies to UI elements whose value is in an indeterminate state. For example, radio and checkbox elements can be toggled between checked and unchecked states, but are sometimes in an indeterminate state, neither checked nor unchecked. Similarly a progress meter can be in an indeterminate state when the percent completion is unknown. For example, [HTML5] defines how checkboxes can be made to match :indeterminate.",
      "href": "https://drafts.csswg.org/selectors-4/#indeterminate-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":indeterminate"
    },
    {
      "name": ":blank",
      "prose": "The :blank pseudo-class applies to user-input elements whose input value is empty (consists of the empty string or otherwise null input).",
      "href": "https://drafts.csswg.org/selectors-4/#blank-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":blank"
    },
    {
      "name": ":valid",
      "prose": "An element is :valid or :invalid when its contents or value is, respectively, valid or invalid with respect to data validity semantics defined by the document language (e.g. [XFORMS11] or [HTML5]). An element which lacks data validity semantics is neither :valid nor :invalid.",
      "href": "https://drafts.csswg.org/selectors-4/#valid-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":valid"
    },
    {
      "name": ":invalid",
      "prose": "An element is :valid or :invalid when its contents or value is, respectively, valid or invalid with respect to data validity semantics defined by the document language (e.g. [XFORMS11] or [HTML5]). An element which lacks data validity semantics is neither :valid nor :invalid.",
      "href": "https://drafts.csswg.org/selectors-4/#invalid-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":invalid"
    },
    {
      "name": ":in-range",
      "prose": "The :in-range and :out-of-range pseudo-classes apply only to elements that have range limitations. An element is :in-range or :out-of-range when the value that the element is bound to is in range or out of range with respect to its range limits as defined by the document language. An element that lacks data range limits or is not a form control is neither :in-range nor :out-of-range. E.g. a slider element with a value of 11 presented as a slider control that only represents the values from 1-10 is :out-of-range. Another example is a menu element with a value of \"E\" that happens to be presented in a popup menu that only has choices \"A\", \"B\" and \"C\".",
      "href": "https://drafts.csswg.org/selectors-4/#in-range-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":in-range"
    },
    {
      "name": ":out-of-range",
      "prose": "The :in-range and :out-of-range pseudo-classes apply only to elements that have range limitations. An element is :in-range or :out-of-range when the value that the element is bound to is in range or out of range with respect to its range limits as defined by the document language. An element that lacks data range limits or is not a form control is neither :in-range nor :out-of-range. E.g. a slider element with a value of 11 presented as a slider control that only represents the values from 1-10 is :out-of-range. Another example is a menu element with a value of \"E\" that happens to be presented in a popup menu that only has choices \"A\", \"B\" and \"C\".",
      "href": "https://drafts.csswg.org/selectors-4/#out-of-range-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":out-of-range"
    },
    {
      "name": ":required",
      "prose": "A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to can be validly submitted. Elements that are not form elements are neither required nor optional.",
      "href": "https://drafts.csswg.org/selectors-4/#required-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":required"
    },
    {
      "name": ":optional",
      "prose": "A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to can be validly submitted. Elements that are not form elements are neither required nor optional.",
      "href": "https://drafts.csswg.org/selectors-4/#optional-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":optional"
    },
    {
      "name": ":user-invalid",
      "prose": "The :user-invalid and the :user-valid pseudo-classes represent an element with incorrect or correct input, respectively, but only after the user has significantly interacted with it. Their purpose is to help the user identify mistakes in their input.",
      "href": "https://drafts.csswg.org/selectors-4/#user-invalid-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":user-invalid"
    },
    {
      "name": ":user-valid",
      "prose": "The :user-invalid and the :user-valid pseudo-classes represent an element with incorrect or correct input, respectively, but only after the user has significantly interacted with it. Their purpose is to help the user identify mistakes in their input.",
      "href": "https://drafts.csswg.org/selectors-4/#user-valid-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":user-valid"
    },
    {
      "name": ":root",
      "prose": "The :root pseudo-class represents an element that is the root of the document.",
      "href": "https://drafts.csswg.org/selectors-4/#root-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":root"
    },
    {
      "name": ":empty",
      "prose": "The :empty pseudo-class represents an element that has no children except, optionally, document white space characters. In terms of the document tree, only element nodes and content nodes (such as [DOM] text nodes, and entity references) whose data has a non-zero length must be considered as affecting emptiness; comments, processing instructions, and other nodes must not affect whether an element is considered empty or not.",
      "href": "https://drafts.csswg.org/selectors-4/#empty-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":empty"
    },
    {
      "name": ":nth-child()",
      "value": ":nth-child(An+B [of S]? )",
      "href": "https://drafts.csswg.org/selectors-4/#nth-child-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":nth-last-child()",
      "value": ":nth-last-child(An+B [of S]? )",
      "href": "https://drafts.csswg.org/selectors-4/#nth-last-child-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":first-child",
      "prose": "The :first-child pseudo-class represents an element that if first among its inclusive siblings. Same as :nth-child(1).",
      "href": "https://drafts.csswg.org/selectors-4/#first-child-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":first-child"
    },
    {
      "name": ":last-child",
      "prose": "The :last-child pseudo-class represents an element that is last among its inclusive siblings. Same as :nth-last-child(1).",
      "href": "https://drafts.csswg.org/selectors-4/#last-child-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":last-child"
    },
    {
      "name": ":only-child",
      "prose": "The :only-child pseudo-class represents an element that has no siblings. Same as :first-child:last-child or :nth-child(1):nth-last-child(1), but with a lower specificity.",
      "href": "https://drafts.csswg.org/selectors-4/#only-child-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":only-child"
    },
    {
      "name": ":nth-of-type()",
      "value": ":nth-of-type(An+B)",
      "href": "https://drafts.csswg.org/selectors-4/#nth-of-type-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":nth-last-of-type()",
      "value": ":nth-last-of-type(An+B)",
      "href": "https://drafts.csswg.org/selectors-4/#nth-last-of-type-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":first-of-type",
      "prose": "The :first-of-type pseudo-class represents the same element as :nth-of-type(1).",
      "href": "https://drafts.csswg.org/selectors-4/#first-of-type-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":first-of-type"
    },
    {
      "name": ":last-of-type",
      "prose": "The :last-of-type pseudo-class represents the same element as :nth-last-of-type(1).",
      "href": "https://drafts.csswg.org/selectors-4/#last-of-type-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":last-of-type"
    },
    {
      "name": ":only-of-type",
      "prose": "The :only-of-type pseudo-class represents the same element as :first-of-type:last-of-type.",
      "href": "https://drafts.csswg.org/selectors-4/#only-of-type-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ":only-of-type"
    },
    {
      "name": ">",
      "prose": "A child combinator describes a childhood relationship between two elements. A child combinator is made of the \"greater-than sign\" (U+003E, >) code point and separates two compound selectors.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-child",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": ">"
    },
    {
      "name": "+",
      "prose": "The next-sibling combinator is made of the “plus sign” (U+002B, +) code point that separates two compound selectors. The elements represented by the two compound selectors share the same parent in the document tree and the element represented by the first compound selector immediately precedes the element represented by the second one. Non-element nodes (e.g. text between elements) are ignored when considering the adjacency of elements.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-adjacent",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": "+"
    },
    {
      "name": "~",
      "prose": "The subsequent-sibling combinator is made of the \"tilde\" (U+007E, ~) code point that separates two compound selectors. The elements represented by the two compound selectors share the same parent in the document tree and the element represented by the first compound selector precedes (not necessarily immediately) the element represented by the second one.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-sibling",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": "~"
    },
    {
      "name": "||",
      "prose": "The column combinator, which consists of two pipes (||) represents the relationship of a column element to a cell element belonging to the column it represents. Column membership is determined based on the semantics of the document language only: whether and how the elements are presented is not considered. If a cell element belongs to more than one column, it is represented by a selector indicating membership in any of those columns.",
      "href": "https://drafts.csswg.org/selectors-4/#selectordef-column",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "value": "||"
    },
    {
      "name": ":nth-col()",
      "value": ":nth-col(An+B)",
      "href": "https://drafts.csswg.org/selectors-4/#nth-col-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": ":nth-last-col()",
      "value": ":nth-last-col(An+B)",
      "href": "https://drafts.csswg.org/selectors-4/#nth-last-col-pseudo",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "::cue",
      "prose": "The ::cue pseudo-element (with no argument) matches any list of WebVTT Node Objects constructed for the matched element, with the exception that the properties corresponding to the background shorthand must be applied to the WebVTT cue background box rather than the list of WebVTT Node Objects.",
      "href": "https://w3c.github.io/webvtt/#selectordef-cue",
      "spec": {
        "shortname": "webvtt",
        "currentSpec": true
      },
      "value": "::cue"
    },
    {
      "name": "::cue()",
      "value": "::cue(selector)",
      "href": "https://w3c.github.io/webvtt/#selectordef-cue-selector",
      "spec": {
        "shortname": "webvtt",
        "currentSpec": true
      }
    },
    {
      "name": "::cue-region",
      "prose": "The ::cue-region pseudo-element (with no argument) matches any list of WebVTT region objects constructed for the matched element.",
      "href": "https://w3c.github.io/webvtt/#selectordef-cue-region",
      "spec": {
        "shortname": "webvtt",
        "currentSpec": true
      },
      "value": "::cue-region"
    },
    {
      "name": "::cue-region()",
      "value": "::cue-region(selector)",
      "href": "https://w3c.github.io/webvtt/#selectordef-cue-region-selector",
      "spec": {
        "shortname": "webvtt",
        "currentSpec": true
      }
    },
    {
      "name": ":xr-overlay",
      "prose": "The :xr-overlay pseudo-class MUST match the overlay element for the duration of an immersive session using a DOM Overlay.",
      "href": "https://immersive-web.github.io/dom-overlays/#selectordef-xr-overlay",
      "spec": {
        "shortname": "webxr-dom-overlays",
        "currentSpec": true
      },
      "value": ":xr-overlay"
    }
  ],
  "syntaxes": [
    {
      "name": "anchor()",
      "prose": "An absolutely positioned box can use the anchor() function as a value in its inset properties to refer to the position of one or more anchor boxes. The anchor() function resolves to a <length>. It is only allowed in the inset properties (and is otherwise invalid).",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#funcdef-anchor",
      "type": "function",
      "value": "anchor( <anchor-name>? && <anchor-side>, <length-percentage>? )",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "anchor-size()",
      "prose": "An absolutely positioned box can use the anchor-size() function in its sizing properties to refer to the size of one or more anchor boxes. The anchor-size() function resolves to a <length>. It is only allowed in the accepted @position-try properties (and is otherwise invalid).",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#funcdef-anchor-size",
      "type": "function",
      "value": "anchor-size( [ <anchor-name> || <anchor-size> ]? , <length-percentage>? )",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "superellipse()",
      "value": "superellipse( <number> | infinity | -infinity )",
      "href": "https://drafts.csswg.org/css-borders-4/#funcdef-superellipse",
      "type": "function",
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "color-mix()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-color-mix",
      "type": "function",
      "value": "color-mix( <color-interpolation-method> , [ <color> && <percentage [0,100]>? ]#{2})",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "hwb()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-hwb",
      "type": "function",
      "value": "hwb( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "lab()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-lab",
      "type": "function",
      "value": "lab( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "oklab()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-oklab",
      "type": "function",
      "value": "oklab( [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "lch()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-lch",
      "type": "function",
      "value": "lch( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "oklch()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-oklch",
      "type": "function",
      "value": "oklch( [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "color()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-color",
      "type": "function",
      "value": "color( [from <color>]? <colorspace-params> [ / [ <alpha-value> | none ] ]? )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "device-cmyk()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-device-cmyk",
      "type": "function",
      "value": "<legacy-device-cmyk-syntax> | <modern-device-cmyk-syntax>",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "light-dark()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-light-dark",
      "type": "function",
      "value": "light-dark( <color>, <color> )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "contrast-color()",
      "href": "https://drafts.csswg.org/css-color-5/#funcdef-contrast-color",
      "type": "function",
      "value": "contrast-color( <color> )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "color-layers()",
      "prose": "The color-layers() functional notation takes an optional <blend-mode> followed by a list of two or more <color> layers.",
      "href": "https://drafts.csswg.org/css-color-6/#funcdef-color-layers",
      "type": "function",
      "value": "color-layers([ <blend-mode>, ]? <color># )",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "contrast-color()",
      "name": "wcag2()",
      "prose": "The wcag2 keyword and wcag2() functional notations indicate use of the [WCAG21] luminance contrast algorithm. Their syntax is:",
      "href": "https://drafts.csswg.org/css-color-6/#funcdef-contrast-color-wcag2",
      "type": "function",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "dynamic-range-limit-mix()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-dynamic-range-limit-mix",
      "type": "function",
      "value": "dynamic-range-limit-mix( [ <'dynamic-range-limit'> && <percentage [0,100]> ]#{2,} )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "ictcp()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-ictcp",
      "type": "function",
      "value": "ictcp([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "jzazbz()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-jzazbz",
      "type": "function",
      "value": "jzazbz([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "jzczhz()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-jzczhz",
      "type": "function",
      "value": "jzczhz([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<hue> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "hdr-color()",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#funcdef-hdr-color",
      "type": "function",
      "value": "color-hdr([ <color> && <number [0,∞]>? ]#{2})",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "rgb()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-rgb",
      "type": "function",
      "value": "[ <legacy-rgb-syntax> | <modern-rgb-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "rgba()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-rgba",
      "type": "function",
      "value": "[ <legacy-rgba-syntax> | <modern-rgba-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "hsl()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-hsl",
      "type": "function",
      "value": "[ <legacy-hsl-syntax> | <modern-hsl-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "hsla()",
      "href": "https://drafts.csswg.org/css-color-4/#funcdef-hsla",
      "type": "function",
      "value": "[ <legacy-hsla-syntax> | <modern-hsla-syntax> ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "media()",
      "href": "https://drafts.csswg.org/css-conditional-5/#funcdef-media",
      "type": "function",
      "value": "media( [ <mf-plain> | <mf-boolean> | <mf-range> ] )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "supports()",
      "href": "https://drafts.csswg.org/css-conditional-5/#funcdef-supports",
      "type": "function",
      "value": "supports( <declaration> )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "leader()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-leader",
      "type": "function",
      "value": "leader( <leader-type> )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "target-counter()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-target-counter",
      "type": "function",
      "value": "target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "target-counters()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-target-counters",
      "type": "function",
      "value": "target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "target-text()",
      "href": "https://drafts.csswg.org/css-content-3/#target-text-function",
      "type": "function",
      "value": "target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "string()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-string",
      "type": "function",
      "value": "string( <custom-ident> , [ first | start | last | first-except ]? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "content()",
      "href": "https://drafts.csswg.org/css-content-3/#funcdef-content",
      "type": "function",
      "value": "content( [ text | before | after | first-letter | marker ]? )",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "symbols()",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#funcdef-symbols",
      "type": "function",
      "value": "symbols( <symbols-type>? [ <string> | <image> ]+ )",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "linear()",
      "href": "https://drafts.csswg.org/css-easing-2/#funcdef-linear",
      "type": "function",
      "value": "linear( [ <number> && <percentage>{0,2} ]# )",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "cubic-bezier()",
      "href": "https://drafts.csswg.org/css-easing-2/#funcdef-cubic-bezier",
      "type": "function",
      "value": "cubic-bezier( [ <number [0,1]>, <number> ]#{2} )",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "steps()",
      "href": "https://drafts.csswg.org/css-easing-2/#funcdef-steps",
      "type": "function",
      "value": "steps( <integer>, <step-position>?)",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "env()",
      "href": "https://drafts.csswg.org/css-env-1/#funcdef-env",
      "type": "function",
      "value": "env( <custom-ident> <integer [0,∞]>*, <declaration-value>? )",
      "spec": {
        "shortname": "css-env",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "palette-mix()",
      "prose": "With the palette-mix() function defined as follows:",
      "href": "https://drafts.csswg.org/css-fonts-4/#funcdef-palette-mix",
      "type": "function",
      "value": "palette-mix(<color-interpolation-method> , [ [normal | light | dark | <palette-identifier> | <palette-mix()> ] && <percentage [0,100]>? ]#{2})",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "control-value()",
      "prose": "The control-value() function computes to the current value of the form control it is on. If it is used on an element that is not a form control, it returns an empty string.",
      "href": "https://drafts.csswg.org/css-forms-1/#funcdef-control-value",
      "type": "function",
      "value": "control-value( <type>? )",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<repeat-line-color>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat-line-color>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<repeat-line-style>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat-line-style>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<repeat-line-width>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat-line-width>",
      "name": "repeat()",
      "prose": "Such a list may contain repeat() notations. Similar to CSS Grid Layout 1 § 7.2.3 Repeating Rows and Columns: the repeat() notation, these notations allow a series of gap decorations that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-gaps-1/#funcdef-repeat-line-color-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "running()",
      "href": "https://drafts.csswg.org/css-gcpm-3/#funcdef-running",
      "type": "function",
      "value": "running( <custom-ident> )",
      "spec": {
        "shortname": "css-gcpm",
        "currentSpec": true
      }
    },
    {
      "for": "grid-template-columns",
      "name": "minmax()",
      "value": "minmax(min, max)",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-minmax",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "grid-template-columns",
      "name": "fit-content()",
      "value": "fit-content( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "grid-template-rows",
      "name": "minmax()",
      "value": "minmax(min, max)",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-minmax",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "grid-template-rows",
      "name": "fit-content()",
      "value": "fit-content( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-grid-template-columns-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<track-repeat>",
      "name": "repeat()",
      "prose": "The repeat() notation represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-track-repeat-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<auto-repeat>",
      "name": "repeat()",
      "prose": "The repeat() notation represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-track-repeat-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<fixed-repeat>",
      "name": "repeat()",
      "prose": "The repeat() notation represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.",
      "href": "https://drafts.csswg.org/css-grid-2/#funcdef-track-repeat-repeat",
      "type": "function",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "image-set()",
      "prose": "Delivering the most appropriate image resolution for a user’s device can be a difficult task. Ideally, images should be in the same resolution as the device they’re being viewed in, which can vary between users. However, other factors can factor into the decision of which image to send; for example, if the user is on a slow mobile connection, they may prefer to receive lower-res images rather than waiting for a large proper-res image to load. The image-set() function allows an author to ignore most of these issues, simply providing multiple resolutions of an image and letting the UA decide which is most appropriate in a given situation.",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-image-set",
      "type": "function",
      "value": "image-set( <image-set-option># )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "image()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-image",
      "type": "function",
      "value": "image( <image-tags>? [ <image-src>? , <color>? ]! )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "cross-fade()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-cross-fade",
      "type": "function",
      "value": "cross-fade( <cf-image># )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "element()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-element",
      "type": "function",
      "value": "element( <id-selector> )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "conic-gradient()",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-conic-gradient",
      "type": "function",
      "value": "conic-gradient( [ <conic-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "repeating-linear-gradient()",
      "prose": "In addition to linear-gradient() and radial-gradient(), this specification defines repeating-linear-gradient() and repeating-radial-gradient() values. These notations take the same values and are interpreted the same as their respective non-repeating siblings defined previously.",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-repeating-linear-gradient",
      "type": "function",
      "value": "repeating-linear-gradient( [ <linear-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "repeating-radial-gradient()",
      "prose": "In addition to linear-gradient() and radial-gradient(), this specification defines repeating-linear-gradient() and repeating-radial-gradient() values. These notations take the same values and are interpreted the same as their respective non-repeating siblings defined previously.",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-repeating-radial-gradient",
      "type": "function",
      "value": "repeating-radial-gradient( [ <radial-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "repeating-conic-gradient()",
      "prose": "In addition to linear-gradient(), radial-gradient(), and conic-gradient(), this specification defines repeating-linear-gradient(), repeating-radial-gradient(), and repeating-conic-gradient() values. These notations take the same values and are interpreted the same as their respective non-repeating siblings defined previously.",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-repeating-conic-gradient",
      "type": "function",
      "value": "repeating-conic-gradient( [ <conic-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "stripes()",
      "prose": "The stripes() function defines a 1D image as a comma-separated list of colored stripes, each placed end-to-end on the paint line in the order given.",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-stripes",
      "type": "function",
      "value": "stripes( <color-stripe># )",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "-webkit-image-set()",
      "prose": "Implementations must accept -webkit-image-set() as a parse-time alias of image-set(). (It’s a valid value, with identical arguments to image-set(), and is turned into image-set() during parsing.)",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef--webkit-image-set",
      "type": "function",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "image-set()",
      "name": "type()",
      "value": "type( <string> )",
      "href": "https://drafts.csswg.org/css-images-4/#funcdef-image-set-type",
      "type": "function",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "linear-gradient()",
      "prose": "The linear-gradient() notation specifies a linear gradient in CSS. Its syntax is as follows:",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-linear-gradient",
      "type": "function",
      "value": "linear-gradient( [ <linear-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "radial-gradient()",
      "prose": "The radial-gradient() notation specifies a radial gradient by indicating the center of the gradient (where the 0% ellipse will be) and the size and shape of the ending shape (the 100% ellipse). Color stops are given as a list, just as for linear-gradient(). Starting from the gradient center and progressing towards (and potentially beyond) the ending shape, uniformly-scaled concentric ellipses are drawn and colored according to the specified color stops.",
      "href": "https://drafts.csswg.org/css-images-3/#funcdef-radial-gradient",
      "type": "function",
      "value": "radial-gradient( [ <radial-gradient-syntax> ] )",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "counter()",
      "prose": "Counters have no visible effect by themselves, but their values can be used with the counter() and counters() functions, whose used values represent counter values as strings or images. They are defined as follows:",
      "href": "https://drafts.csswg.org/css-lists-3/#funcdef-counter",
      "type": "function",
      "value": "counter( <counter-name>, <counter-style>? )",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "counters()",
      "prose": "Counters have no visible effect by themselves, but their values can be used with the counter() and counters() functions, whose used values represent counter values as strings or images. They are defined as follows:",
      "href": "https://drafts.csswg.org/css-lists-3/#funcdef-counters",
      "type": "function",
      "value": "counters( <counter-name>, <string>, <counter-style>? )",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "for": "clip",
      "name": "rect()",
      "value": "rect( <top>, <right>, <bottom>, <left> )",
      "href": "https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
      "type": "function",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "for": "@function",
      "name": "type()",
      "href": "https://drafts.csswg.org/css-mixins-1/#funcdef-function-type",
      "type": "function",
      "value": "type( <syntax> )",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      }
    },
    {
      "for": "text-overflow",
      "name": "fade()",
      "value": "fade( [ <length-percentage> ] )",
      "href": "https://drafts.csswg.org/css-overflow-4/#funcdef-text-overflow-fade",
      "type": "function",
      "spec": {
        "shortname": "css-overflow-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "float",
      "name": "snap-block()",
      "value": "snap-block( <length> , [ start | end | near ]? )",
      "href": "https://drafts.csswg.org/css-page-floats-3/#funcdef-float-snap-block",
      "type": "function",
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "for": "float",
      "name": "snap-inline()",
      "value": "snap-inline( <length> , [ left | right | near ]? )",
      "href": "https://drafts.csswg.org/css-page-floats-3/#funcdef-float-snap-inline",
      "type": "function",
      "spec": {
        "shortname": "css-page-floats",
        "currentSpec": true
      }
    },
    {
      "name": "paint()",
      "href": "https://drafts.css-houdini.org/css-paint-api-1/#funcdef-paint",
      "type": "function",
      "value": "paint( <ident>, <declaration-value>? )",
      "spec": {
        "shortname": "css-paint-api",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "shape()",
      "href": "https://drafts.csswg.org/css-shapes-2/#funcdef-shape",
      "type": "function",
      "value": "shape( <'fill-rule'>? from <position>, <shape-command>#)",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "inset()",
      "prose": "Defines an inset rectangle via insets from each edge of the reference box. If less than four <length-percentage> values are provided, the omitted values default in the same way as the margin shorthand: an omitted second or third value defaults to the first, and an omitted fourth value defaults to the second. The four <length-percentage>s define the position of the top, right, bottom, and left edges of a rectangle, respectively, as insets from the corresponding edges of the reference box. A pair of insets in either dimension that add up to more than the used dimension (such as left and right insets of 75% apiece) use the CSS Backgrounds 3 § 4.5 Overlapping Curves rules to proportionally reduce the inset effect to 100%. For example, specifying inset(75% 0 50% 0) has the top+bottom edges summing to 125% of the reference box’s height. They’re proportionally reduced to sum to 100%, identical to specifying inset(60% 0 40% 0). The optional <'border-radius'> argument(s) define rounded corners for the rectangle using the border-radius shorthand syntax.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-inset",
      "type": "function",
      "value": "inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "for": "<basic-shape>",
      "name": "xywh()",
      "prose": "Defines a rectangle via offsets from the top and left edge of the reference box, and a specified width and height. The four <length-percentage>s define, respectively, the inset from the left edge of the reference box, the inset from the top edge of the reference box, the width of the rectangle, and the height of the rectangle. The optional <'border-radius'> argument(s) define rounded corners for the inset rectangle using the border-radius shorthand syntax.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-xywh",
      "type": "function",
      "value": "xywh( <length-percentage>{2} <length-percentage [0,∞]>{2} [ round <'border-radius'> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "for": "<basic-shape>",
      "name": "rect()",
      "prose": "Defines a rectangle via insets from the top and left edges of the reference box. The four <length-percentage>s define the position of the top, right, bottom, and left edges of a rectangle, respectively, as insets from the top edge of the reference box (for the first and third values) or the left edge of the reference box (for the second and fourth values). An auto value makes the edge of the box coincide with the corresponding edge of the reference box: it’s equivalent to 0% as the first (top) or fourth (left) value, and equivalent to 100% as the second (right) or third (bottom) value. The second (right) and third (bottom) values are floored by the fourth (left) and second (top) values, respectively. For example, specifying rect(10px 0 0 20px) would place the bottom edge higher than the top edge, and the right edge further left than the left edge, so both are corrected to not cross over the other edge, identical to specifying rect(10px 20px 10px 20px). The optional <'border-radius'> argument(s) define rounded corners for the rectangle using the border-radius shorthand syntax.)",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-rect",
      "type": "function",
      "value": "rect( [ <length-percentage> | auto ]{4} [ round <'border-radius'> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "for": "<basic-shape>",
      "name": "circle()",
      "prose": "The <radial-size> argument defines the circle’s radius. Rather than referring to the gradient box, values are resolved against the reference box. Two <length-percentage> values are invalid. The <position> argument defines the center of the circle. Unless otherwise specified, this defaults to center if omitted.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-circle",
      "type": "function",
      "value": "circle( <radial-size>? [ at <position> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "ellipse()",
      "prose": "The <radial-size> argument defines the horizontal and vertical radiuses of the ellipse. Rather than referring to the gradient box, values are resolved against the reference box. The <position> argument defines the center of the ellipse. Unless otherwise specified, this defaults to center if omitted.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-ellipse",
      "type": "function",
      "value": "ellipse( <radial-size>? [ at <position> ]? )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "polygon()",
      "prose": "The <'fill-rule'> specifies the filling rule used to determine the interior. Defaults to nonzero if omitted. An optional <length> after a round keyword defines rounding for each vertex of the polygon. The length is the radius of a circle whose center lies on the bisector of the smaller angle of the vertex, and that is tangential to both sides of the vertex. Rounding polygon vertices that are both convex and concave. To avoid rounding more than half of any line segment, the rounding of each vertex must be clamped separately such that the radius is never more than the smaller of tan(angle/2) segment / 2 evaluated against both vertex line segments. This diagram shows the intent of the clamping formula. Each <length-percentage> pair specifies a vertex of the polygon, as a horizontal and vertical offset from the left and top edges of the reference box. The UA must close a polygon by connecting the last vertex with the first vertex of the list.",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-polygon",
      "type": "function",
      "value": "polygon( <'fill-rule'>? [ round <length> ]? , [<length-percentage> <length-percentage>]# )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "<basic-shape>",
      "name": "path()",
      "prose": "The <'fill-rule'> specifies the filling rule used to determine the interior. Defaults to nonzero if omitted, unless the function is being used in a context such as SVG shapes where the fill-rule property is relevant. In that case an omitted value will use the computed value of the fill-rule property. The <string> represents an SVG Path data string. A path data string that does not conform to the to the grammar and parsing rules of SVG 1.1, or that does conform but defines an empty path, is invalid and causes the entire path() to be invalid. The initial position is defined by the first “move to” argument in the path string. For the initial direction follow SVG 1.1. The UA must close a path with an implicit closepath command (\"z\" or \"Z\") if it is not present in the string for properties that require a closed loop (such as shape-outside and clip-path).",
      "href": "https://drafts.csswg.org/css-shapes-1/#funcdef-basic-shape-path",
      "type": "function",
      "value": "path( <'fill-rule'>? , <string> )",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "width",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "height",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "min-width",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "min-height",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "max-width",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "max-height",
      "name": "fit-content()",
      "value": "fit-content(<length-percentage [0,∞]>)",
      "href": "https://drafts.csswg.org/css-sizing-3/#funcdef-width-fit-content",
      "type": "function",
      "spec": {
        "shortname": "css-sizing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "scale()",
      "value": "scale( [ <number> | <percentage> ]#{1,2} )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scale",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      }
    },
    {
      "name": "scaleX()",
      "value": "scaleX( [ <number> | <percentage> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scalex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "scaleY()",
      "value": "scaleY( [ <number> | <percentage> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scaley",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "matrix3d()",
      "value": "matrix3d( <number>#{16} )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-matrix3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "translate3d()",
      "value": "translate3d( <length-percentage> , <length-percentage> , <length> )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-translate3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "translateZ()",
      "value": "translateZ( <length> )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-translatez",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "scale3d()",
      "value": "scale3d( [ <number> | <percentage> ]#{3} )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scale3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "scaleZ()",
      "value": "scaleZ( [ <number> | <percentage> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-scalez",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotate3d()",
      "value": "rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotate3d",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotateX()",
      "value": "rotateX( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotatex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotateY()",
      "value": "rotateY( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotatey",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "rotateZ()",
      "value": "rotateZ( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-rotatez",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "perspective()",
      "value": "perspective( [ <length [0,∞]> | none ] )",
      "href": "https://drafts.csswg.org/css-transforms-2/#funcdef-perspective",
      "type": "function",
      "spec": {
        "shortname": "css-transforms-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "matrix()",
      "value": "matrix( <number>#{6} )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-matrix",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "translate()",
      "value": "translate( <length-percentage> , <length-percentage>? )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-translate",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "translateX()",
      "value": "translateX( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-translatex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "translateY()",
      "value": "translateY( <length-percentage> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-translatey",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "scale()",
      "value": "scale( <number> , <number>? )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-scale",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "for": "transform",
      "name": "scaleX()",
      "value": "scaleX( <number> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-scalex",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "scaleY()",
      "value": "scaleY( <number> )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-scaley",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "rotate()",
      "value": "rotate( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-rotate",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "for": "transform",
      "name": "skew()",
      "value": "skew( [ <angle> | <zero> ] , [ <angle> | <zero> ]? )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-skew",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "skewX()",
      "value": "skewX( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-skewx",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "transform",
      "name": "skewY()",
      "value": "skewY( [ <angle> | <zero> ] )",
      "href": "https://drafts.csswg.org/css-transforms-1/#funcdef-transform-skewy",
      "type": "function",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "progress()",
      "prose": "The progress() functional notation returns a <number> value representing the position of one calculation (the progress value) between two other calculations (the progress start value and progress end value). progress() is a math function.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-progress",
      "type": "function",
      "value": "progress(<calc-sum>, <calc-sum>, <calc-sum>)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "media-progress()",
      "prose": "Similar to the progress() notation, the media-progress() functional notation returns a <number> value representing current value of the specified media query [MEDIAQUERIES-4] as a progress value between two explicit values of the media query (as the progress start value and progress end value).",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-media-progress",
      "type": "function",
      "value": "media-progress(<mf-name>, <calc-sum>, <calc-sum>)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "container-progress()",
      "prose": "The container-progress() functional notation is identical to the media-progress() functional notation, except that it accepts container features [CSS-CONTAIN-3] in place of media features.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-container-progress",
      "type": "function",
      "value": "container-progress(<mf-name> [ of <container-name> ]?, <calc-sum>, <calc-sum>)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "calc-mix()",
      "prose": "The calc-mix() mix notation represents an interpolated numeric or dimensional value. Like calc(), it is a math function, with the following syntactic form:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-calc-mix",
      "type": "function",
      "value": "calc-mix( <progress>, <calc-sum>, <calc-sum> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "transform-mix()",
      "prose": "The transform-mix() mix notation represents an interpolated <transform-list>, with the following syntactic form:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-transform-mix",
      "type": "function",
      "value": "transform-mix( <progress>, <transform-list>, <transform-list> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "mix()",
      "prose": "Interpolation of any two property values can be represented by the mix() mix notation, which supports two alternative syntax patterns:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-mix",
      "type": "function",
      "value": "mix( <progress> , <whole-value> , <whole-value> ) | mix( <progress> && of <keyframes-name> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "first-valid()",
      "prose": "The first-valid() functional notation inlines the fallback behavior intrinsic to parsing declarations. Unlike most notations, it can accept any valid or invalid syntax in its arguments, and represents the first value among its arguments that is supported (parsed as valid) by the UA as the whole value of the property it’s used in.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-first-valid",
      "type": "function",
      "value": "first-valid( <declaration-value># )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "if()",
      "prose": "The if() function is an arbitrary substitution function that represents conditional values. Its argument consists of an ordered semi-colon–separated list of statements, each consisting of a condition followed by a colon followed by a value. An if() function represents the value corresponding to the first condition in its argument list to be true; if no condition matches, then the if() function represents an empty token stream.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-if",
      "type": "function",
      "value": "if( [ <if-branch> ; ]* <if-branch> ;? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "toggle()",
      "prose": "The toggle() expression allows descendant elements to cycle over a list of values instead of inheriting the same value.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-toggle",
      "type": "function",
      "value": "toggle( <whole-value># )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "inherit()",
      "prose": "Like the inherit keyword, the inherit() functional notation resolves to the computed value of a property on the parent. Rather than resolving to the value of the same property, however, it resolves to a sequence of component values representing the computed value of the property specified as its first argument. Its second argument, if present, is used as a fallback in case the first argument resolves to the guaranteed-invalid value.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-inherit",
      "type": "function",
      "value": "inherit( <custom-property-name>, <declaration-value>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "attr()",
      "prose": "The attr() function substitutes the value of an attribute on an element into a property, similar to how the var() function substitutes a custom property value into a function.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-attr",
      "type": "function",
      "value": "attr( <attr-name> <attr-type>? , <declaration-value>?)",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "ident()",
      "prose": "The ident() function represents an <ident>, and can be used to manually construct <custom-ident> values from several parts.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-ident",
      "type": "function",
      "value": "ident( <ident-arg>+ )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "random()",
      "prose": "The random() function is a math function that represents a random value between a minimum and maximum value, drawn from a uniform distribution, optionally limiting the possible values to a step between those limits:",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-random",
      "type": "function",
      "value": "random( <random-value-sharing>? , <calc-sum>, <calc-sum>, <calc-sum>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "random-item()",
      "prose": "The random-item() function resolves to a random item from among its list of items.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-random-item",
      "type": "function",
      "value": "random-item( <random-value-sharing> , [ <declaration-value>? ]# )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "sibling-count()",
      "prose": "The sibling-count() functional notation represents, as an <integer>, the total number of child elements in the parent of the element on which the notation is used.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-sibling-count",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "sibling-index()",
      "prose": "The sibling-index() functional notation represents, as an <integer>, the index of the element on which the notation is used among its inclusive siblings. Like :nth-child(), sibling-index() is 1-indexed.",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-sibling-index",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "calc-size()",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-calc-size",
      "type": "function",
      "value": "calc-size( <calc-size-basis>, <calc-sum> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "crossorigin()",
      "prose": "<crossorigin-modifier> = crossorigin(anonymous | use-credentials)",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-request-url-modifier-crossorigin",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "<request-url-modifier>",
      "name": "integrity()",
      "prose": "<integrity-modifier> = integrity(<string>)",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-request-url-modifier-integrity",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "<request-url-modifier>",
      "name": "referrerpolicy()",
      "prose": "<referrerpolicy-modifier> = referrerpolicy(no-referrer | no-referrer-when-downgrade | same-origin | origin | strict-origin | origin-when-cross-origin | strict-origin-when-cross-origin | unsafe-url)",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-request-url-modifier-referrerpolicy",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "for": "attr()",
      "name": "type()",
      "value": "type( <syntax> )",
      "href": "https://drafts.csswg.org/css-values-5/#funcdef-attr-type",
      "type": "function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "url()",
      "prose": "The <url> type, written with the url() and src() functions, represents a URL, which is a pointer to a resource.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-url",
      "type": "function",
      "value": "url( <string> <url-modifier>* ) | <url-token>",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "src()",
      "prose": "The <url> type, written with the url() and src() functions, represents a URL, which is a pointer to a resource.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-src",
      "type": "function",
      "value": "src( <string> <url-modifier>* )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "calc()",
      "prose": "The calc() function is a math function that allows basic arithmetic to be performed on numerical values, using addition (+), subtraction (-), multiplication (*), division (/), and parentheses.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-calc",
      "type": "function",
      "value": "calc( <calc-sum> )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "min()",
      "prose": "The min() or max() functions contain one or more comma-separated calculations, and represent the smallest (most negative) or largest (most positive) of them, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-min",
      "type": "function",
      "value": "min( <calc-sum># )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "max()",
      "prose": "The min() or max() functions contain one or more comma-separated calculations, and represent the smallest (most negative) or largest (most positive) of them, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-max",
      "type": "function",
      "value": "max( <calc-sum># )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "clamp()",
      "prose": "The clamp() function takes three calculations—​a minimum value, a central value, and a maximum value—​and represents its central calculation, clamped according to its min and max calculations, favoring the min calculation if it conflicts with the max. (That is, given clamp(MIN, VAL, MAX), it represents exactly the same value as max(MIN, min(VAL, MAX))).",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-clamp",
      "type": "function",
      "value": "clamp( [ <calc-sum> | none ], <calc-sum>, [ <calc-sum> | none ] )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "round()",
      "value": "round( <rounding-strategy>?, <calc-sum>, <calc-sum>? )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-round",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "mod()",
      "value": "mod( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-mod",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "rem()",
      "value": "rem( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-rem",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "sin()",
      "value": "sin( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-sin",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "cos()",
      "value": "cos( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-cos",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "tan()",
      "value": "tan( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-tan",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "asin()",
      "value": "asin( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-asin",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "acos()",
      "value": "acos( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-acos",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "atan()",
      "value": "atan( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-atan",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "atan2()",
      "value": "atan2( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-atan2",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "pow()",
      "value": "pow( <calc-sum>, <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-pow",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "sqrt()",
      "value": "sqrt( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-sqrt",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "hypot()",
      "value": "hypot( <calc-sum># )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-hypot",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "log()",
      "value": "log( <calc-sum>, <calc-sum>? )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-log",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "exp()",
      "value": "exp( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-exp",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "abs()",
      "value": "abs( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-abs",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "sign()",
      "value": "sign( <calc-sum> )",
      "href": "https://drafts.csswg.org/css-values-4/#funcdef-sign",
      "type": "function",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "var()",
      "href": "https://drafts.csswg.org/css-variables-2/#funcdef-var",
      "type": "function",
      "value": "var( <custom-property-name> , <declaration-value>? )",
      "spec": {
        "shortname": "css-variables",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "filter()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter",
      "type": "function",
      "value": "filter( [ <image> | <string> ], <filter-value-list> )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "filter",
      "name": "blur()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-blur",
      "type": "function",
      "value": "blur( <length>? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "brightness()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-brightness",
      "type": "function",
      "value": "brightness( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "contrast()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-contrast",
      "type": "function",
      "value": "contrast( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "drop-shadow()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-drop-shadow",
      "type": "function",
      "value": "drop-shadow( [ <color>? && <length>{2,3} ] )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "grayscale()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-grayscale",
      "type": "function",
      "value": "grayscale( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "hue-rotate()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-hue-rotate",
      "type": "function",
      "value": "hue-rotate( [ <angle> | <zero> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "invert()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-invert",
      "type": "function",
      "value": "invert( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "opacity()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-opacity",
      "type": "function",
      "value": "opacity( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "saturate()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-saturate",
      "type": "function",
      "value": "saturate( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "for": "filter",
      "name": "sepia()",
      "href": "https://drafts.fxtf.org/filter-effects-1/#funcdef-filter-sepia",
      "type": "function",
      "value": "sepia( [ <number> | <percentage> ]? )",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "ray()",
      "href": "https://drafts.fxtf.org/motion-1/#funcdef-ray",
      "type": "function",
      "value": "ray( <angle> && <ray-size>? && contain? && [at <position>]? )",
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "scroll()",
      "prose": "The scroll() functional notation can be used as a <single-animation-timeline> value in animation-timeline and specifies a scroll progress timeline. Its syntax is",
      "href": "https://drafts.csswg.org/scroll-animations-1/#funcdef-scroll",
      "type": "function",
      "value": "scroll( [ <scroller> || <axis> ]? )",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "view()",
      "prose": "The view() functional notation can be used as a <single-animation-timeline> value in animation-timeline and specifies a view progress timeline in reference to the nearest ancestor scroll container. Its syntax is",
      "href": "https://drafts.csswg.org/scroll-animations-1/#funcdef-view",
      "type": "function",
      "value": "view( [ <axis> || <'view-timeline-inset'> ]? )",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<blend-mode>",
      "href": "https://drafts.fxtf.org/compositing-2/#ltblendmodegt",
      "type": "type",
      "value": "normal | multiply | screen | overlay | darken | lighten | color-dodge |color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity",
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      }
    },
    {
      "name": "<isolation-mode>",
      "href": "https://drafts.fxtf.org/compositing-2/#isolated-propid",
      "type": "type",
      "value": "auto | isolate",
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      }
    },
    {
      "name": "<composite-mode>",
      "href": "https://drafts.fxtf.org/compositing-2/#compositemode",
      "type": "type",
      "value": "clear | copy | source-over | destination-over | source-in | destination-in | source-out | destination-out | source-atop | destination-atop | xor | lighter | plus-darker | plus-lighter",
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<self-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-self-position",
      "type": "type",
      "value": "center | start | end | self-start | self-end | flex-start | flex-end",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<content-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-content-position",
      "type": "type",
      "value": "center | start | end | flex-start | flex-end",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<baseline-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-baseline-position",
      "type": "type",
      "value": "[ first | last ]? && baseline",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<content-distribution>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-content-distribution",
      "type": "type",
      "value": "space-between | space-around | space-evenly | stretch",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<overflow-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-overflow-position",
      "type": "type",
      "value": "unsafe | safe",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<position-area>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-position-area",
      "type": "type",
      "value": "[ [ left | center | right | span-left | span-right | x-start | x-end | span-x-start | span-x-end | x-self-start | x-self-end | span-x-self-start | span-x-self-end | span-all ] || [ top | center | bottom | span-top | span-bottom | y-start | y-end | span-y-start | span-y-end | y-self-start | y-self-end | span-y-self-start | span-y-self-end | span-all ] | [ block-start | center | block-end | span-block-start | span-block-end | span-all ] || [ inline-start | center | inline-end | span-inline-start | span-inline-end | span-all ] | [ self-block-start | center | self-block-end | span-self-block-start | span-self-block-end | span-all ] || [ self-inline-start | center | self-inline-end | span-self-inline-start | span-self-inline-end | span-all ] | [ start | center | end | span-start | span-end | span-all ]{1,2} | [ self-start | center | self-end | span-self-start | span-self-end | span-all ]{1,2} ]",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<anchor-name>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-name",
      "type": "type",
      "value": "<dashed-ident>",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<anchor-side>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-side",
      "type": "type",
      "value": "inside | outside | top | left | right | bottom | start | end | self-start | self-end | <percentage> | center",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<anchor-size>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-size",
      "type": "type",
      "value": "width | height | block | inline | self-block | self-inline",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<try-size>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-try-size",
      "type": "type",
      "value": "most-width | most-height | most-block-size | most-inline-size",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "for": "position-try-fallbacks",
      "name": "<try-tactic>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-position-try-fallbacks-try-tactic",
      "type": "type",
      "value": "flip-block || flip-inline || flip-start",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-composition>",
      "value": "replace | add | accumulate",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-composition",
      "type": "type",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-animation-timeline>",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-timeline",
      "type": "type",
      "value": "auto | none | <dashed-ident> | <scroll()> | <view()>",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-animation>",
      "value": "<time [0s,∞]> || <easing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-trigger-type>",
      "value": "once | repeat | alternate | state",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-trigger-type",
      "type": "type",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-animation-trigger>",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-trigger",
      "type": "type",
      "value": "<single-animation-trigger-type> || [ none | auto | [ [ <dashed-ident> | <scroll()> | <view()> ] [ normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]{0,4} ] ]",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<keyframes-name>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-keyframes-name",
      "type": "type",
      "value": "<custom-ident> | <string>",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<keyframe-block>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-keyframe-block",
      "type": "type",
      "value": "<keyframe-selector># { <declaration-list> }",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<keyframe-selector>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-keyframe-selector",
      "type": "type",
      "value": "from | to | <percentage [0,100]>",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-iteration-count>",
      "value": "infinite | <number [0,∞]>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-iteration-count",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-direction>",
      "value": "normal | reverse | alternate | alternate-reverse",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-direction",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-play-state>",
      "value": "running | paused",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-play-state",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-fill-mode>",
      "value": "none | forwards | backwards | both",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-fill-mode",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<repetition>",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#typedef-repetition",
      "type": "type",
      "value": "repeat | space | round | no-repeat",
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "<repeat-style>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-repeat-style",
      "type": "type",
      "value": "repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<bg-position>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-position",
      "type": "type",
      "value": "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<position-three>",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#typedef-position-three",
      "type": "type",
      "value": "[ [ left | center | right ] && [ [ top | bottom ] <length-percentage> ] | [ [ left | right ] <length-percentage> ] && [ top | center | bottom ] ]",
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<bg-clip>",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#typedef-bg-clip",
      "type": "type",
      "value": "<visual-box> | border-area| text",
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<bg-image>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-image",
      "type": "type",
      "value": "<image> | none",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<attachment>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-attachment",
      "type": "type",
      "value": "scroll | fixed | local",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<bg-size>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-size",
      "type": "type",
      "value": "[ <length-percentage [0,∞]> | auto ]{1,2} | cover | contain",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<bg-layer>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-layer",
      "type": "type",
      "value": "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box>",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<final-bg-layer>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-final-bg-layer",
      "type": "type",
      "value": "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box> || <'background-color'>",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<line-style>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-line-style",
      "type": "type",
      "value": "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<line-width>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-line-width",
      "type": "type",
      "value": "<length [0,∞]> | thin | medium | thick",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<shadow>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-shadow",
      "type": "type",
      "value": "<color>? && [<length>{2} <length [0,∞]>? <length>?] && inset?",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<corner-shape-value>",
      "href": "https://drafts.csswg.org/css-borders-4/#typedef-corner-shape-value",
      "type": "type",
      "value": "round | scoop | bevel | notch | square | squircle | superellipse(<number [-∞,∞]> | infinity | -infinity)",
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "<spread-shadow>",
      "href": "https://drafts.csswg.org/css-borders-4/#typedef-spread-shadow",
      "type": "type",
      "value": "<'box-shadow-color'>? && [ <'box-shadow-offset'> [ <'box-shadow-blur'> <'box-shadow-spread'>? ]? ] && <'box-shadow-position'>?",
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "<box>",
      "prose": "The following <box> CSS keywords are defined for use in properties (such as transform-box and background-clip) that need to refer to various box edges:",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-box",
      "type": "type",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<visual-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-visual-box",
      "type": "type",
      "value": "content-box | padding-box | border-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "<layout-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-layout-box",
      "type": "type",
      "value": "<visual-box> | margin-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<paint-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-paint-box",
      "type": "type",
      "value": "<visual-box> | fill-box | stroke-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "<coord-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-coord-box",
      "type": "type",
      "value": "<paint-box> | view-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "<scope-start>",
      "prose": "<scope-start> is a <selector-list> selector used to identify the scoping root(s).",
      "href": "https://drafts.csswg.org/css-cascade-6/#typedef-scope-start",
      "type": "type",
      "spec": {
        "shortname": "css-cascade-6",
        "currentSpec": false
      }
    },
    {
      "name": "<scope-end>",
      "prose": "<scope-end> is a <selector-list> selector used to identify any scoping limits.",
      "href": "https://drafts.csswg.org/css-cascade-6/#typedef-scope-end",
      "type": "type",
      "spec": {
        "shortname": "css-cascade-6",
        "currentSpec": false
      }
    },
    {
      "name": "<import-conditions>",
      "href": "https://drafts.csswg.org/css-cascade-5/#typedef-import-conditions",
      "type": "type",
      "value": "[ supports( [ <supports-condition> | <declaration> ] ) ]? <media-query-list>?",
      "spec": {
        "shortname": "css-cascade",
        "currentSpec": true
      }
    },
    {
      "name": "<layer-name>",
      "href": "https://drafts.csswg.org/css-cascade-5/#typedef-layer-name",
      "type": "type",
      "value": "<ident> [ '.' <ident> ]*",
      "spec": {
        "shortname": "css-cascade",
        "currentSpec": true
      }
    },
    {
      "name": "<color>",
      "prose": "Colors in CSS are represented by the <color> type:",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color",
      "type": "type",
      "value": "<color-base> | currentColor | <system-color>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<color-base>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color-base",
      "type": "type",
      "value": "<hex-color> | <color-function> | <named-color> | transparent",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<color-function>",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#typedef-color-function",
      "type": "type",
      "value": "<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <oklab()> | <oklch()> | <ictcp()> | <jzazbz()> | <jzczhz()> | <color()>",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-rgb-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-rgb-syntax",
      "type": "type",
      "value": "rgb( [ <number> | <percentage> | none]{3} [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-rgba-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-rgba-syntax",
      "type": "type",
      "value": "rgba( [ <number> | <percentage> | none]{3} [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-hsl-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-hsl-syntax",
      "type": "type",
      "value": "hsl( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-hsla-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-hsla-syntax",
      "type": "type",
      "value": "hsla( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<colorspace-params>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-colorspace-params",
      "type": "type",
      "value": "[ <predefined-rgb-params> | <xyz-params>]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-params>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-custom-params",
      "type": "type",
      "value": "<dashed-ident> [ <number> | <percentage> | none ]+",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<predefined-rgb-params>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-predefined-rgb-params",
      "type": "type",
      "value": "<predefined-rgb> [ <number> | <percentage> | none ]{3}",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<predefined-rgb>",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#typedef-predefined-rgb",
      "type": "type",
      "value": "srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | rec2100-pq | rec2100-hlg | rec2100-linear",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "<xyz-params>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-xyz-params",
      "type": "type",
      "value": "<xyz-space> [ <number> | <percentage> | none ]{3}",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<xyz>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-xyz",
      "type": "type",
      "value": "xyz | xyz-d50 | xyz-d65",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<legacy-device-cmyk-syntax>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-legacy-device-cmyk-syntax",
      "type": "type",
      "value": "device-cmyk( <number>#{4} )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "<modern-device-cmyk-syntax>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-modern-device-cmyk-syntax",
      "type": "type",
      "value": "device-cmyk( <cmyk-component>{4} [ / [ <alpha-value> | none ] ]? )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "<cmyk-component>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-cmyk-component",
      "type": "type",
      "value": "<number> | <percentage> | none",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "<color-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color-space",
      "type": "type",
      "value": "<rectangular-color-space> | <polar-color-space>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<rectangular-color-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-rectangular-color-space",
      "type": "type",
      "value": "srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | lab | oklab | xyz | xyz-d50 | xyz-d65",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<polar-color-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-polar-color-space",
      "type": "type",
      "value": "hsl | hwb | lch | oklch",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-color-space>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-custom-color-space",
      "type": "type",
      "value": "<dashed-ident>",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<hue-interpolation-method>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-hue-interpolation-method",
      "type": "type",
      "value": "[ shorter | longer | increasing | decreasing ] hue",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<color-interpolation-method>",
      "href": "https://drafts.csswg.org/css-color-4/#color-interpolation-method",
      "type": "type",
      "value": "in [ <rectangular-color-space> | <polar-color-space> <hue-interpolation-method>? ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<target-contrast>",
      "prose": "The <target-contrast> argument specifies the contrast algorithm(s) to use. If no color candidates have been provided, <target-contrast> may be omitted, in which case a UA-chosen algorithm is used.",
      "href": "https://drafts.csswg.org/css-color-6/#typedef-target-contrast",
      "type": "type",
      "value": "<wcag2>",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<wcag2>",
      "href": "https://drafts.csswg.org/css-color-6/#typedef-wcag2",
      "type": "type",
      "value": "wcag2 | wcag2([<number> | [ aa | aaa ] && large? ])",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      }
    },
    {
      "name": "<hue>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-hue",
      "type": "type",
      "value": "<number> | <angle>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-rgb-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-rgb-syntax",
      "type": "type",
      "value": "rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-rgba-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-rgba-syntax",
      "type": "type",
      "value": "rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<hex-color>",
      "prose": "The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits. In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-hex-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<named-color>",
      "prose": "CSS defines a large set of named colors, so that common colors can be written and read more easily. A <named-color> is written as an <ident>, accepted anywhere a <color> is. As usual for CSS-defined <ident>s, all of these keywords are ASCII case-insensitive.",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-named-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<system-color>",
      "prose": "However, in forced colors mode, most colors on the page are forced into a restricted, user-chosen palette. The <system-color> keywords expose these user-chosen colors so that the rest of the page can integrate with this restricted palette.",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-system-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-hsl-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-hsl-syntax",
      "type": "type",
      "value": "hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-hsla-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-hsla-syntax",
      "type": "type",
      "value": "hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<xyz-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-xyz-space",
      "type": "type",
      "value": "xyz | xyz-d50 | xyz-d65",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<deprecated-color>",
      "prose": "The deprecated system colors are represented as the <deprecated-color> sub-type, and are defined as:",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-deprecated-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<quirky-color>",
      "prose": "When CSS is being parsed in quirks mode, <quirky-color> is a type of <color> that is only valid in certain properties:",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-quirky-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "opacity",
      "name": "<opacity-value>",
      "prose": "The opacity to be applied to the element. The resulting opacity is applied to the entire element, rather than a particular color. Opacity values outside the range [0,1] are not invalid, and are preserved in specified values, but are clamped to the range [0, 1] in computed values.",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-opacity-opacity-value",
      "type": "type",
      "value": "<number> | <percentage>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "for": "<color>",
      "name": "<alpha-value>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color-alpha-value",
      "type": "type",
      "value": "<number> | <percentage>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-feature>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-feature",
      "type": "type",
      "value": "<supports-decl>",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-selector-fn>",
      "href": "https://drafts.csswg.org/css-conditional-4/#typedef-supports-selector-fn",
      "type": "type",
      "value": "selector( <complex-selector> )",
      "spec": {
        "shortname": "css-conditional-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<supports-font-tech-fn>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-supports-font-tech-fn",
      "type": "type",
      "value": "font-tech( <font-tech> )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<supports-font-format-fn>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-supports-font-format-fn",
      "type": "type",
      "value": "font-format( <font-format> )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<container-condition>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-container-condition",
      "type": "type",
      "value": "[ <container-name>? <container-query>? ]!",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<container-name>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-container-name",
      "type": "type",
      "value": "<custom-ident>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<container-query>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-container-query",
      "type": "type",
      "value": "not <query-in-parens> | <query-in-parens> [ [ and <query-in-parens> ]* | [ or <query-in-parens> ]* ]",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<query-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-query-in-parens",
      "type": "type",
      "value": "( <container-query> ) | ( <size-feature> ) | style( <style-query> ) | scroll-state( <scroll-state-query> ) | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<style-query>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-style-query",
      "type": "type",
      "value": "not <style-in-parens> | <style-in-parens> [ [ and <style-in-parens> ]* | [ or <style-in-parens> ]* ] | <style-feature>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<style-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-style-in-parens",
      "type": "type",
      "value": "( <style-query> ) | ( <style-feature> ) | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<scroll-state-query>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-scroll-state-query",
      "type": "type",
      "value": "not <scroll-state-in-parens> | <scroll-state-in-parens> [ [ and <scroll-state-in-parens> ]* | [ or <scroll-state-in-parens> ]* ] | <scroll-state-feature>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<scroll-state-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-scroll-state-in-parens",
      "type": "type",
      "value": "( <scroll-state-query> ) | ( <scroll-state-feature> ) | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<size-feature>",
      "prose": "A container size query allows querying the size of the query container’s principal box. It is a boolean combination of individual size features (<size-feature>) that each query a single, specific dimensional feature of the query container. The syntax of a <size-feature> is the same as for a media feature: a feature name, a comparator, and a value. [mediaqueries-5] The boolean syntax and logic combining size features into a size query is the same as for CSS feature queries. (See @supports. [css-conditional-3])",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-size-feature",
      "type": "type",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<style-feature>",
      "prose": "A container style query allows querying the computed values of the query container. It is a boolean combination of individual style features (<style-feature>) that each query a single, specific property of the query container. The syntax of a <style-feature> is either the same as for a valid declaration [CSS-SYNTAX-3], a supported CSS property, or a <custom-property-name>.",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-style-feature",
      "type": "type",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<scroll-state-feature>",
      "prose": "A container scroll-state query allows querying a container for state that depends on scroll position. It is a boolean combination of individual scroll-state features (<scroll-state-feature>) that each query a single feature of the query container. The syntax of a <scroll-state-feature> is the same as for a media feature: a feature name, a comparator, and a value.",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-scroll-state-feature",
      "type": "type",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<supports-condition>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-condition",
      "type": "type",
      "value": "not <supports-in-parens> | <supports-in-parens> [ and <supports-in-parens> ]* | <supports-in-parens> [ or <supports-in-parens> ]*",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-in-parens",
      "type": "type",
      "value": "( <supports-condition> ) | <supports-feature> | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-decl>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-decl",
      "type": "type",
      "value": "( <declaration> )",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<quote>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-quote",
      "type": "type",
      "value": "open-quote | close-quote | no-open-quote | no-close-quote",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "<leader-type>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-leader-type",
      "type": "type",
      "value": "dotted | solid | space | <string>",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "<target>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-target",
      "type": "type",
      "value": "<target-counter()> | <target-counters()> | <target-text()>",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "for": "content",
      "name": "<content-replacement>",
      "value": "<image>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-content-content-replacement",
      "type": "type",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "for": "content",
      "name": "<content-list>",
      "prose": "Replaces the element’s contents with one or more anonymous inline boxes corresponding to the specified values, in the order specified. Its normal contents are suppressed and do not generate boxes, as if they were display: none. Each value contributes an inline box to the element’s contents. For <image>, this is an inline anonymous replaced element; for the others, it’s an anonymous inline run of text. If an <image> represents an invalid image, the user agent must do one of the following: \"Skip\" the <image>, generating nothing for it. Display some indication that the image can’t be displayed in place of the <image>, such as a \"broken image\" icon. This specification intentionally does not define which behavior a user agent must use, but it must use one or the other consistently.",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-content-content-list",
      "type": "type",
      "value": "[ <string> | <image> | <attr()> | contents | <quote> | <leader()> | <target> | <string()> | <content()> | <counter> ]+",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "<counter-style-name>",
      "prose": "<counter-style-name> is a <custom-ident> that is not an ASCII case-insensitive match for none. When used here, to define a counter style, it also cannot be any of the non-overridable counter-style names (in other uses that merely reference a counter style, such as the extend system, these are allowed). The <counter-style-name> is a tree-scoped name.",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-counter-style-name",
      "type": "type",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<symbol>",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-symbol",
      "type": "type",
      "value": "<string> | <image> | <custom-ident>",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<symbols-type>",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-symbols-type",
      "type": "type",
      "value": "cyclic | numeric | alphabetic | symbolic | fixed",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<counter-style>",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-counter-style",
      "type": "type",
      "value": "<counter-style-name> | <symbols()>",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<display-outside>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-outside",
      "type": "type",
      "value": "block | inline | run-in",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-inside>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-inside",
      "type": "type",
      "value": "flow | flow-root | table | flex | grid | ruby",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-listitem>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-listitem",
      "type": "type",
      "value": "<display-outside>? && [ flow | flow-root ]? && list-item",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-internal>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-internal",
      "type": "type",
      "value": "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-box>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-box",
      "type": "type",
      "value": "contents | none",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-legacy>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-legacy",
      "type": "type",
      "value": "inline-block | inline-table | inline-flex | inline-grid",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-easing-function",
      "type": "type",
      "value": "<linear-easing-function> | <cubic-bezier-easing-function> | <step-easing-function>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-linear-easing-function",
      "type": "type",
      "value": "linear | <linear()>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<cubic-bezier-easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-cubic-bezier-easing-function",
      "type": "type",
      "value": "ease | ease-in | ease-out | ease-in-out | <cubic-bezier()>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<step-easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-step-easing-function",
      "type": "type",
      "value": "step-start | step-end | <steps()>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<step-position>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-step-position",
      "type": "type",
      "value": "jump-start | jump-end | jump-none | jump-both | start | end",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<extension-name>",
      "prose": "All extensions defined in this specification use a common syntax for defining their ”names”: the <extension-name> production. An <extension-name> is any identifier that starts with two dashes (U+002D HYPHEN-MINUS), like --foo, or even exotic names like -- or ------. The CSS language will never use identifiers of this form for any language-defined purpose, so it’s safe to use them for author-defined purposes without ever having to worry about colliding with CSS-defined names.",
      "href": "https://drafts.csswg.org/css-extensions-1/#typedef-extension-name",
      "type": "type",
      "spec": {
        "shortname": "css-extensions",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-selector>",
      "href": "https://drafts.csswg.org/css-extensions-1/#typedef-custom-selector",
      "type": "type",
      "value": "<custom-arg>? : <extension-name> [ ( <custom-arg>+#? ) ]? ;",
      "spec": {
        "shortname": "css-extensions",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-arg>",
      "href": "https://drafts.csswg.org/css-extensions-1/#typedef-custom-arg",
      "type": "type",
      "value": "$ <ident-token> ;",
      "spec": {
        "shortname": "css-extensions",
        "currentSpec": true
      }
    },
    {
      "name": "<font-format>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-format-values",
      "type": "type",
      "value": "[<string> | collection | embedded-opentype | opentype | svg | truetype | woff | woff2 ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-tech>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-tech-values",
      "type": "type",
      "value": "[<font-features-tech> | <color-font-tech> | variations | palettes | incremental ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-features-tech>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-features-tech-values",
      "type": "type",
      "value": "[features-opentype | features-aat | features-graphite]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<color-font-tech>",
      "href": "https://drafts.csswg.org/css-fonts-4/#color-font-tech-values",
      "type": "type",
      "value": "[color-COLRv0 | color-COLRv1 | color-SVG | color-sbix | color-CBDT ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<family-name>",
      "prose": "The name of a font family, such as Helvetica or Verdana in the previous example. This might be a locally-instaled font, or might be a web font.",
      "href": "https://drafts.csswg.org/css-fonts-4/#family-name-value",
      "type": "type",
      "value": "<string> | <custom-ident>+",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<system-family-name>",
      "prose": "A locally installed system font, whose use is subject to certain constraints. In particular, it may not be used with the font-family property, but can be used with the font shorthand. The following values refer to system fonts:",
      "href": "https://drafts.csswg.org/css-fonts-4/#system-family-name-value",
      "type": "type",
      "value": "caption | icon | menu | message-box | small-caption | status-bar",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-family>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-family",
      "type": "type",
      "value": "<generic-script-specific>| <generic-complete> | <generic-incomplete>",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-script-specific>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-script-specific",
      "type": "type",
      "value": "generic(fangsong) | generic(kai) | generic(khmer-mul) | generic(nastaliq)",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-complete>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-complete",
      "type": "type",
      "value": "serif | sans-serif | system-ui | cursive | fantasy | math | monospace",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-incomplete>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-incomplete",
      "type": "type",
      "value": "ui-serif | ui-sans-serif | ui-monospace | ui-rounded",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-weight-absolute>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-weight-absolute-values",
      "type": "type",
      "value": "[normal | bold | <number [1,1000]>]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-variant-css2>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-variant-css21-values",
      "type": "type",
      "value": "normal | small-caps",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-width-css3>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-width-css3-values",
      "type": "type",
      "value": "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-src-list>",
      "prose": "To parse a <font-src-list> production, parse a list of <font-src>s.",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-src-list",
      "type": "type",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-src>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-src",
      "type": "type",
      "value": "<url> [ format(<font-format>)]? [ tech( <font-tech>#)]? | local(<family-name>)",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<common-lig-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#common-lig-values",
      "type": "type",
      "value": "[ common-ligatures | no-common-ligatures ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<discretionary-lig-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#discretionary-lig-values",
      "type": "type",
      "value": "[ discretionary-ligatures | no-discretionary-ligatures ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<historical-lig-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#historical-lig-values",
      "type": "type",
      "value": "[ historical-ligatures | no-historical-ligatures ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<contextual-alt-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#contextual-alt-values",
      "type": "type",
      "value": "[ contextual | no-contextual ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<numeric-figure-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#numeric-figure-values",
      "type": "type",
      "value": "[ lining-nums | oldstyle-nums ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<numeric-spacing-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#numeric-spacing-values",
      "type": "type",
      "value": "[ proportional-nums | tabular-nums ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<numeric-fraction-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#numeric-fraction-values",
      "type": "type",
      "value": "[ diagonal-fractions | stacked-fractions ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<feature-value-name>",
      "href": "https://drafts.csswg.org/css-fonts-4/#feature-value-name-value",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<east-asian-variant-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#east-asian-variant-values",
      "type": "type",
      "value": "[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<east-asian-width-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#east-asian-width-values",
      "type": "type",
      "value": "[ full-width | proportional-width ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<opentype-tag>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-opentype-tag",
      "type": "type",
      "value": "<string>",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "for": "font-palette",
      "name": "<palette-identifier>",
      "prose": "This value identifies an CSS-defined palette to use. Users can define a palette by using the @font-palette-values rule. If no applicable @font-palette-values rule is present, this value behaves as normal. <palette-identifier> is parsed as a <dashed-ident>.",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-palette-palette-identifier",
      "type": "type",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "for": "font-palette",
      "name": "<palette-mix()>",
      "prose": "This value defines a position in the interpolation between two palette values, identified by <palette-identifier>, by the palette keywords normal, light, dark, or by another <palette-mix()> value. The glyphs of the font must be rendered with a palette that is created by interpolating for each palette color index between the matching color indices of the first and second palette specified as arguments, recursively resolving <palette-mix()> functions if needed. For each palette color, the interpolation follows the rules of the <color-mix()> function. Percentages are normalized according to CSS Color 5 § 3.1 Percentage Normalization.",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-palette-palette-mix",
      "type": "type",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<type>",
      "href": "https://drafts.csswg.org/css-forms-1/#typedef-type",
      "type": "type",
      "value": "'<' [ number | string ] '>'",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "for": "::picker()",
      "name": "<form-control-identifier>",
      "href": "https://drafts.csswg.org/css-forms-1/#typedef-picker-form-control-identifier",
      "type": "type",
      "value": "select",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "name": "<line-color-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-color-list",
      "type": "type",
      "value": "[ <line-color-or-repeat> ]+",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-line-color-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-line-color-list",
      "type": "type",
      "value": "[ <line-color-or-repeat> ]* <auto-repeat-line-color> [ <line-color-or-repeat> ]*",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-color-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-color-or-repeat",
      "type": "type",
      "value": "[ <color> | <repeat-line-color> ]",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<repeat-line-color>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-repeat-line-color",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <color> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat-line-color>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-repeat-line-color",
      "type": "type",
      "value": "repeat( auto , [ <color> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-style-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-style-list",
      "type": "type",
      "value": "[ <line-style-or-repeat> ]+",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-line-style-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-line-style-list",
      "type": "type",
      "value": "[ <line-style-or-repeat> ]* <auto-repeat-line-style> [ <line-style-or-repeat> ]*",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-style-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-style-or-repeat",
      "type": "type",
      "value": "[ <line-style> | <repeat-line-style> ]",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<repeat-line-style>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-repeat-line-style",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-style> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat-line-style>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-repeat-line-style",
      "type": "type",
      "value": "repeat( auto , [ <line-style> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-width-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-width-list",
      "type": "type",
      "value": "[ <line-width-or-repeat> ]+",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-line-width-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-line-width-list",
      "type": "type",
      "value": "[ <line-width-or-repeat> ]* <auto-repeat-line-width> [ <line-width-or-repeat> ]*",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-width-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-width-or-repeat",
      "type": "type",
      "value": "[ <line-width> | <repeat-line-width> ]",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<repeat-line-width>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-repeat-line-width",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-width> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat-line-width>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-repeat-line-width",
      "type": "type",
      "value": "repeat( auto , [ <line-width> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-rule-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-rule-list",
      "type": "type",
      "value": "<gap-rule-or-repeat>#",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-auto-rule-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-auto-rule-list",
      "type": "type",
      "value": "<gap-rule-or-repeat>#? , <gap-auto-repeat-rule> , <gap-rule-or-repeat>#?",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-rule-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-rule-or-repeat",
      "type": "type",
      "value": "<gap-rule> | <gap-repeat-rule>",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-repeat-rule>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-repeat-rule",
      "type": "type",
      "value": "repeat( <integer [1,∞]> , <gap-rule># )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-auto-repeat-rule>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-auto-repeat-rule",
      "type": "type",
      "value": "repeat( auto , <gap-rule># )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-rule>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-rule",
      "type": "type",
      "value": "<line-width> || <line-style> || <color>",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<content-level>",
      "href": "https://drafts.csswg.org/css-gcpm-4/#typedef-content-level",
      "type": "type",
      "value": "element | content | text | <attr()> | <counter>",
      "spec": {
        "shortname": "css-gcpm-4",
        "currentSpec": false
      }
    },
    {
      "name": "<content-list>",
      "href": "https://drafts.csswg.org/css-gcpm-3/#content-list",
      "type": "type",
      "value": "[ <string> | <counter()> | <counters()> | <content()> | <attr()> ]+",
      "spec": {
        "shortname": "css-gcpm",
        "currentSpec": true
      }
    },
    {
      "name": "<track-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-list",
      "type": "type",
      "value": "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-track-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-auto-track-list",
      "type": "type",
      "value": "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat> [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<explicit-track-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-explicit-track-list",
      "type": "type",
      "value": "[ <line-names>? <track-size> ]+ <line-names>?",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<line-name-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-line-name-list",
      "type": "type",
      "value": "[ <line-names> | <name-repeat> ]+",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<track-size>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-size",
      "type": "type",
      "value": "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( <length-percentage [0,∞]> )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<fixed-size>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-fixed-size",
      "type": "type",
      "value": "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<track-breadth>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-breadth",
      "type": "type",
      "value": "<length-percentage [0,∞]> | <flex [0,∞]> | min-content | max-content | auto",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<inflexible-breadth>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-inflexible-breadth",
      "type": "type",
      "value": "<length-percentage [0,∞]> | min-content | max-content | auto",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<fixed-breadth>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-fixed-breadth",
      "type": "type",
      "value": "<length-percentage [0,∞]>",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<line-names>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-line-names",
      "type": "type",
      "value": "'[' <custom-ident>* ']'",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<track-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-repeat",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-names>? <track-size> ]+ <line-names>? )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-auto-repeat",
      "type": "type",
      "value": "repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<fixed-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-fixed-repeat",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<name-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-name-repeat",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> | auto-fill ], <line-names>+)",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<flex>",
      "prose": "A flexible length or <flex> is a dimension with the fr unit, which represents a fraction of the leftover space in the grid container. Tracks sized with fr units are called flexible tracks as they flex in response to leftover space similar to how flex items with a zero base size fill space in a flex container.",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-flex",
      "type": "type",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-row-start",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-column-start",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-row-end",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-column-end",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<image>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-image",
      "type": "type",
      "value": "<url> | <gradient>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<image-set-option>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-set-option",
      "type": "type",
      "value": "[ <image> | <string> ] [ <resolution> || type(<string>) ]?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<image-tags>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-tags",
      "type": "type",
      "value": "[ ltr | rtl ]",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<image-src>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-src",
      "type": "type",
      "value": "[ <url> | <string> ]",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<cf-image>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-cf-image",
      "type": "type",
      "value": "[ <image> | <color> ] && <percentage [0,100]>?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<gradient>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-gradient",
      "type": "type",
      "value": "<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-gradient-syntax>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-linear-gradient-syntax",
      "type": "type",
      "value": "[ <angle> | <zero> | to <side-or-corner> ]? , <color-stop-list>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<side-or-corner>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-side-or-corner",
      "type": "type",
      "value": "[left | right] || [top | bottom]",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<radial-gradient-syntax>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-gradient-syntax",
      "type": "type",
      "value": "[ <radial-shape> || <radial-size> ]? [ at <position> ]? , <color-stop-list>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<conic-gradient-syntax>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-conic-gradient-syntax",
      "type": "type",
      "value": "[ [ [ from [ <angle> | <zero> ] ]? [ at <position> ]? ] || <color-interpolation-method> ]? , <angular-color-stop-list>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stop-list>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-color-stop-list",
      "type": "type",
      "value": "<linear-color-stop> , [ <linear-color-hint>? , <linear-color-stop> ]#?",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-color-stop>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-linear-color-stop",
      "type": "type",
      "value": "<color> <length-percentage>?",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-color-hint>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-linear-color-hint",
      "type": "type",
      "value": "<length-percentage>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<color-stop-length>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stop-length",
      "type": "type",
      "value": "<length-percentage>{1,2}",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<angular-color-stop-list>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-angular-color-stop-list",
      "type": "type",
      "value": "<angular-color-stop> , [ <angular-color-hint>? , <angular-color-stop> ]#?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<angular-color-stop>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-angular-color-stop",
      "type": "type",
      "value": "<color> <color-stop-angle>?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<angular-color-hint>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-angular-color-hint",
      "type": "type",
      "value": "<angle-percentage> | <zero>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stop-angle>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stop-angle",
      "type": "type",
      "value": "[ <angle-percentage> | <zero> ]{1,2}",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stop>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stop",
      "type": "type",
      "value": "<color-stop-length> | <color-stop-angle>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<image-1D>",
      "prose": "While <image> values represent a 2-dimensional (2D) image, and <color> can be thought of as a 0-dimensional (0D) image (unvarying in either axis), some contexts require a 1-dimensional (1D) image, which specifies colors along an abstract, directionless, single-axis paint line. The <image-1D> type represents such 1D images, including the stripes() functional notation:",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-1d",
      "type": "type",
      "value": "<stripes()>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stripe>",
      "prose": "Each <color-stripe> entry defines a solid-color stripe with the specified <color> and thickness. If the thickness is omitted, it defaults to 1fr. Thickness values are interpreted as follows:",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stripe",
      "type": "type",
      "value": "<color> && [ <length-percentage> | <flex> ]?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<radial-size>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-size",
      "type": "type",
      "value": "<radial-extent> | <length [0,∞]> | <length-percentage [0,∞]>{2}",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<radial-extent>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-extent",
      "type": "type",
      "value": "closest-corner | closest-side | farthest-corner | farthest-side",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<radial-shape>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-shape",
      "type": "type",
      "value": "circle | ellipse",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<text-edge>",
      "prose": "The <text-edge> value, which identifies specific font metrics, expands to",
      "href": "https://drafts.csswg.org/css-inline-3/#typedef-text-edge",
      "type": "type",
      "value": "[ text | ideographic | ideographic-ink ] | [ text | ideographic | ideographic-ink | cap | ex ] [ text | ideographic | ideographic-ink | alphabetic ]",
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "<link-param>",
      "href": "https://drafts.csswg.org/css-link-params-1/#typedef-link-param",
      "type": "type",
      "value": "param( <custom-property-name> <declaration-value>? )",
      "spec": {
        "shortname": "css-link-params",
        "currentSpec": true
      }
    },
    {
      "name": "<counter-name>",
      "prose": "Counters are referred to in CSS syntax using the <counter-name> type, which represents their name as a <custom-ident>. A <counter-name> name cannot match the keyword none; such an identifier is invalid as a <counter-name>.",
      "href": "https://drafts.csswg.org/css-lists-3/#typedef-counter-name",
      "type": "type",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "<reversed-counter-name>",
      "href": "https://drafts.csswg.org/css-lists-3/#typedef-reversed-counter-name",
      "type": "type",
      "value": "reversed( <counter-name> )",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "<counter>",
      "href": "https://drafts.csswg.org/css-lists-3/#typedef-counter",
      "type": "type",
      "value": "<counter()> | <counters()>",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "<clip-source>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-clip-source",
      "type": "type",
      "value": "<url>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<geometry-box>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-geometry-box",
      "type": "type",
      "value": "<shape-box> | fill-box | stroke-box | view-box",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<mask-reference>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-mask-reference",
      "type": "type",
      "value": "none | <image> | <mask-source>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<mask-source>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-mask-source",
      "type": "type",
      "value": "<url>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<masking-mode>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-masking-mode",
      "type": "type",
      "value": "alpha | luminance | match-source",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<compositing-operator>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-compositing-operator",
      "type": "type",
      "value": "add | subtract | intersect | exclude",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<mask-layer>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-mask-layer",
      "type": "type",
      "value": "<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<function-parameter>",
      "href": "https://drafts.csswg.org/css-mixins-1/#typedef-function-parameter",
      "type": "type",
      "value": "<custom-property-name> <css-type>? [ : <declaration-value> ]?",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      }
    },
    {
      "name": "<css-type>",
      "href": "https://drafts.csswg.org/css-mixins-1/#typedef-css-type",
      "type": "type",
      "value": "<syntax-component> | <type()>",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      }
    },
    {
      "name": "<dashed-function>",
      "prose": "A <dashed-function> is a functional notation whose function name starts with two dashes (U+002D HYPHEN-MINUS). Its argument grammar is:",
      "href": "https://drafts.csswg.org/css-mixins-1/#typedef-dashed-function",
      "type": "type",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<namespace-prefix>",
      "href": "https://drafts.csswg.org/css-namespaces-3/#typedef-namespace-prefix",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "css-namespaces",
        "currentSpec": true
      }
    },
    {
      "name": "<scroll-button-direction>",
      "prose": "The four ::scroll-button() pseudo-elements are individually selected by the selector’s argument. A * arguments selects all four ::scroll-button()s; otherwise the selected pseudo-element is determined by the <scroll-button-direction> value:",
      "href": "https://drafts.csswg.org/css-overflow-5/#typedef-scroll-button-direction",
      "type": "type",
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      }
    },
    {
      "name": "<page-selector-list>",
      "href": "https://drafts.csswg.org/css-page-3/#typedef-page-selector-list",
      "type": "type",
      "value": "<page-selector>#",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "<page-selector>",
      "href": "https://drafts.csswg.org/css-page-3/#typedef-page-selector",
      "type": "type",
      "value": "[ <ident-token>? <pseudo-page>* ]!",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-page>",
      "href": "https://drafts.csswg.org/css-page-3/#typedef-pseudo-page",
      "type": "type",
      "value": ": [ left | right | first | blank ]",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "<shape-command>",
      "prose": "The sequence of <shape-command>s represent further path data commands. Each command’s starting point is the previous command’s ending point.",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-command",
      "type": "type",
      "value": "<move-command> | <line-command> | close | <horizontal-line-command> | <vertical-line-command> | <curve-command> | <smooth-command> | <arc-command>",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<coordinate-pair>",
      "value": "<length-percentage>{2}",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-coordinate-pair",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<command-end-point>",
      "value": "[ to <position> | by <coordinate-pair> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-command-end-point",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<move-command>",
      "value": "move <command-end-point>",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-move-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<line-command>",
      "value": "line <command-end-point>",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-line-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<horizontal-line-command>",
      "value": "hline [ to [ <length-percentage> | left | center | right | x-start | x-end ] | by <length-percentage> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-horizontal-line-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<vertical-line-command>",
      "value": "vline [ to [ <length-percentage> | top | center | bottom | y-start | y-end ] | by <length-percentage> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-vertical-line-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<curve-command>",
      "value": "curve [ [ to <position> with <control-point> [ / <control-point> ]? ] | [ by <coordinate-pair> with <relative-control-point> [ / <relative-control-point> ]? ] ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-curve-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<smooth-command>",
      "value": "smooth [ [ to <position> [ with <control-point> ]? ] | [ by <coordinate-pair> [ with <relative-control-point> ]? ] ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-smooth-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<control-point>",
      "value": "[ <position> | <relative-control-point> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-control-point",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<relative-control-point>",
      "value": "<coordinate-pair> [ from [ start | end | origin ] ]?",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-relative-control-point",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<arc-command>",
      "value": "arc <command-end-point> [ [ of <length-percentage>{1,2} ] && <arc-sweep>? && <arc-size>? && [rotate <angle>]? ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-arc-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<arc-sweep>",
      "prose": "<arc-sweep> can be cw or ccw, indicating that the arc that is traced around the ellipse clockwise or counter-clockwise from the center, respectively, must be chosen. If omitted, this defaults to ccw.",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-arc-sweep",
      "type": "type",
      "value": "cw | ccw",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<arc-size>",
      "prose": "<arc-size> can be large or small, indicating that the larger or smaller, respectively, of the two possible arcs must be chosen. If omitted, this defaults to small.",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-arc-size",
      "type": "type",
      "value": "large | small",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "name": "<basic-shape>",
      "prose": "The <basic-shape> type can be specified using basic shape functions. When using this syntax to define shapes, the reference box is defined by each property that uses <basic-shape> values. The coordinate system for the shape has its origin on the top-left corner of the reference box with the x-axis running to the right and the y-axis running downwards. All the lengths expressed in percentages are resolved from the used dimensions of the reference box.",
      "href": "https://drafts.csswg.org/css-shapes-1/#typedef-basic-shape",
      "type": "type",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "<basic-shape-rect>",
      "href": "https://drafts.csswg.org/css-shapes-1/#typedef-basic-shape-rect",
      "type": "type",
      "value": "<inset()> | <rect()> | <xywh()>",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "<shape-box>",
      "href": "https://drafts.csswg.org/css-shapes-1/#typedef-shape-box",
      "type": "type",
      "value": "<visual-box> | margin-box",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-voice>",
      "value": "[<age>? <gender> <integer>?]",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-generic-voice",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-volume",
      "name": "<decibel>",
      "prose": "The <decibel> type denotes a dimension with a \"dB\" (decibel unit) unit identifier. Decibels represent the ratio of the squares of the new signal amplitude a1 and the current amplitude a0, as per the following logarithmic equation: volume(dB) = 20 × log10(a1 / a0).",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-volume-decibel",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-family",
      "name": "<age>",
      "prose": "Possible values are child, young and old, indicating the preferred age category to match during voice selection.",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-family-age",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-family",
      "name": "<gender>",
      "prose": "One of the keywords male, female, or neutral, specifying a male, female, or neutral voice, respectively.",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-family-gender",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-pitch",
      "name": "<semitones>",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-pitch-semitones",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "<ident-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ident-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<function-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-function-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<at-keyword-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-at-keyword-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<hash-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-hash-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<string-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-string-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<bad-string-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-bad-string-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<url-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-url-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<bad-url-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-bad-url-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<delim-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-delim-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<number-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-number-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<percentage-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-percentage-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<dimension-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-dimension-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<unicode-range-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-unicode-range-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<whitespace-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-whitespace-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<CDO-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-cdo-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<CDC-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-cdc-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<colon-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-colon-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<semicolon-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-semicolon-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<comma-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-comma-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<[-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-open-square",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<]-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-close-square",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<(-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-open-paren",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<)-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-close-paren",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<{-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-open-curly",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<}-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-close-curly",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<eof-token>",
      "prose": "An <eof-token> is a conceptual token, not actually produced by the tokenizer, used to indicate that the token stream has been exhausted.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-eof-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<an+b>",
      "href": "https://drafts.csswg.org/css-syntax-3/#anb-production",
      "type": "type",
      "value": "odd | even | <integer> | <n-dimension> | '+'? n | -n | <ndashdigit-dimension> | '+'? <ndashdigit-ident> | <dashndashdigit-ident> | <n-dimension> <signed-integer> | '+'? n <signed-integer> | -n <signed-integer> | <ndash-dimension> <signless-integer> | '+'? n- <signless-integer> | -n- <signless-integer> | <n-dimension> ['+' | '-'] <signless-integer> | '+'? n ['+' | '-'] <signless-integer> | -n ['+' | '-'] <signless-integer>",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<n-dimension>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-n-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<ndash-dimension>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ndash-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<ndashdigit-dimension>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ndashdigit-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<ndashdigit-ident>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ndashdigit-ident",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<dashndashdigit-ident>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-dashndashdigit-ident",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<signed-integer>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-signed-integer",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<signless-integer>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-signless-integer",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<block-contents>",
      "prose": "When writing a rule grammar, <block-contents> represents this agnostic parsing. It must only be used as the sole value in a block, and represents that no restrictions are implicitly placed on what the block can contain.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-block-contents",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<declaration-list>",
      "prose": "<declaration-list>: only declarations are allowed; at-rules and qualified rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-declaration-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<qualified-rule-list>",
      "prose": "<qualified-rule-list>: only qualified rules are allowed; declarations and at-rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-qualified-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<at-rule-list>",
      "prose": "<at-rule-list>: only at-rules are allowed; declarations and qualified rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-at-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<declaration-rule-list>",
      "prose": "<declaration-rule-list>: declarations and at-rules are allowed; qualified rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-declaration-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<rule-list>",
      "prose": "<rule-list>: qualified rules and at-rules are allowed; declarations are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<declaration-value>",
      "prose": "The <declaration-value> production matches any sequence of one or more tokens, so long as the sequence does not contain <bad-string-token>, <bad-url-token>, unmatched <)-token>, <]-token>, or <}-token>, or top-level <semicolon-token> tokens or <delim-token> tokens with a value of \"!\". It represents the entirety of what a valid declaration can have as its value.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<any-value>",
      "prose": "The <any-value> production is identical to <declaration-value>, but also allows top-level <semicolon-token> tokens and <delim-token> tokens with a value of \"!\". It represents the entirety of what valid CSS can be in any context.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-any-value",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<autospace>",
      "href": "https://drafts.csswg.org/css-text-4/#typedef-autospace",
      "type": "type",
      "value": "no-autospace | [ ideograph-alpha || ideograph-numeric || punctuation ] || [ insert | replace ]",
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "<spacing-trim>",
      "href": "https://drafts.csswg.org/css-text-4/#typedef-spacing-trim",
      "type": "type",
      "value": "space-all | normal | space-first | trim-start | trim-both | trim-all",
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "<transform-function>",
      "prose": "The value of the transform property is a list of <transform-function>. The set of allowed transform functions is given below. In the following functions, a <zero> behaves the same as 0deg (\"unitless 0\" angles are preserved for legacy compat). A percentage for horizontal translations is relative to the width of the reference box. A percentage for vertical translations is relative to the height of the reference box.",
      "href": "https://drafts.csswg.org/css-transforms-1/#typedef-transform-function",
      "type": "type",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "name": "<transform-list>",
      "href": "https://drafts.csswg.org/css-transforms-1/#typedef-transform-list",
      "type": "type",
      "value": "<transform-function>+",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "name": "<transition-behavior-value>",
      "value": "normal | allow-discrete",
      "href": "https://drafts.csswg.org/css-transitions-2/#typedef-transition-behavior-value",
      "type": "type",
      "spec": {
        "shortname": "css-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-transition>",
      "value": "[ none | <single-transition-property> ] || <time> || <easing-function> || <time>",
      "href": "https://drafts.csswg.org/css-transitions-1/#single-transition",
      "type": "type",
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "<single-transition-property>",
      "value": "all | <custom-ident>",
      "href": "https://drafts.csswg.org/css-transitions-1/#single-transition-property",
      "type": "type",
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "<outline-line-style>",
      "prose": "<outline-line-style> accepts the same values as <line-style> (CSS Backgrounds 3 § 3.2 Line Patterns: the border-style properties) with the same meaning, except that hidden is not a legal outline style. In addition, the outline-style property accepts the value auto.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-outline-line-style",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "<id>",
      "prose": "The <id> value is an ID selector [SELECT]. In response to directional navigation input corresponding to the property, the focus is navigated to the first element in tree order matching the selector. If this refers to the currently focused element, the directional navigation input respective to the nav- property is ignored — there is no need to refocus the same element. If no element matches the selector, the user agent automatically determines which element to navigate the focus to. If the focus is navigated to an element that was not otherwise focusable, it becomes focusable only as the result of this directional navigation, and the :focus pseudo-class matches the element while it is focused as such.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-id",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "<target-name>",
      "prose": "The <target-name> parameter indicates the target frame for the focus navigation. It is a <string> and it MUST NOT start with the underscore \"_\" character. Error handling: if it does start with an underscore, \"_parent\" navigates to the parent frame, \"_root\" is treated as root, and other values navigate to a frame by that name if it exists. If the specified target frame does not exist, the parameter will be treated as the keyword current, which means to simply use the frame that the element is in. The keyword root indicates that the user agent should target the full window.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-target-name",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "for": "cursor",
      "name": "<url-set>",
      "prose": "<url-set> is a limited version of image-set(), where the <image> sub-production is restricted to <url> only.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-cursor-url-set",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "for": "appearance",
      "name": "<compat-auto>",
      "value": "searchfield | textarea | checkbox | radio | menulist | listbox | meter | progress-bar | button",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-appearance-compat-auto",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "for": "appearance",
      "name": "<compat-special>",
      "value": "textfield | menulist-button",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-appearance-compat-special",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "<boolean-expr>",
      "prose": "Several contexts (such as @media, @supports, if(), ...) specify conditions, and allow combining those conditions with boolean logic (and/or/not/grouping). Because they use the same non-trivial recursive syntax structure, the special <boolean-expr> production represents this pattern generically.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-boolean-expr",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<syntax>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax",
      "type": "type",
      "value": "'*' | <syntax-component> [ <syntax-combinator> <syntax-component> ]* | <syntax-string>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-component>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-component",
      "type": "type",
      "value": "<syntax-single-component> <syntax-multiplier>? | '<' transform-list '>'",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-single-component>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-single-component",
      "type": "type",
      "value": "'<' <syntax-type-name> '>' | <ident>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-type-name>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-type-name",
      "type": "type",
      "value": "angle | color | custom-ident | image | integer | length | length-percentage | number | percentage | resolution | string | time | url | transform-function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-combinator>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-combinator",
      "type": "type",
      "value": "'|'",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-multiplier>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-multiplier",
      "type": "type",
      "value": "[ '#' | '+' ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-string>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-string",
      "type": "type",
      "value": "<string>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<request-url-modifier>",
      "prose": "<request-url-modifier>s are <url-modifier>s that affect the <url>’s resource request by applying associated URL request modifier steps. See CSS Values 4 § 4.5.4 URL Processing Model.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier",
      "type": "type",
      "value": "<crossorigin-modifier> | <integrity-modifier> | <referrerpolicy-modifier>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<position>",
      "prose": "The <position> value specifies the position of a object area (e.g. background image) inside a positioning area (e.g. background positioning area). It is computed and interpreted as specified for background-position. [CSS3-BACKGROUND]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-position",
      "type": "type",
      "value": "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right ] && [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<position-one>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-position-one",
      "type": "type",
      "value": "[ left | center | right | top | bottom | x-start | x-end | y-start | y-end | block-start | block-end | inline-start | inline-end | <length-percentage> ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<position-two>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-position-two",
      "type": "type",
      "value": "[ [ left | center | right | x-start | x-end ] && [ top | center | bottom | y-start | y-end ] | [ left | center | right | x-start | x-end | <length-percentage> ] [ top | center | bottom | y-start | y-end | <length-percentage> ] | [ block-start | center | block-end ] && [ inline-start | center | inline-end ] | [ start | center | end ]{2} ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<position-four>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-position-four",
      "type": "type",
      "value": "[ [ [ left | right | x-start | x-end ] <length-percentage> ] && [ [ top | bottom | y-start | y-end ] <length-percentage> ] | [ [ block-start | block-end ] <length-percentage> ] && [ [ inline-start | inline-end ] <length-percentage> ] | [ [ start | end ] <length-percentage> ]{2} ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<progress>",
      "prose": "The <progress> value type represents the mix progress value in a mix notation, and ultimately resolves to a percentage. It can, however, draw that percentage value from sources such as media queries and animation timelines, and can also convert it through an easing function before using it for interpolation.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-progress",
      "type": "type",
      "value": "[ <percentage-token> | <number> | <'animation-timeline'> ] && [ by <easing-function> ]?",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-branch>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-branch",
      "type": "type",
      "value": "<if-condition> : <declaration-value>?",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-condition>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-condition",
      "type": "type",
      "value": "<boolean-expr[ <if-test> ]> | else",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-test>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-test",
      "type": "type",
      "value": "supports( [ <ident> : <declaration-value> ] | <supports-condition> ) | media( <media-feature> | <media-condition> ) | style( <style-query> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-args",
      "type": "type",
      "value": "if( [ <if-args-branch> ; ]* <if-args-branch> ;? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<if-args-branch>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-args-branch",
      "type": "type",
      "value": "<declaration-value> : <declaration-value>?",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<inherit-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-inherit-args",
      "type": "type",
      "value": "inherit( <declaration-value>, <declaration-value>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<attr-name>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-name",
      "type": "type",
      "value": "[ <ident-token>? '|' ]? <ident-token>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<attr-type>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-type",
      "type": "type",
      "value": "type( <syntax> ) | raw-string | <attr-unit>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<attr-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-args",
      "type": "type",
      "value": "attr( <declaration-value>, <declaration-value>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<attr-unit>",
      "prose": "The <attr-unit> production matches any identifier that is an ASCII case-insensitive match for the name of a CSS dimension unit, such as px, or the <delim-token> %. It is not expanded literally here, as the set of units expands over time.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-unit",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<ident-arg>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-ident-arg",
      "type": "type",
      "value": "<string> | <integer> | <ident>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<random-value-sharing>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-random-value-sharing",
      "type": "type",
      "value": "[ [ auto | <dashed-ident> ] || element-shared ] | fixed <number [0,1]>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<random-item-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-random-item-args",
      "type": "type",
      "value": "random-item( <declaration-value>, [ <declaration-value>? ]# )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<calc-size-basis>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-calc-size-basis",
      "type": "type",
      "value": "[ <intrinsic-size-keyword> | <calc-size()> | any | <calc-sum> ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<intrinsic-size-keyword>",
      "prose": "The <intrinsic-size-keyword> production matches any intrinsic size keywords allowed in the context. For example, in width, it matches auto, min-content, stretch, etc.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-intrinsic-size-keyword",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "<crossorigin-modifier>",
      "value": "crossorigin(anonymous | use-credentials)",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier-crossorigin-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "<integrity-modifier>",
      "value": "integrity(<string>)",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier-integrity-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "<referrerpolicy-modifier>",
      "value": "referrerpolicy(no-referrer | no-referrer-when-downgrade | same-origin | origin | strict-origin | origin-when-cross-origin | strict-origin-when-cross-origin | unsafe-url)",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier-referrerpolicy-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<ident>",
      "prose": "CSS identifiers, generically denoted by <ident>, consist of a sequence of characters conforming to the <ident-token> grammar. [CSS-SYNTAX-3] Identifiers cannot be quoted; otherwise they would be interpreted as strings. CSS properties accept two classes of identifiers: pre-defined keywords and author-defined identifiers.",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-ident",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-ident>",
      "prose": "Some properties accept arbitrary author-defined identifiers as a component value. This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier that would not be misinterpreted as a pre-defined keyword in that property’s value definition. Such identifiers are fully case-sensitive (meaning they’re compared using the \"identical to\" operation), even in the ASCII range (e.g. example and EXAMPLE are two different, unrelated user-defined identifiers).",
      "href": "https://drafts.csswg.org/css-values-4/#identifier-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<dashed-ident>",
      "prose": "The <dashed-ident> production is a <custom-ident>, with all the case-sensitivity that implies, with the additional restriction that it must start with two dashes (U+002D HYPHEN-MINUS).",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-dashed-ident",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<string>",
      "prose": "Strings are denoted by <string>. When written literally, they consist of a sequence of characters delimited by double quotes or single quotes, corresponding to the <string-token> production in the CSS Syntax Module [CSS-SYNTAX-3].",
      "href": "https://drafts.csswg.org/css-values-4/#string-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<url>",
      "href": "https://drafts.csswg.org/css-values-4/#url-value",
      "type": "type",
      "value": "<url()> | <src()>",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<url-modifier>",
      "prose": "<url>s support specifying additional <url-modifier>s, which change the meaning or the interpretation of the URL somehow. A <url-modifier> is either an <ident> or a functional notation.",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-url-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<integer>",
      "prose": "Integer values are denoted by <integer>.",
      "href": "https://drafts.csswg.org/css-values-4/#integer-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<number>",
      "prose": "Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.",
      "href": "https://drafts.csswg.org/css-values-4/#number-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<zero>",
      "prose": "The value <zero> represents a literal number with the value 0. Expressions that merely evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>; only literal <number-token>s do.",
      "href": "https://drafts.csswg.org/css-values-4/#zero-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<dimension>",
      "prose": "The general term dimension refers to a number with a unit attached to it; and is denoted by <dimension>.",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<percentage>",
      "prose": "Percentage values are denoted by <percentage>, and indicates a value that is some fraction of another reference value.",
      "href": "https://drafts.csswg.org/css-values-4/#percentage-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<length-percentage>",
      "value": "[ <length> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-length-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<frequency-percentage>",
      "value": "[ <frequency> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-frequency-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<angle-percentage>",
      "value": "[ <angle> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-angle-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<time-percentage>",
      "value": "[ <time> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-time-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<ratio>",
      "prose": "Ratio values are denoted by <ratio>, and represent the ratio of two numeric values. It most often represents an aspect ratio, relating a width (first) to a height (second).",
      "href": "https://drafts.csswg.org/css-values-4/#ratio-value",
      "type": "type",
      "value": "<number [0,∞]> [ / <number [0,∞]> ]?",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<length>",
      "prose": "Lengths refer to distance measurements and are denoted by <length> in the property definitions. A length is a dimension.",
      "href": "https://drafts.csswg.org/css-values-4/#length-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<angle>",
      "prose": "Angle values are <dimension>s denoted by <angle>. The angle unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#angle-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<time>",
      "prose": "Time values are dimensions denoted by <time>. The time unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#time-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<frequency>",
      "prose": "Frequency values are dimensions denoted by <frequency>. The frequency unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#frequency-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<resolution>",
      "prose": "Resolution units are dimensions denoted by <resolution>. The resolution unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#resolution-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<rounding-strategy>",
      "prose": "If A is exactly equal to an integer multiple of B, round() resolves to A exactly (preserving whether A is 0⁻ or 0⁺, if relevant). Otherwise, there are two integer multiples of B that are potentially \"closest\" to A, lower B which is closer to −∞ and upper B which is closer to +∞. The following <rounding-strategy>s dictate how to choose between them:",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-rounding-strategy",
      "type": "type",
      "value": "nearest | up | down | to-zero",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-sum>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-sum",
      "type": "type",
      "value": "<calc-product> [ [ '+' | '-' ] <calc-product> ]*",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-product>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-product",
      "type": "type",
      "value": "<calc-value> [ [ '*' | / ] <calc-value> ]*",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-value>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-value",
      "type": "type",
      "value": "<number> | <dimension> | <percentage> | <calc-keyword> | ( <calc-sum> )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-keyword>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-keyword",
      "type": "type",
      "value": "e | pi | infinity | -infinity | NaN",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<quirky-length>",
      "prose": "When CSS is being parsed in quirks mode, <quirky-length> is a type of <length> that is only valid in certain properties:",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-quirky-length",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<custom-property-name>",
      "prose": "A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo. The <custom-property-name> production corresponds to this: it’s defined as any <dashed-ident> (a valid identifier that starts with two dashes), except -- itself, which is reserved for future use by CSS. Custom properties are solely for use by authors and users; CSS will never give them a meaning beyond what is presented here.",
      "href": "https://drafts.csswg.org/css-variables-2/#typedef-custom-property-name",
      "type": "type",
      "spec": {
        "shortname": "css-variables",
        "currentSpec": true
      }
    },
    {
      "name": "<var-args>",
      "href": "https://drafts.csswg.org/css-variables-2/#typedef-var-args",
      "type": "type",
      "value": "var( <declaration-value> , <declaration-value>? )",
      "spec": {
        "shortname": "css-variables",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<pt-name-and-class-selector>",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#typedef-pt-name-and-class-selector",
      "type": "type",
      "value": "<pt-name-selector> <pt-class-selector>? | <pt-class-selector>",
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<pt-class-selector>",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#typedef-pt-class-selector",
      "type": "type",
      "value": "['.' <custom-ident>]+",
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "<pt-name-selector>",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#typedef-pt-name-selector",
      "type": "type",
      "value": "'*' | <custom-ident>",
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "<animateable-feature>",
      "href": "https://drafts.csswg.org/css-will-change-1/#typedef-animateable-feature",
      "type": "type",
      "value": "scroll-position | contents | <custom-ident>",
      "spec": {
        "shortname": "css-will-change",
        "currentSpec": true
      }
    },
    {
      "name": "<identifier>",
      "href": "https://drafts.csswg.org/css2/#value-def-identifier",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<uri>",
      "prose": "URI values (Uniform Resource Identifiers, see [RFC3986], which includes URLs, URNs, etc) in this specification are denoted by <uri>. The functional notation used to designate URIs in property values is \"url()\", as in:",
      "href": "https://drafts.csswg.org/css2/#value-def-uri",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<margin-width>",
      "prose": "The properties defined in this section refer to the <margin-width> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-margin-width",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<padding-width>",
      "prose": "The properties defined in this section refer to the <padding-width> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-padding-width",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<border-width>",
      "prose": "The border width properties specify the width of the border area. The properties defined in this section refer to the <border-width> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-border-width",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<border-style>",
      "prose": "The border style properties specify the line style of a box’s border (solid, double, dashed, etc.). The properties defined in this section refer to the <border-style> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-border-style",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<shape>",
      "prose": "In CSS 2, the only valid <shape> value is: rect(<top>, <right>, <bottom>, <left>) where <top> and <bottom> specify offsets from the top border edge of the box, and <right>, and <left> specify offsets from the left border edge of the box. Authors should separate offset values with commas. User agents must support separation with commas, but may also support separation without commas (but not a combination), because a previous revision of this specification was ambiguous in this respect. <top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box). When coordinates are rounded to pixel coordinates, care should be taken that no pixels remain visible when <left> and <right> have the same value (or <top> and <bottom> have the same value), and conversely that no pixels within the element’s border box remain hidden when these values are auto.",
      "href": "https://drafts.csswg.org/css2/#value-def-shape",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<top>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-top",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<right>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-right",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<bottom>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-bottom",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<left>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-left",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<absolute-size>",
      "href": "https://drafts.csswg.org/css2/#value-def-absolute-size",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<relative-size>",
      "href": "https://drafts.csswg.org/css2/#value-def-relative-size",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<paint>",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#typedef-paint",
      "type": "type",
      "value": "none | <image> | <svg-paint>",
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "<svg-paint>",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#typedef-svg-paint",
      "type": "type",
      "value": "child | child( <integer> )",
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "<filter-value-list>",
      "href": "https://drafts.fxtf.org/filter-effects-1/#typedef-filter-value-list",
      "type": "type",
      "value": "[ <filter-function> | <url> ]+",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "<filter-function>",
      "href": "https://drafts.fxtf.org/filter-effects-1/#typedef-filter-function",
      "type": "type",
      "value": "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "<number-optional-number>",
      "value": "<number> <number>?",
      "href": "https://drafts.fxtf.org/filter-effects-1/#typedef-number-optional-number",
      "type": "type",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<source-size-list>",
      "href": "https://html.spec.whatwg.org/multipage/images.html#source-size-list",
      "type": "type",
      "value": "<source-size>#? , <source-size-value>",
      "spec": {
        "shortname": "html",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<source-size>",
      "href": "https://html.spec.whatwg.org/multipage/images.html#source-size",
      "type": "type",
      "value": "<media-condition> <source-size-value> | auto",
      "spec": {
        "shortname": "html",
        "currentSpec": true
      }
    },
    {
      "name": "<source-size-value>",
      "href": "https://html.spec.whatwg.org/multipage/images.html#source-size-value",
      "type": "type",
      "value": "<length> | auto",
      "spec": {
        "shortname": "html",
        "currentSpec": true
      }
    },
    {
      "name": "<media-query-list>",
      "prose": "To parse a <media-query-list> production, parse a comma-separated list of component values, then parse each entry in the returned list as a <media-query>. Its value is the list of <media-query>s so produced.",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-query-list",
      "type": "type",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-query>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-query",
      "type": "type",
      "value": "<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<media-type>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-type",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-condition>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-condition",
      "type": "type",
      "value": "<media-not> | <media-in-parens> [ <media-and>* | <media-or>* ]",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-condition-without-or>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-condition-without-or",
      "type": "type",
      "value": "<media-not> | <media-in-parens> <media-and>*",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-not>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-not",
      "type": "type",
      "value": "not <media-in-parens>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-and>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-and",
      "type": "type",
      "value": "and <media-in-parens>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-or>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-or",
      "type": "type",
      "value": "or <media-in-parens>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-in-parens>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-in-parens",
      "type": "type",
      "value": "( <media-condition> ) | ( <media-feature> ) | <general-enclosed>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-feature>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-feature",
      "type": "type",
      "value": "[ <mf-plain> | <mf-boolean> | <mf-range> ]",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-plain>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-plain",
      "type": "type",
      "value": "<mf-name> : <mf-value>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-boolean>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-boolean",
      "type": "type",
      "value": "<mf-name>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-range>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-range",
      "type": "type",
      "value": "<mf-name> <mf-comparison> <mf-value> | <mf-value> <mf-comparison> <mf-name> | <mf-value> <mf-lt> <mf-name> <mf-lt> <mf-value> | <mf-value> <mf-gt> <mf-name> <mf-gt> <mf-value>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-name>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-name",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-value>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-value",
      "type": "type",
      "value": "<number> | <dimension> | <ident> | <ratio>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-lt>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-lt",
      "type": "type",
      "value": "'<' '='?",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-gt>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-gt",
      "type": "type",
      "value": "'>' '='?",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-eq>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-eq",
      "type": "type",
      "value": "'='",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-comparison>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-comparison",
      "type": "type",
      "value": "<mf-lt> | <mf-gt> | <mf-eq>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<general-enclosed>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-general-enclosed",
      "type": "type",
      "value": "[ <function-token> <any-value>? ) ] | [ ( <any-value>? ) ]",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mq-boolean>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mq-boolean",
      "type": "type",
      "value": "<integer [0,1]>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<offset-path>",
      "href": "https://drafts.fxtf.org/motion-1/#typedef-offset-path",
      "type": "type",
      "value": "<ray()> | <url> | <basic-shape>",
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "<ray-size>",
      "href": "https://drafts.fxtf.org/motion-1/#typedef-ray-size",
      "type": "type",
      "value": "closest-side | closest-corner | farthest-side | farthest-corner | sides",
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "<axis>",
      "href": "https://drafts.csswg.org/scroll-animations-1/#typedef-axis",
      "type": "type",
      "value": "block | inline | x | y",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<scroller>",
      "href": "https://drafts.csswg.org/scroll-animations-1/#typedef-scroller",
      "type": "type",
      "value": "root | nearest | self",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<timeline-range-name>",
      "prose": "A named timeline range is a named segment of an animation timeline. The start of the segment is represented as 0% progress through the range; the end of the segment is represented as 100% progress through the range. Multiple named timeline ranges can be associated with a given timeline, and multiple such ranges can overlap. For example, the contain range of a view progress timeline overlaps with its cover range. Named timeline ranges are represented by the <timeline-range-name> value type, which indicates a CSS identifier representing one of the predefined named timeline ranges.",
      "href": "https://drafts.csswg.org/scroll-animations-1/#typedef-timeline-range-name",
      "type": "type",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-selector-list",
      "type": "type",
      "value": "<complex-selector-list>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-selector-list",
      "type": "type",
      "value": "<complex-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-real-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-real-selector-list",
      "type": "type",
      "value": "<complex-real-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<compound-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-compound-selector-list",
      "type": "type",
      "value": "<compound-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<simple-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-simple-selector-list",
      "type": "type",
      "value": "<simple-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<relative-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-selector-list",
      "type": "type",
      "value": "<relative-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<relative-real-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-real-selector-list",
      "type": "type",
      "value": "<relative-real-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<complex-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-selector",
      "type": "type",
      "value": "<complex-selector-unit> [ <combinator>? <complex-selector-unit> ]*",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-selector-unit>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-selector-unit",
      "type": "type",
      "value": "[ <compound-selector>? <pseudo-compound-selector>* ]!",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-real-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-real-selector",
      "type": "type",
      "value": "<compound-selector> [ <combinator>? <compound-selector> ]*",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<relative-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-selector",
      "type": "type",
      "value": "<combinator>? <complex-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<relative-real-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-real-selector",
      "type": "type",
      "value": "<combinator>? <complex-real-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<compound-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-compound-selector",
      "type": "type",
      "value": "[ <type-selector>? <subclass-selector>* ]!",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-compound-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-pseudo-compound-selector",
      "type": "type",
      "value": "<pseudo-element-selector> <pseudo-class-selector>*",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<simple-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-simple-selector",
      "type": "type",
      "value": "<type-selector> | <subclass-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<combinator>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-combinator",
      "type": "type",
      "value": "'>' | '+' | '~' | [ '|' '|' ]",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<wq-name>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-wq-name",
      "type": "type",
      "value": "<ns-prefix>? <ident-token>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<ns-prefix>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-ns-prefix",
      "type": "type",
      "value": "[ <ident-token> | '*' ]? '|'",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<type-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-type-selector",
      "type": "type",
      "value": "<wq-name> | <ns-prefix>? '*'",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<subclass-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-subclass-selector",
      "type": "type",
      "value": "<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<id-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-id-selector",
      "type": "type",
      "value": "<hash-token>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<class-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-class-selector",
      "type": "type",
      "value": "'.' <ident-token>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<attribute-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-attribute-selector",
      "type": "type",
      "value": "'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<attr-matcher>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-attr-matcher",
      "type": "type",
      "value": "[ '~' | '|' | '^' | '$' | '*' ]? '='",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<attr-modifier>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-attr-modifier",
      "type": "type",
      "value": "i | s",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-class-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-pseudo-class-selector",
      "type": "type",
      "value": ": <ident-token> | : <function-token> <any-value> )",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-element-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-pseudo-element-selector",
      "type": "type",
      "value": ": <pseudo-class-selector> | <legacy-pseudo-element-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-pseudo-element-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-legacy-pseudo-element-selector",
      "type": "type",
      "value": ": [before | after | first-line | first-letter]",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<forgiving-selector-list>",
      "prose": "The <forgiving-selector-list> production instead parses each selector in the list individually, simply ignoring ones that fail to parse, so the remaining selectors can still be used.",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-forgiving-selector-list",
      "type": "type",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<points>",
      "value": "[ <number>+ ]#",
      "href": "https://svgwg.org/svg2-draft/shapes.html#DataTypePoints",
      "type": "type",
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<dasharray>",
      "value": "[ [ <length-percentage> | <number> ]+ ]#",
      "href": "https://svgwg.org/svg2-draft/painting.html#DataTypeDasharray",
      "type": "type",
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<marker-ref>",
      "value": "<url>",
      "href": "https://svgwg.org/svg2-draft/painting.html#DataTypeMarkerRef",
      "type": "type",
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    }
  ],
  "types": [
    {
      "name": "<blend-mode>",
      "href": "https://drafts.fxtf.org/compositing-2/#ltblendmodegt",
      "type": "type",
      "value": "normal | multiply | screen | overlay | darken | lighten | color-dodge |color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity",
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      }
    },
    {
      "name": "<isolation-mode>",
      "href": "https://drafts.fxtf.org/compositing-2/#isolated-propid",
      "type": "type",
      "value": "auto | isolate",
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      }
    },
    {
      "name": "<composite-mode>",
      "href": "https://drafts.fxtf.org/compositing-2/#compositemode",
      "type": "type",
      "value": "clear | copy | source-over | destination-over | source-in | destination-in | source-out | destination-out | source-atop | destination-atop | xor | lighter | plus-darker | plus-lighter",
      "spec": {
        "shortname": "compositing",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<self-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-self-position",
      "type": "type",
      "value": "center | start | end | self-start | self-end | flex-start | flex-end",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<content-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-content-position",
      "type": "type",
      "value": "center | start | end | flex-start | flex-end",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<baseline-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-baseline-position",
      "type": "type",
      "value": "[ first | last ]? && baseline",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<content-distribution>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-content-distribution",
      "type": "type",
      "value": "space-between | space-around | space-evenly | stretch",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<overflow-position>",
      "href": "https://drafts.csswg.org/css-align-3/#typedef-overflow-position",
      "type": "type",
      "value": "unsafe | safe",
      "spec": {
        "shortname": "css-align",
        "currentSpec": true
      }
    },
    {
      "name": "<position-area>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-position-area",
      "type": "type",
      "value": "[ [ left | center | right | span-left | span-right | x-start | x-end | span-x-start | span-x-end | x-self-start | x-self-end | span-x-self-start | span-x-self-end | span-all ] || [ top | center | bottom | span-top | span-bottom | y-start | y-end | span-y-start | span-y-end | y-self-start | y-self-end | span-y-self-start | span-y-self-end | span-all ] | [ block-start | center | block-end | span-block-start | span-block-end | span-all ] || [ inline-start | center | inline-end | span-inline-start | span-inline-end | span-all ] | [ self-block-start | center | self-block-end | span-self-block-start | span-self-block-end | span-all ] || [ self-inline-start | center | self-inline-end | span-self-inline-start | span-self-inline-end | span-all ] | [ start | center | end | span-start | span-end | span-all ]{1,2} | [ self-start | center | self-end | span-self-start | span-self-end | span-all ]{1,2} ]",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<anchor-name>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-name",
      "type": "type",
      "value": "<dashed-ident>",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<anchor-side>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-side",
      "type": "type",
      "value": "inside | outside | top | left | right | bottom | start | end | self-start | self-end | <percentage> | center",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<anchor-size>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-size",
      "type": "type",
      "value": "width | height | block | inline | self-block | self-inline",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<try-size>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-try-size",
      "type": "type",
      "value": "most-width | most-height | most-block-size | most-inline-size",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "for": "position-try-fallbacks",
      "name": "<try-tactic>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-position-try-fallbacks-try-tactic",
      "type": "type",
      "value": "flip-block || flip-inline || flip-start",
      "spec": {
        "shortname": "css-anchor-position",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-composition>",
      "value": "replace | add | accumulate",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-composition",
      "type": "type",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-animation-timeline>",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-timeline",
      "type": "type",
      "value": "auto | none | <dashed-ident> | <scroll()> | <view()>",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-animation>",
      "value": "<time [0s,∞]> || <easing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-trigger-type>",
      "value": "once | repeat | alternate | state",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-trigger-type",
      "type": "type",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-animation-trigger>",
      "href": "https://drafts.csswg.org/css-animations-2/#typedef-single-animation-trigger",
      "type": "type",
      "value": "<single-animation-trigger-type> || [ none | auto | [ [ <dashed-ident> | <scroll()> | <view()> ] [ normal | <length-percentage> | <timeline-range-name> <length-percentage>? ]{0,4} ] ]",
      "spec": {
        "shortname": "css-animations-2",
        "currentSpec": false
      }
    },
    {
      "name": "<keyframes-name>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-keyframes-name",
      "type": "type",
      "value": "<custom-ident> | <string>",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<keyframe-block>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-keyframe-block",
      "type": "type",
      "value": "<keyframe-selector># { <declaration-list> }",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<keyframe-selector>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-keyframe-selector",
      "type": "type",
      "value": "from | to | <percentage [0,100]>",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-iteration-count>",
      "value": "infinite | <number [0,∞]>",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-iteration-count",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-direction>",
      "value": "normal | reverse | alternate | alternate-reverse",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-direction",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-play-state>",
      "value": "running | paused",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-play-state",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<single-animation-fill-mode>",
      "value": "none | forwards | backwards | both",
      "href": "https://drafts.csswg.org/css-animations-1/#typedef-single-animation-fill-mode",
      "type": "type",
      "spec": {
        "shortname": "css-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<repetition>",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#typedef-repetition",
      "type": "type",
      "value": "repeat | space | round | no-repeat",
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      }
    },
    {
      "name": "<repeat-style>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-repeat-style",
      "type": "type",
      "value": "repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<bg-position>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-position",
      "type": "type",
      "value": "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<position-three>",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#typedef-position-three",
      "type": "type",
      "value": "[ [ left | center | right ] && [ [ top | bottom ] <length-percentage> ] | [ [ left | right ] <length-percentage> ] && [ top | center | bottom ] ]",
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<bg-clip>",
      "href": "https://drafts.csswg.org/css-backgrounds-4/#typedef-bg-clip",
      "type": "type",
      "value": "<visual-box> | border-area| text",
      "spec": {
        "shortname": "css-backgrounds-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<bg-image>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-image",
      "type": "type",
      "value": "<image> | none",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<attachment>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-attachment",
      "type": "type",
      "value": "scroll | fixed | local",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<bg-size>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-size",
      "type": "type",
      "value": "[ <length-percentage [0,∞]> | auto ]{1,2} | cover | contain",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<bg-layer>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-bg-layer",
      "type": "type",
      "value": "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box>",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<final-bg-layer>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-final-bg-layer",
      "type": "type",
      "value": "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box> || <'background-color'>",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<line-style>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-line-style",
      "type": "type",
      "value": "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<line-width>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-line-width",
      "type": "type",
      "value": "<length [0,∞]> | thin | medium | thick",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      }
    },
    {
      "name": "<shadow>",
      "href": "https://drafts.csswg.org/css-backgrounds-3/#typedef-shadow",
      "type": "type",
      "value": "<color>? && [<length>{2} <length [0,∞]>? <length>?] && inset?",
      "spec": {
        "shortname": "css-backgrounds",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<corner-shape-value>",
      "href": "https://drafts.csswg.org/css-borders-4/#typedef-corner-shape-value",
      "type": "type",
      "value": "round | scoop | bevel | notch | square | squircle | superellipse(<number [-∞,∞]> | infinity | -infinity)",
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "<spread-shadow>",
      "href": "https://drafts.csswg.org/css-borders-4/#typedef-spread-shadow",
      "type": "type",
      "value": "<'box-shadow-color'>? && [ <'box-shadow-offset'> [ <'box-shadow-blur'> <'box-shadow-spread'>? ]? ] && <'box-shadow-position'>?",
      "spec": {
        "shortname": "css-borders",
        "currentSpec": true
      }
    },
    {
      "name": "<box>",
      "prose": "The following <box> CSS keywords are defined for use in properties (such as transform-box and background-clip) that need to refer to various box edges:",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-box",
      "type": "type",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<visual-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-visual-box",
      "type": "type",
      "value": "content-box | padding-box | border-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "<layout-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-layout-box",
      "type": "type",
      "value": "<visual-box> | margin-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<paint-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-paint-box",
      "type": "type",
      "value": "<visual-box> | fill-box | stroke-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "<coord-box>",
      "href": "https://drafts.csswg.org/css-box-4/#typedef-coord-box",
      "type": "type",
      "value": "<paint-box> | view-box",
      "spec": {
        "shortname": "css-box",
        "currentSpec": true
      }
    },
    {
      "name": "<scope-start>",
      "prose": "<scope-start> is a <selector-list> selector used to identify the scoping root(s).",
      "href": "https://drafts.csswg.org/css-cascade-6/#typedef-scope-start",
      "type": "type",
      "spec": {
        "shortname": "css-cascade-6",
        "currentSpec": false
      }
    },
    {
      "name": "<scope-end>",
      "prose": "<scope-end> is a <selector-list> selector used to identify any scoping limits.",
      "href": "https://drafts.csswg.org/css-cascade-6/#typedef-scope-end",
      "type": "type",
      "spec": {
        "shortname": "css-cascade-6",
        "currentSpec": false
      }
    },
    {
      "name": "<import-conditions>",
      "href": "https://drafts.csswg.org/css-cascade-5/#typedef-import-conditions",
      "type": "type",
      "value": "[ supports( [ <supports-condition> | <declaration> ] ) ]? <media-query-list>?",
      "spec": {
        "shortname": "css-cascade",
        "currentSpec": true
      }
    },
    {
      "name": "<layer-name>",
      "href": "https://drafts.csswg.org/css-cascade-5/#typedef-layer-name",
      "type": "type",
      "value": "<ident> [ '.' <ident> ]*",
      "spec": {
        "shortname": "css-cascade",
        "currentSpec": true
      }
    },
    {
      "name": "<color>",
      "prose": "Colors in CSS are represented by the <color> type:",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color",
      "type": "type",
      "value": "<color-base> | currentColor | <system-color>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<color-base>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color-base",
      "type": "type",
      "value": "<hex-color> | <color-function> | <named-color> | transparent",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<color-function>",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#typedef-color-function",
      "type": "type",
      "value": "<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <oklab()> | <oklch()> | <ictcp()> | <jzazbz()> | <jzczhz()> | <color()>",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-rgb-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-rgb-syntax",
      "type": "type",
      "value": "rgb( [ <number> | <percentage> | none]{3} [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-rgba-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-rgba-syntax",
      "type": "type",
      "value": "rgba( [ <number> | <percentage> | none]{3} [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-hsl-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-hsl-syntax",
      "type": "type",
      "value": "hsl( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<modern-hsla-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-modern-hsla-syntax",
      "type": "type",
      "value": "hsla( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<colorspace-params>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-colorspace-params",
      "type": "type",
      "value": "[ <predefined-rgb-params> | <xyz-params>]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-params>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-custom-params",
      "type": "type",
      "value": "<dashed-ident> [ <number> | <percentage> | none ]+",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<predefined-rgb-params>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-predefined-rgb-params",
      "type": "type",
      "value": "<predefined-rgb> [ <number> | <percentage> | none ]{3}",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<predefined-rgb>",
      "href": "https://drafts.csswg.org/css-color-hdr-1/#typedef-predefined-rgb",
      "type": "type",
      "value": "srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | rec2100-pq | rec2100-hlg | rec2100-linear",
      "spec": {
        "shortname": "css-color-hdr",
        "currentSpec": true
      }
    },
    {
      "name": "<xyz-params>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-xyz-params",
      "type": "type",
      "value": "<xyz-space> [ <number> | <percentage> | none ]{3}",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<xyz>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-xyz",
      "type": "type",
      "value": "xyz | xyz-d50 | xyz-d65",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<legacy-device-cmyk-syntax>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-legacy-device-cmyk-syntax",
      "type": "type",
      "value": "device-cmyk( <number>#{4} )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "<modern-device-cmyk-syntax>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-modern-device-cmyk-syntax",
      "type": "type",
      "value": "device-cmyk( <cmyk-component>{4} [ / [ <alpha-value> | none ] ]? )",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "<cmyk-component>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-cmyk-component",
      "type": "type",
      "value": "<number> | <percentage> | none",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      }
    },
    {
      "name": "<color-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color-space",
      "type": "type",
      "value": "<rectangular-color-space> | <polar-color-space>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<rectangular-color-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-rectangular-color-space",
      "type": "type",
      "value": "srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | lab | oklab | xyz | xyz-d50 | xyz-d65",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<polar-color-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-polar-color-space",
      "type": "type",
      "value": "hsl | hwb | lch | oklch",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-color-space>",
      "href": "https://drafts.csswg.org/css-color-5/#typedef-custom-color-space",
      "type": "type",
      "value": "<dashed-ident>",
      "spec": {
        "shortname": "css-color-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<hue-interpolation-method>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-hue-interpolation-method",
      "type": "type",
      "value": "[ shorter | longer | increasing | decreasing ] hue",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<color-interpolation-method>",
      "href": "https://drafts.csswg.org/css-color-4/#color-interpolation-method",
      "type": "type",
      "value": "in [ <rectangular-color-space> | <polar-color-space> <hue-interpolation-method>? ]",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<target-contrast>",
      "prose": "The <target-contrast> argument specifies the contrast algorithm(s) to use. If no color candidates have been provided, <target-contrast> may be omitted, in which case a UA-chosen algorithm is used.",
      "href": "https://drafts.csswg.org/css-color-6/#typedef-target-contrast",
      "type": "type",
      "value": "<wcag2>",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<wcag2>",
      "href": "https://drafts.csswg.org/css-color-6/#typedef-wcag2",
      "type": "type",
      "value": "wcag2 | wcag2([<number> | [ aa | aaa ] && large? ])",
      "spec": {
        "shortname": "css-color-6",
        "currentSpec": false
      }
    },
    {
      "name": "<hue>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-hue",
      "type": "type",
      "value": "<number> | <angle>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-rgb-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-rgb-syntax",
      "type": "type",
      "value": "rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-rgba-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-rgba-syntax",
      "type": "type",
      "value": "rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<hex-color>",
      "prose": "The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits. In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-hex-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<named-color>",
      "prose": "CSS defines a large set of named colors, so that common colors can be written and read more easily. A <named-color> is written as an <ident>, accepted anywhere a <color> is. As usual for CSS-defined <ident>s, all of these keywords are ASCII case-insensitive.",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-named-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<system-color>",
      "prose": "However, in forced colors mode, most colors on the page are forced into a restricted, user-chosen palette. The <system-color> keywords expose these user-chosen colors so that the rest of the page can integrate with this restricted palette.",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-system-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-hsl-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-hsl-syntax",
      "type": "type",
      "value": "hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-hsla-syntax>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-legacy-hsla-syntax",
      "type": "type",
      "value": "hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<xyz-space>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-xyz-space",
      "type": "type",
      "value": "xyz | xyz-d50 | xyz-d65",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<deprecated-color>",
      "prose": "The deprecated system colors are represented as the <deprecated-color> sub-type, and are defined as:",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-deprecated-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<quirky-color>",
      "prose": "When CSS is being parsed in quirks mode, <quirky-color> is a type of <color> that is only valid in certain properties:",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-quirky-color",
      "type": "type",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "for": "opacity",
      "name": "<opacity-value>",
      "prose": "The opacity to be applied to the element. The resulting opacity is applied to the entire element, rather than a particular color. Opacity values outside the range [0,1] are not invalid, and are preserved in specified values, but are clamped to the range [0, 1] in computed values.",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-opacity-opacity-value",
      "type": "type",
      "value": "<number> | <percentage>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "for": "<color>",
      "name": "<alpha-value>",
      "href": "https://drafts.csswg.org/css-color-4/#typedef-color-alpha-value",
      "type": "type",
      "value": "<number> | <percentage>",
      "spec": {
        "shortname": "css-color",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-feature>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-feature",
      "type": "type",
      "value": "<supports-decl>",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-selector-fn>",
      "href": "https://drafts.csswg.org/css-conditional-4/#typedef-supports-selector-fn",
      "type": "type",
      "value": "selector( <complex-selector> )",
      "spec": {
        "shortname": "css-conditional-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<supports-font-tech-fn>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-supports-font-tech-fn",
      "type": "type",
      "value": "font-tech( <font-tech> )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<supports-font-format-fn>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-supports-font-format-fn",
      "type": "type",
      "value": "font-format( <font-format> )",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<container-condition>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-container-condition",
      "type": "type",
      "value": "[ <container-name>? <container-query>? ]!",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<container-name>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-container-name",
      "type": "type",
      "value": "<custom-ident>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<container-query>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-container-query",
      "type": "type",
      "value": "not <query-in-parens> | <query-in-parens> [ [ and <query-in-parens> ]* | [ or <query-in-parens> ]* ]",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<query-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-query-in-parens",
      "type": "type",
      "value": "( <container-query> ) | ( <size-feature> ) | style( <style-query> ) | scroll-state( <scroll-state-query> ) | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<style-query>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-style-query",
      "type": "type",
      "value": "not <style-in-parens> | <style-in-parens> [ [ and <style-in-parens> ]* | [ or <style-in-parens> ]* ] | <style-feature>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<style-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-style-in-parens",
      "type": "type",
      "value": "( <style-query> ) | ( <style-feature> ) | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<scroll-state-query>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-scroll-state-query",
      "type": "type",
      "value": "not <scroll-state-in-parens> | <scroll-state-in-parens> [ [ and <scroll-state-in-parens> ]* | [ or <scroll-state-in-parens> ]* ] | <scroll-state-feature>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<scroll-state-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-scroll-state-in-parens",
      "type": "type",
      "value": "( <scroll-state-query> ) | ( <scroll-state-feature> ) | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<size-feature>",
      "prose": "A container size query allows querying the size of the query container’s principal box. It is a boolean combination of individual size features (<size-feature>) that each query a single, specific dimensional feature of the query container. The syntax of a <size-feature> is the same as for a media feature: a feature name, a comparator, and a value. [mediaqueries-5] The boolean syntax and logic combining size features into a size query is the same as for CSS feature queries. (See @supports. [css-conditional-3])",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-size-feature",
      "type": "type",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<style-feature>",
      "prose": "A container style query allows querying the computed values of the query container. It is a boolean combination of individual style features (<style-feature>) that each query a single, specific property of the query container. The syntax of a <style-feature> is either the same as for a valid declaration [CSS-SYNTAX-3], a supported CSS property, or a <custom-property-name>.",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-style-feature",
      "type": "type",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<scroll-state-feature>",
      "prose": "A container scroll-state query allows querying a container for state that depends on scroll position. It is a boolean combination of individual scroll-state features (<scroll-state-feature>) that each query a single feature of the query container. The syntax of a <scroll-state-feature> is the same as for a media feature: a feature name, a comparator, and a value.",
      "href": "https://drafts.csswg.org/css-conditional-5/#typedef-scroll-state-feature",
      "type": "type",
      "spec": {
        "shortname": "css-conditional-5",
        "currentSpec": false
      }
    },
    {
      "name": "<supports-condition>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-condition",
      "type": "type",
      "value": "not <supports-in-parens> | <supports-in-parens> [ and <supports-in-parens> ]* | <supports-in-parens> [ or <supports-in-parens> ]*",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-in-parens>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-in-parens",
      "type": "type",
      "value": "( <supports-condition> ) | <supports-feature> | <general-enclosed>",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<supports-decl>",
      "href": "https://drafts.csswg.org/css-conditional-3/#typedef-supports-decl",
      "type": "type",
      "value": "( <declaration> )",
      "spec": {
        "shortname": "css-conditional",
        "currentSpec": true
      }
    },
    {
      "name": "<quote>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-quote",
      "type": "type",
      "value": "open-quote | close-quote | no-open-quote | no-close-quote",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "<leader-type>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-leader-type",
      "type": "type",
      "value": "dotted | solid | space | <string>",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "<target>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-target",
      "type": "type",
      "value": "<target-counter()> | <target-counters()> | <target-text()>",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "for": "content",
      "name": "<content-replacement>",
      "value": "<image>",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-content-content-replacement",
      "type": "type",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "for": "content",
      "name": "<content-list>",
      "prose": "Replaces the element’s contents with one or more anonymous inline boxes corresponding to the specified values, in the order specified. Its normal contents are suppressed and do not generate boxes, as if they were display: none. Each value contributes an inline box to the element’s contents. For <image>, this is an inline anonymous replaced element; for the others, it’s an anonymous inline run of text. If an <image> represents an invalid image, the user agent must do one of the following: \"Skip\" the <image>, generating nothing for it. Display some indication that the image can’t be displayed in place of the <image>, such as a \"broken image\" icon. This specification intentionally does not define which behavior a user agent must use, but it must use one or the other consistently.",
      "href": "https://drafts.csswg.org/css-content-3/#typedef-content-content-list",
      "type": "type",
      "value": "[ <string> | <image> | <attr()> | contents | <quote> | <leader()> | <target> | <string()> | <content()> | <counter> ]+",
      "spec": {
        "shortname": "css-content",
        "currentSpec": true
      }
    },
    {
      "name": "<counter-style-name>",
      "prose": "<counter-style-name> is a <custom-ident> that is not an ASCII case-insensitive match for none. When used here, to define a counter style, it also cannot be any of the non-overridable counter-style names (in other uses that merely reference a counter style, such as the extend system, these are allowed). The <counter-style-name> is a tree-scoped name.",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-counter-style-name",
      "type": "type",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<symbol>",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-symbol",
      "type": "type",
      "value": "<string> | <image> | <custom-ident>",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<symbols-type>",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-symbols-type",
      "type": "type",
      "value": "cyclic | numeric | alphabetic | symbolic | fixed",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<counter-style>",
      "href": "https://drafts.csswg.org/css-counter-styles-3/#typedef-counter-style",
      "type": "type",
      "value": "<counter-style-name> | <symbols()>",
      "spec": {
        "shortname": "css-counter-styles",
        "currentSpec": true
      }
    },
    {
      "name": "<display-outside>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-outside",
      "type": "type",
      "value": "block | inline | run-in",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-inside>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-inside",
      "type": "type",
      "value": "flow | flow-root | table | flex | grid | ruby",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-listitem>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-listitem",
      "type": "type",
      "value": "<display-outside>? && [ flow | flow-root ]? && list-item",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-internal>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-internal",
      "type": "type",
      "value": "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-box>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-box",
      "type": "type",
      "value": "contents | none",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<display-legacy>",
      "href": "https://drafts.csswg.org/css-display-4/#typedef-display-legacy",
      "type": "type",
      "value": "inline-block | inline-table | inline-flex | inline-grid",
      "spec": {
        "shortname": "css-display",
        "currentSpec": true
      }
    },
    {
      "name": "<easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-easing-function",
      "type": "type",
      "value": "<linear-easing-function> | <cubic-bezier-easing-function> | <step-easing-function>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-linear-easing-function",
      "type": "type",
      "value": "linear | <linear()>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<cubic-bezier-easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-cubic-bezier-easing-function",
      "type": "type",
      "value": "ease | ease-in | ease-out | ease-in-out | <cubic-bezier()>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<step-easing-function>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-step-easing-function",
      "type": "type",
      "value": "step-start | step-end | <steps()>",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<step-position>",
      "href": "https://drafts.csswg.org/css-easing-2/#typedef-step-position",
      "type": "type",
      "value": "jump-start | jump-end | jump-none | jump-both | start | end",
      "spec": {
        "shortname": "css-easing",
        "currentSpec": true
      }
    },
    {
      "name": "<extension-name>",
      "prose": "All extensions defined in this specification use a common syntax for defining their ”names”: the <extension-name> production. An <extension-name> is any identifier that starts with two dashes (U+002D HYPHEN-MINUS), like --foo, or even exotic names like -- or ------. The CSS language will never use identifiers of this form for any language-defined purpose, so it’s safe to use them for author-defined purposes without ever having to worry about colliding with CSS-defined names.",
      "href": "https://drafts.csswg.org/css-extensions-1/#typedef-extension-name",
      "type": "type",
      "spec": {
        "shortname": "css-extensions",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-selector>",
      "href": "https://drafts.csswg.org/css-extensions-1/#typedef-custom-selector",
      "type": "type",
      "value": "<custom-arg>? : <extension-name> [ ( <custom-arg>+#? ) ]? ;",
      "spec": {
        "shortname": "css-extensions",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-arg>",
      "href": "https://drafts.csswg.org/css-extensions-1/#typedef-custom-arg",
      "type": "type",
      "value": "$ <ident-token> ;",
      "spec": {
        "shortname": "css-extensions",
        "currentSpec": true
      }
    },
    {
      "name": "<font-format>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-format-values",
      "type": "type",
      "value": "[<string> | collection | embedded-opentype | opentype | svg | truetype | woff | woff2 ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-tech>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-tech-values",
      "type": "type",
      "value": "[<font-features-tech> | <color-font-tech> | variations | palettes | incremental ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-features-tech>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-features-tech-values",
      "type": "type",
      "value": "[features-opentype | features-aat | features-graphite]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<color-font-tech>",
      "href": "https://drafts.csswg.org/css-fonts-4/#color-font-tech-values",
      "type": "type",
      "value": "[color-COLRv0 | color-COLRv1 | color-SVG | color-sbix | color-CBDT ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<family-name>",
      "prose": "The name of a font family, such as Helvetica or Verdana in the previous example. This might be a locally-instaled font, or might be a web font.",
      "href": "https://drafts.csswg.org/css-fonts-4/#family-name-value",
      "type": "type",
      "value": "<string> | <custom-ident>+",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<system-family-name>",
      "prose": "A locally installed system font, whose use is subject to certain constraints. In particular, it may not be used with the font-family property, but can be used with the font shorthand. The following values refer to system fonts:",
      "href": "https://drafts.csswg.org/css-fonts-4/#system-family-name-value",
      "type": "type",
      "value": "caption | icon | menu | message-box | small-caption | status-bar",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-family>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-family",
      "type": "type",
      "value": "<generic-script-specific>| <generic-complete> | <generic-incomplete>",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-script-specific>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-script-specific",
      "type": "type",
      "value": "generic(fangsong) | generic(kai) | generic(khmer-mul) | generic(nastaliq)",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-complete>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-complete",
      "type": "type",
      "value": "serif | sans-serif | system-ui | cursive | fantasy | math | monospace",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-incomplete>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-generic-incomplete",
      "type": "type",
      "value": "ui-serif | ui-sans-serif | ui-monospace | ui-rounded",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-weight-absolute>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-weight-absolute-values",
      "type": "type",
      "value": "[normal | bold | <number [1,1000]>]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-variant-css2>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-variant-css21-values",
      "type": "type",
      "value": "normal | small-caps",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-width-css3>",
      "href": "https://drafts.csswg.org/css-fonts-4/#font-width-css3-values",
      "type": "type",
      "value": "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-src-list>",
      "prose": "To parse a <font-src-list> production, parse a list of <font-src>s.",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-src-list",
      "type": "type",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<font-src>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-src",
      "type": "type",
      "value": "<url> [ format(<font-format>)]? [ tech( <font-tech>#)]? | local(<family-name>)",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<common-lig-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#common-lig-values",
      "type": "type",
      "value": "[ common-ligatures | no-common-ligatures ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<discretionary-lig-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#discretionary-lig-values",
      "type": "type",
      "value": "[ discretionary-ligatures | no-discretionary-ligatures ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<historical-lig-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#historical-lig-values",
      "type": "type",
      "value": "[ historical-ligatures | no-historical-ligatures ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<contextual-alt-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#contextual-alt-values",
      "type": "type",
      "value": "[ contextual | no-contextual ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<numeric-figure-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#numeric-figure-values",
      "type": "type",
      "value": "[ lining-nums | oldstyle-nums ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<numeric-spacing-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#numeric-spacing-values",
      "type": "type",
      "value": "[ proportional-nums | tabular-nums ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<numeric-fraction-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#numeric-fraction-values",
      "type": "type",
      "value": "[ diagonal-fractions | stacked-fractions ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<feature-value-name>",
      "href": "https://drafts.csswg.org/css-fonts-4/#feature-value-name-value",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<east-asian-variant-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#east-asian-variant-values",
      "type": "type",
      "value": "[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<east-asian-width-values>",
      "href": "https://drafts.csswg.org/css-fonts-4/#east-asian-width-values",
      "type": "type",
      "value": "[ full-width | proportional-width ]",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<opentype-tag>",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-opentype-tag",
      "type": "type",
      "value": "<string>",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "for": "font-palette",
      "name": "<palette-identifier>",
      "prose": "This value identifies an CSS-defined palette to use. Users can define a palette by using the @font-palette-values rule. If no applicable @font-palette-values rule is present, this value behaves as normal. <palette-identifier> is parsed as a <dashed-ident>.",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-palette-palette-identifier",
      "type": "type",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "for": "font-palette",
      "name": "<palette-mix()>",
      "prose": "This value defines a position in the interpolation between two palette values, identified by <palette-identifier>, by the palette keywords normal, light, dark, or by another <palette-mix()> value. The glyphs of the font must be rendered with a palette that is created by interpolating for each palette color index between the matching color indices of the first and second palette specified as arguments, recursively resolving <palette-mix()> functions if needed. For each palette color, the interpolation follows the rules of the <color-mix()> function. Percentages are normalized according to CSS Color 5 § 3.1 Percentage Normalization.",
      "href": "https://drafts.csswg.org/css-fonts-4/#typedef-font-palette-palette-mix",
      "type": "type",
      "spec": {
        "shortname": "css-fonts",
        "currentSpec": true
      }
    },
    {
      "name": "<type>",
      "href": "https://drafts.csswg.org/css-forms-1/#typedef-type",
      "type": "type",
      "value": "'<' [ number | string ] '>'",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "for": "::picker()",
      "name": "<form-control-identifier>",
      "href": "https://drafts.csswg.org/css-forms-1/#typedef-picker-form-control-identifier",
      "type": "type",
      "value": "select",
      "spec": {
        "shortname": "css-forms",
        "currentSpec": true
      }
    },
    {
      "name": "<line-color-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-color-list",
      "type": "type",
      "value": "[ <line-color-or-repeat> ]+",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-line-color-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-line-color-list",
      "type": "type",
      "value": "[ <line-color-or-repeat> ]* <auto-repeat-line-color> [ <line-color-or-repeat> ]*",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-color-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-color-or-repeat",
      "type": "type",
      "value": "[ <color> | <repeat-line-color> ]",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<repeat-line-color>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-repeat-line-color",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <color> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat-line-color>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-repeat-line-color",
      "type": "type",
      "value": "repeat( auto , [ <color> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-style-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-style-list",
      "type": "type",
      "value": "[ <line-style-or-repeat> ]+",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-line-style-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-line-style-list",
      "type": "type",
      "value": "[ <line-style-or-repeat> ]* <auto-repeat-line-style> [ <line-style-or-repeat> ]*",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-style-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-style-or-repeat",
      "type": "type",
      "value": "[ <line-style> | <repeat-line-style> ]",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<repeat-line-style>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-repeat-line-style",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-style> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat-line-style>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-repeat-line-style",
      "type": "type",
      "value": "repeat( auto , [ <line-style> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-width-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-width-list",
      "type": "type",
      "value": "[ <line-width-or-repeat> ]+",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-line-width-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-line-width-list",
      "type": "type",
      "value": "[ <line-width-or-repeat> ]* <auto-repeat-line-width> [ <line-width-or-repeat> ]*",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<line-width-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-line-width-or-repeat",
      "type": "type",
      "value": "[ <line-width> | <repeat-line-width> ]",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<repeat-line-width>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-repeat-line-width",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-width> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat-line-width>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-auto-repeat-line-width",
      "type": "type",
      "value": "repeat( auto , [ <line-width> ]+ )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-rule-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-rule-list",
      "type": "type",
      "value": "<gap-rule-or-repeat>#",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-auto-rule-list>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-auto-rule-list",
      "type": "type",
      "value": "<gap-rule-or-repeat>#? , <gap-auto-repeat-rule> , <gap-rule-or-repeat>#?",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-rule-or-repeat>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-rule-or-repeat",
      "type": "type",
      "value": "<gap-rule> | <gap-repeat-rule>",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-repeat-rule>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-repeat-rule",
      "type": "type",
      "value": "repeat( <integer [1,∞]> , <gap-rule># )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-auto-repeat-rule>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-auto-repeat-rule",
      "type": "type",
      "value": "repeat( auto , <gap-rule># )",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<gap-rule>",
      "href": "https://drafts.csswg.org/css-gaps-1/#typedef-gap-rule",
      "type": "type",
      "value": "<line-width> || <line-style> || <color>",
      "spec": {
        "shortname": "css-gaps",
        "currentSpec": true
      }
    },
    {
      "name": "<content-level>",
      "href": "https://drafts.csswg.org/css-gcpm-4/#typedef-content-level",
      "type": "type",
      "value": "element | content | text | <attr()> | <counter>",
      "spec": {
        "shortname": "css-gcpm-4",
        "currentSpec": false
      }
    },
    {
      "name": "<content-list>",
      "href": "https://drafts.csswg.org/css-gcpm-3/#content-list",
      "type": "type",
      "value": "[ <string> | <counter()> | <counters()> | <content()> | <attr()> ]+",
      "spec": {
        "shortname": "css-gcpm",
        "currentSpec": true
      }
    },
    {
      "name": "<track-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-list",
      "type": "type",
      "value": "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-track-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-auto-track-list",
      "type": "type",
      "value": "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat> [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<explicit-track-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-explicit-track-list",
      "type": "type",
      "value": "[ <line-names>? <track-size> ]+ <line-names>?",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<line-name-list>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-line-name-list",
      "type": "type",
      "value": "[ <line-names> | <name-repeat> ]+",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<track-size>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-size",
      "type": "type",
      "value": "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( <length-percentage [0,∞]> )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<fixed-size>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-fixed-size",
      "type": "type",
      "value": "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<track-breadth>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-breadth",
      "type": "type",
      "value": "<length-percentage [0,∞]> | <flex [0,∞]> | min-content | max-content | auto",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<inflexible-breadth>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-inflexible-breadth",
      "type": "type",
      "value": "<length-percentage [0,∞]> | min-content | max-content | auto",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<fixed-breadth>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-fixed-breadth",
      "type": "type",
      "value": "<length-percentage [0,∞]>",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<line-names>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-line-names",
      "type": "type",
      "value": "'[' <custom-ident>* ']'",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<track-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-track-repeat",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-names>? <track-size> ]+ <line-names>? )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<auto-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-auto-repeat",
      "type": "type",
      "value": "repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<fixed-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-fixed-repeat",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<name-repeat>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-name-repeat",
      "type": "type",
      "value": "repeat( [ <integer [1,∞]> | auto-fill ], <line-names>+)",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<flex>",
      "prose": "A flexible length or <flex> is a dimension with the fr unit, which represents a fraction of the leftover space in the grid container. Tracks sized with fr units are called flexible tracks as they flex in response to leftover space similar to how flex items with a zero base size fill space in a flex container.",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-flex",
      "type": "type",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-row-start",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-column-start",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-row-end",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "for": "grid-column-end",
      "name": "<grid-line>",
      "href": "https://drafts.csswg.org/css-grid-2/#typedef-grid-row-start-grid-line",
      "type": "type",
      "value": "auto | <custom-ident> | [ [ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>? ] | [ span && [ <integer [1,∞]> || <custom-ident> ] ]",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "<image>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-image",
      "type": "type",
      "value": "<url> | <gradient>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<image-set-option>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-set-option",
      "type": "type",
      "value": "[ <image> | <string> ] [ <resolution> || type(<string>) ]?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<image-tags>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-tags",
      "type": "type",
      "value": "[ ltr | rtl ]",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<image-src>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-src",
      "type": "type",
      "value": "[ <url> | <string> ]",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<cf-image>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-cf-image",
      "type": "type",
      "value": "[ <image> | <color> ] && <percentage [0,100]>?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<gradient>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-gradient",
      "type": "type",
      "value": "<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-gradient-syntax>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-linear-gradient-syntax",
      "type": "type",
      "value": "[ <angle> | <zero> | to <side-or-corner> ]? , <color-stop-list>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<side-or-corner>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-side-or-corner",
      "type": "type",
      "value": "[left | right] || [top | bottom]",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<radial-gradient-syntax>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-gradient-syntax",
      "type": "type",
      "value": "[ <radial-shape> || <radial-size> ]? [ at <position> ]? , <color-stop-list>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<conic-gradient-syntax>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-conic-gradient-syntax",
      "type": "type",
      "value": "[ [ [ from [ <angle> | <zero> ] ]? [ at <position> ]? ] || <color-interpolation-method> ]? , <angular-color-stop-list>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stop-list>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-color-stop-list",
      "type": "type",
      "value": "<linear-color-stop> , [ <linear-color-hint>? , <linear-color-stop> ]#?",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-color-stop>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-linear-color-stop",
      "type": "type",
      "value": "<color> <length-percentage>?",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<linear-color-hint>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-linear-color-hint",
      "type": "type",
      "value": "<length-percentage>",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<color-stop-length>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stop-length",
      "type": "type",
      "value": "<length-percentage>{1,2}",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<angular-color-stop-list>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-angular-color-stop-list",
      "type": "type",
      "value": "<angular-color-stop> , [ <angular-color-hint>? , <angular-color-stop> ]#?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<angular-color-stop>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-angular-color-stop",
      "type": "type",
      "value": "<color> <color-stop-angle>?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<angular-color-hint>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-angular-color-hint",
      "type": "type",
      "value": "<angle-percentage> | <zero>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stop-angle>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stop-angle",
      "type": "type",
      "value": "[ <angle-percentage> | <zero> ]{1,2}",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stop>",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stop",
      "type": "type",
      "value": "<color-stop-length> | <color-stop-angle>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<image-1D>",
      "prose": "While <image> values represent a 2-dimensional (2D) image, and <color> can be thought of as a 0-dimensional (0D) image (unvarying in either axis), some contexts require a 1-dimensional (1D) image, which specifies colors along an abstract, directionless, single-axis paint line. The <image-1D> type represents such 1D images, including the stripes() functional notation:",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-image-1d",
      "type": "type",
      "value": "<stripes()>",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<color-stripe>",
      "prose": "Each <color-stripe> entry defines a solid-color stripe with the specified <color> and thickness. If the thickness is omitted, it defaults to 1fr. Thickness values are interpreted as follows:",
      "href": "https://drafts.csswg.org/css-images-4/#typedef-color-stripe",
      "type": "type",
      "value": "<color> && [ <length-percentage> | <flex> ]?",
      "spec": {
        "shortname": "css-images-4",
        "currentSpec": false
      }
    },
    {
      "name": "<radial-size>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-size",
      "type": "type",
      "value": "<radial-extent> | <length [0,∞]> | <length-percentage [0,∞]>{2}",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<radial-extent>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-extent",
      "type": "type",
      "value": "closest-corner | closest-side | farthest-corner | farthest-side",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<radial-shape>",
      "href": "https://drafts.csswg.org/css-images-3/#typedef-radial-shape",
      "type": "type",
      "value": "circle | ellipse",
      "spec": {
        "shortname": "css-images",
        "currentSpec": true
      }
    },
    {
      "name": "<text-edge>",
      "prose": "The <text-edge> value, which identifies specific font metrics, expands to",
      "href": "https://drafts.csswg.org/css-inline-3/#typedef-text-edge",
      "type": "type",
      "value": "[ text | ideographic | ideographic-ink ] | [ text | ideographic | ideographic-ink | cap | ex ] [ text | ideographic | ideographic-ink | alphabetic ]",
      "spec": {
        "shortname": "css-inline",
        "currentSpec": true
      }
    },
    {
      "name": "<link-param>",
      "href": "https://drafts.csswg.org/css-link-params-1/#typedef-link-param",
      "type": "type",
      "value": "param( <custom-property-name> <declaration-value>? )",
      "spec": {
        "shortname": "css-link-params",
        "currentSpec": true
      }
    },
    {
      "name": "<counter-name>",
      "prose": "Counters are referred to in CSS syntax using the <counter-name> type, which represents their name as a <custom-ident>. A <counter-name> name cannot match the keyword none; such an identifier is invalid as a <counter-name>.",
      "href": "https://drafts.csswg.org/css-lists-3/#typedef-counter-name",
      "type": "type",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "<reversed-counter-name>",
      "href": "https://drafts.csswg.org/css-lists-3/#typedef-reversed-counter-name",
      "type": "type",
      "value": "reversed( <counter-name> )",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "<counter>",
      "href": "https://drafts.csswg.org/css-lists-3/#typedef-counter",
      "type": "type",
      "value": "<counter()> | <counters()>",
      "spec": {
        "shortname": "css-lists",
        "currentSpec": true
      }
    },
    {
      "name": "<clip-source>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-clip-source",
      "type": "type",
      "value": "<url>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<geometry-box>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-geometry-box",
      "type": "type",
      "value": "<shape-box> | fill-box | stroke-box | view-box",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<mask-reference>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-mask-reference",
      "type": "type",
      "value": "none | <image> | <mask-source>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<mask-source>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-mask-source",
      "type": "type",
      "value": "<url>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<masking-mode>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-masking-mode",
      "type": "type",
      "value": "alpha | luminance | match-source",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<compositing-operator>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-compositing-operator",
      "type": "type",
      "value": "add | subtract | intersect | exclude",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<mask-layer>",
      "href": "https://drafts.fxtf.org/css-masking-1/#typedef-mask-layer",
      "type": "type",
      "value": "<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>",
      "spec": {
        "shortname": "css-masking",
        "currentSpec": true
      }
    },
    {
      "name": "<function-parameter>",
      "href": "https://drafts.csswg.org/css-mixins-1/#typedef-function-parameter",
      "type": "type",
      "value": "<custom-property-name> <css-type>? [ : <declaration-value> ]?",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      }
    },
    {
      "name": "<css-type>",
      "href": "https://drafts.csswg.org/css-mixins-1/#typedef-css-type",
      "type": "type",
      "value": "<syntax-component> | <type()>",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      }
    },
    {
      "name": "<dashed-function>",
      "prose": "A <dashed-function> is a functional notation whose function name starts with two dashes (U+002D HYPHEN-MINUS). Its argument grammar is:",
      "href": "https://drafts.csswg.org/css-mixins-1/#typedef-dashed-function",
      "type": "type",
      "spec": {
        "shortname": "css-mixins",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<namespace-prefix>",
      "href": "https://drafts.csswg.org/css-namespaces-3/#typedef-namespace-prefix",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "css-namespaces",
        "currentSpec": true
      }
    },
    {
      "name": "<scroll-button-direction>",
      "prose": "The four ::scroll-button() pseudo-elements are individually selected by the selector’s argument. A * arguments selects all four ::scroll-button()s; otherwise the selected pseudo-element is determined by the <scroll-button-direction> value:",
      "href": "https://drafts.csswg.org/css-overflow-5/#typedef-scroll-button-direction",
      "type": "type",
      "spec": {
        "shortname": "css-overflow-5",
        "currentSpec": false
      }
    },
    {
      "name": "<page-selector-list>",
      "href": "https://drafts.csswg.org/css-page-3/#typedef-page-selector-list",
      "type": "type",
      "value": "<page-selector>#",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "<page-selector>",
      "href": "https://drafts.csswg.org/css-page-3/#typedef-page-selector",
      "type": "type",
      "value": "[ <ident-token>? <pseudo-page>* ]!",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-page>",
      "href": "https://drafts.csswg.org/css-page-3/#typedef-pseudo-page",
      "type": "type",
      "value": ": [ left | right | first | blank ]",
      "spec": {
        "shortname": "css-page",
        "currentSpec": true
      }
    },
    {
      "name": "<shape-command>",
      "prose": "The sequence of <shape-command>s represent further path data commands. Each command’s starting point is the previous command’s ending point.",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-command",
      "type": "type",
      "value": "<move-command> | <line-command> | close | <horizontal-line-command> | <vertical-line-command> | <curve-command> | <smooth-command> | <arc-command>",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<coordinate-pair>",
      "value": "<length-percentage>{2}",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-coordinate-pair",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<command-end-point>",
      "value": "[ to <position> | by <coordinate-pair> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-command-end-point",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<move-command>",
      "value": "move <command-end-point>",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-move-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<line-command>",
      "value": "line <command-end-point>",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-line-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<horizontal-line-command>",
      "value": "hline [ to [ <length-percentage> | left | center | right | x-start | x-end ] | by <length-percentage> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-horizontal-line-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<vertical-line-command>",
      "value": "vline [ to [ <length-percentage> | top | center | bottom | y-start | y-end ] | by <length-percentage> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-vertical-line-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<curve-command>",
      "value": "curve [ [ to <position> with <control-point> [ / <control-point> ]? ] | [ by <coordinate-pair> with <relative-control-point> [ / <relative-control-point> ]? ] ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-curve-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<smooth-command>",
      "value": "smooth [ [ to <position> [ with <control-point> ]? ] | [ by <coordinate-pair> [ with <relative-control-point> ]? ] ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-smooth-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<control-point>",
      "value": "[ <position> | <relative-control-point> ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-control-point",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<relative-control-point>",
      "value": "<coordinate-pair> [ from [ start | end | origin ] ]?",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-relative-control-point",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<arc-command>",
      "value": "arc <command-end-point> [ [ of <length-percentage>{1,2} ] && <arc-sweep>? && <arc-size>? && [rotate <angle>]? ]",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-arc-command",
      "type": "type",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<arc-sweep>",
      "prose": "<arc-sweep> can be cw or ccw, indicating that the arc that is traced around the ellipse clockwise or counter-clockwise from the center, respectively, must be chosen. If omitted, this defaults to ccw.",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-arc-sweep",
      "type": "type",
      "value": "cw | ccw",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "for": "shape()",
      "name": "<arc-size>",
      "prose": "<arc-size> can be large or small, indicating that the larger or smaller, respectively, of the two possible arcs must be chosen. If omitted, this defaults to small.",
      "href": "https://drafts.csswg.org/css-shapes-2/#typedef-shape-arc-size",
      "type": "type",
      "value": "large | small",
      "spec": {
        "shortname": "css-shapes-2",
        "currentSpec": false
      }
    },
    {
      "name": "<basic-shape>",
      "prose": "The <basic-shape> type can be specified using basic shape functions. When using this syntax to define shapes, the reference box is defined by each property that uses <basic-shape> values. The coordinate system for the shape has its origin on the top-left corner of the reference box with the x-axis running to the right and the y-axis running downwards. All the lengths expressed in percentages are resolved from the used dimensions of the reference box.",
      "href": "https://drafts.csswg.org/css-shapes-1/#typedef-basic-shape",
      "type": "type",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "<basic-shape-rect>",
      "href": "https://drafts.csswg.org/css-shapes-1/#typedef-basic-shape-rect",
      "type": "type",
      "value": "<inset()> | <rect()> | <xywh()>",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "<shape-box>",
      "href": "https://drafts.csswg.org/css-shapes-1/#typedef-shape-box",
      "type": "type",
      "value": "<visual-box> | margin-box",
      "spec": {
        "shortname": "css-shapes",
        "currentSpec": true
      }
    },
    {
      "name": "<generic-voice>",
      "value": "[<age>? <gender> <integer>?]",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-generic-voice",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-volume",
      "name": "<decibel>",
      "prose": "The <decibel> type denotes a dimension with a \"dB\" (decibel unit) unit identifier. Decibels represent the ratio of the squares of the new signal amplitude a1 and the current amplitude a0, as per the following logarithmic equation: volume(dB) = 20 × log10(a1 / a0).",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-volume-decibel",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-family",
      "name": "<age>",
      "prose": "Possible values are child, young and old, indicating the preferred age category to match during voice selection.",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-family-age",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-family",
      "name": "<gender>",
      "prose": "One of the keywords male, female, or neutral, specifying a male, female, or neutral voice, respectively.",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-family-gender",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "for": "voice-pitch",
      "name": "<semitones>",
      "href": "https://drafts.csswg.org/css-speech-1/#typedef-voice-pitch-semitones",
      "type": "type",
      "spec": {
        "shortname": "css-speech",
        "currentSpec": true
      }
    },
    {
      "name": "<ident-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ident-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<function-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-function-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<at-keyword-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-at-keyword-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<hash-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-hash-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<string-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-string-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<bad-string-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-bad-string-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<url-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-url-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<bad-url-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-bad-url-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<delim-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-delim-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<number-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-number-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<percentage-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-percentage-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<dimension-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-dimension-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<unicode-range-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-unicode-range-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<whitespace-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-whitespace-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<CDO-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-cdo-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<CDC-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-cdc-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<colon-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-colon-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<semicolon-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-semicolon-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<comma-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-comma-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<[-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-open-square",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<]-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-close-square",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<(-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-open-paren",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<)-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-close-paren",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<{-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-open-curly",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<}-token>",
      "prose": "The output of tokenization step is a stream of zero or more of the following tokens: <ident-token>, <function-token>, <at-keyword-token>, <hash-token>, <string-token>, <bad-string-token>, <url-token>, <bad-url-token>, <delim-token>, <number-token>, <percentage-token>, <dimension-token>, <unicode-range-token>, <whitespace-token>, <CDO-token>, <CDC-token>, <colon-token>, <semicolon-token>, <comma-token>, <[-token>, <]-token>, <(-token>, <)-token>, <{-token>, and <}-token>.",
      "href": "https://drafts.csswg.org/css-syntax-3/#tokendef-close-curly",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<eof-token>",
      "prose": "An <eof-token> is a conceptual token, not actually produced by the tokenizer, used to indicate that the token stream has been exhausted.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-eof-token",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<an+b>",
      "href": "https://drafts.csswg.org/css-syntax-3/#anb-production",
      "type": "type",
      "value": "odd | even | <integer> | <n-dimension> | '+'? n | -n | <ndashdigit-dimension> | '+'? <ndashdigit-ident> | <dashndashdigit-ident> | <n-dimension> <signed-integer> | '+'? n <signed-integer> | -n <signed-integer> | <ndash-dimension> <signless-integer> | '+'? n- <signless-integer> | -n- <signless-integer> | <n-dimension> ['+' | '-'] <signless-integer> | '+'? n ['+' | '-'] <signless-integer> | -n ['+' | '-'] <signless-integer>",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<n-dimension>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-n-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<ndash-dimension>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ndash-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<ndashdigit-dimension>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ndashdigit-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<ndashdigit-ident>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-ndashdigit-ident",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<dashndashdigit-ident>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-dashndashdigit-ident",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<signed-integer>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-signed-integer",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<signless-integer>",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-signless-integer",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<block-contents>",
      "prose": "When writing a rule grammar, <block-contents> represents this agnostic parsing. It must only be used as the sole value in a block, and represents that no restrictions are implicitly placed on what the block can contain.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-block-contents",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<declaration-list>",
      "prose": "<declaration-list>: only declarations are allowed; at-rules and qualified rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-declaration-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<qualified-rule-list>",
      "prose": "<qualified-rule-list>: only qualified rules are allowed; declarations and at-rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-qualified-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<at-rule-list>",
      "prose": "<at-rule-list>: only at-rules are allowed; declarations and qualified rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-at-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<declaration-rule-list>",
      "prose": "<declaration-rule-list>: declarations and at-rules are allowed; qualified rules are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-declaration-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<rule-list>",
      "prose": "<rule-list>: qualified rules and at-rules are allowed; declarations are automatically invalid.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-rule-list",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<declaration-value>",
      "prose": "The <declaration-value> production matches any sequence of one or more tokens, so long as the sequence does not contain <bad-string-token>, <bad-url-token>, unmatched <)-token>, <]-token>, or <}-token>, or top-level <semicolon-token> tokens or <delim-token> tokens with a value of \"!\". It represents the entirety of what a valid declaration can have as its value.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<any-value>",
      "prose": "The <any-value> production is identical to <declaration-value>, but also allows top-level <semicolon-token> tokens and <delim-token> tokens with a value of \"!\". It represents the entirety of what valid CSS can be in any context.",
      "href": "https://drafts.csswg.org/css-syntax-3/#typedef-any-value",
      "type": "type",
      "spec": {
        "shortname": "css-syntax",
        "currentSpec": true
      }
    },
    {
      "name": "<autospace>",
      "href": "https://drafts.csswg.org/css-text-4/#typedef-autospace",
      "type": "type",
      "value": "no-autospace | [ ideograph-alpha || ideograph-numeric || punctuation ] || [ insert | replace ]",
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "<spacing-trim>",
      "href": "https://drafts.csswg.org/css-text-4/#typedef-spacing-trim",
      "type": "type",
      "value": "space-all | normal | space-first | trim-start | trim-both | trim-all",
      "spec": {
        "shortname": "css-text-4",
        "currentSpec": false
      }
    },
    {
      "name": "<transform-function>",
      "prose": "The value of the transform property is a list of <transform-function>. The set of allowed transform functions is given below. In the following functions, a <zero> behaves the same as 0deg (\"unitless 0\" angles are preserved for legacy compat). A percentage for horizontal translations is relative to the width of the reference box. A percentage for vertical translations is relative to the height of the reference box.",
      "href": "https://drafts.csswg.org/css-transforms-1/#typedef-transform-function",
      "type": "type",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "name": "<transform-list>",
      "href": "https://drafts.csswg.org/css-transforms-1/#typedef-transform-list",
      "type": "type",
      "value": "<transform-function>+",
      "spec": {
        "shortname": "css-transforms",
        "currentSpec": true
      }
    },
    {
      "name": "<transition-behavior-value>",
      "value": "normal | allow-discrete",
      "href": "https://drafts.csswg.org/css-transitions-2/#typedef-transition-behavior-value",
      "type": "type",
      "spec": {
        "shortname": "css-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "<single-transition>",
      "value": "[ none | <single-transition-property> ] || <time> || <easing-function> || <time>",
      "href": "https://drafts.csswg.org/css-transitions-1/#single-transition",
      "type": "type",
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "<single-transition-property>",
      "value": "all | <custom-ident>",
      "href": "https://drafts.csswg.org/css-transitions-1/#single-transition-property",
      "type": "type",
      "spec": {
        "shortname": "css-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "<outline-line-style>",
      "prose": "<outline-line-style> accepts the same values as <line-style> (CSS Backgrounds 3 § 3.2 Line Patterns: the border-style properties) with the same meaning, except that hidden is not a legal outline style. In addition, the outline-style property accepts the value auto.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-outline-line-style",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "<id>",
      "prose": "The <id> value is an ID selector [SELECT]. In response to directional navigation input corresponding to the property, the focus is navigated to the first element in tree order matching the selector. If this refers to the currently focused element, the directional navigation input respective to the nav- property is ignored — there is no need to refocus the same element. If no element matches the selector, the user agent automatically determines which element to navigate the focus to. If the focus is navigated to an element that was not otherwise focusable, it becomes focusable only as the result of this directional navigation, and the :focus pseudo-class matches the element while it is focused as such.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-id",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "<target-name>",
      "prose": "The <target-name> parameter indicates the target frame for the focus navigation. It is a <string> and it MUST NOT start with the underscore \"_\" character. Error handling: if it does start with an underscore, \"_parent\" navigates to the parent frame, \"_root\" is treated as root, and other values navigate to a frame by that name if it exists. If the specified target frame does not exist, the parameter will be treated as the keyword current, which means to simply use the frame that the element is in. The keyword root indicates that the user agent should target the full window.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-target-name",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "for": "cursor",
      "name": "<url-set>",
      "prose": "<url-set> is a limited version of image-set(), where the <image> sub-production is restricted to <url> only.",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-cursor-url-set",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "for": "appearance",
      "name": "<compat-auto>",
      "value": "searchfield | textarea | checkbox | radio | menulist | listbox | meter | progress-bar | button",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-appearance-compat-auto",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "for": "appearance",
      "name": "<compat-special>",
      "value": "textfield | menulist-button",
      "href": "https://drafts.csswg.org/css-ui-4/#typedef-appearance-compat-special",
      "type": "type",
      "spec": {
        "shortname": "css-ui",
        "currentSpec": true
      }
    },
    {
      "name": "<boolean-expr>",
      "prose": "Several contexts (such as @media, @supports, if(), ...) specify conditions, and allow combining those conditions with boolean logic (and/or/not/grouping). Because they use the same non-trivial recursive syntax structure, the special <boolean-expr> production represents this pattern generically.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-boolean-expr",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<syntax>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax",
      "type": "type",
      "value": "'*' | <syntax-component> [ <syntax-combinator> <syntax-component> ]* | <syntax-string>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-component>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-component",
      "type": "type",
      "value": "<syntax-single-component> <syntax-multiplier>? | '<' transform-list '>'",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-single-component>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-single-component",
      "type": "type",
      "value": "'<' <syntax-type-name> '>' | <ident>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-type-name>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-type-name",
      "type": "type",
      "value": "angle | color | custom-ident | image | integer | length | length-percentage | number | percentage | resolution | string | time | url | transform-function",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-combinator>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-combinator",
      "type": "type",
      "value": "'|'",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-multiplier>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-multiplier",
      "type": "type",
      "value": "[ '#' | '+' ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<syntax-string>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-syntax-string",
      "type": "type",
      "value": "<string>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<request-url-modifier>",
      "prose": "<request-url-modifier>s are <url-modifier>s that affect the <url>’s resource request by applying associated URL request modifier steps. See CSS Values 4 § 4.5.4 URL Processing Model.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier",
      "type": "type",
      "value": "<crossorigin-modifier> | <integrity-modifier> | <referrerpolicy-modifier>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<position>",
      "prose": "The <position> value specifies the position of a object area (e.g. background image) inside a positioning area (e.g. background positioning area). It is computed and interpreted as specified for background-position. [CSS3-BACKGROUND]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-position",
      "type": "type",
      "value": "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right ] && [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<position-one>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-position-one",
      "type": "type",
      "value": "[ left | center | right | top | bottom | x-start | x-end | y-start | y-end | block-start | block-end | inline-start | inline-end | <length-percentage> ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<position-two>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-position-two",
      "type": "type",
      "value": "[ [ left | center | right | x-start | x-end ] && [ top | center | bottom | y-start | y-end ] | [ left | center | right | x-start | x-end | <length-percentage> ] [ top | center | bottom | y-start | y-end | <length-percentage> ] | [ block-start | center | block-end ] && [ inline-start | center | inline-end ] | [ start | center | end ]{2} ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<position-four>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-position-four",
      "type": "type",
      "value": "[ [ [ left | right | x-start | x-end ] <length-percentage> ] && [ [ top | bottom | y-start | y-end ] <length-percentage> ] | [ [ block-start | block-end ] <length-percentage> ] && [ [ inline-start | inline-end ] <length-percentage> ] | [ [ start | end ] <length-percentage> ]{2} ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<progress>",
      "prose": "The <progress> value type represents the mix progress value in a mix notation, and ultimately resolves to a percentage. It can, however, draw that percentage value from sources such as media queries and animation timelines, and can also convert it through an easing function before using it for interpolation.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-progress",
      "type": "type",
      "value": "[ <percentage-token> | <number> | <'animation-timeline'> ] && [ by <easing-function> ]?",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-branch>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-branch",
      "type": "type",
      "value": "<if-condition> : <declaration-value>?",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-condition>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-condition",
      "type": "type",
      "value": "<boolean-expr[ <if-test> ]> | else",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-test>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-test",
      "type": "type",
      "value": "supports( [ <ident> : <declaration-value> ] | <supports-condition> ) | media( <media-feature> | <media-condition> ) | style( <style-query> )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<if-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-args",
      "type": "type",
      "value": "if( [ <if-args-branch> ; ]* <if-args-branch> ;? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<if-args-branch>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-if-args-branch",
      "type": "type",
      "value": "<declaration-value> : <declaration-value>?",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<inherit-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-inherit-args",
      "type": "type",
      "value": "inherit( <declaration-value>, <declaration-value>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<attr-name>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-name",
      "type": "type",
      "value": "[ <ident-token>? '|' ]? <ident-token>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<attr-type>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-type",
      "type": "type",
      "value": "type( <syntax> ) | raw-string | <attr-unit>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<attr-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-args",
      "type": "type",
      "value": "attr( <declaration-value>, <declaration-value>? )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<attr-unit>",
      "prose": "The <attr-unit> production matches any identifier that is an ASCII case-insensitive match for the name of a CSS dimension unit, such as px, or the <delim-token> %. It is not expanded literally here, as the set of units expands over time.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-attr-unit",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<ident-arg>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-ident-arg",
      "type": "type",
      "value": "<string> | <integer> | <ident>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<random-value-sharing>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-random-value-sharing",
      "type": "type",
      "value": "[ [ auto | <dashed-ident> ] || element-shared ] | fixed <number [0,1]>",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<random-item-args>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-random-item-args",
      "type": "type",
      "value": "random-item( <declaration-value>, [ <declaration-value>? ]# )",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<calc-size-basis>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-calc-size-basis",
      "type": "type",
      "value": "[ <intrinsic-size-keyword> | <calc-size()> | any | <calc-sum> ]",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<intrinsic-size-keyword>",
      "prose": "The <intrinsic-size-keyword> production matches any intrinsic size keywords allowed in the context. For example, in width, it matches auto, min-content, stretch, etc.",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-intrinsic-size-keyword",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "<crossorigin-modifier>",
      "value": "crossorigin(anonymous | use-credentials)",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier-crossorigin-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "<integrity-modifier>",
      "value": "integrity(<string>)",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier-integrity-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "for": "<request-url-modifier>",
      "name": "<referrerpolicy-modifier>",
      "value": "referrerpolicy(no-referrer | no-referrer-when-downgrade | same-origin | origin | strict-origin | origin-when-cross-origin | strict-origin-when-cross-origin | unsafe-url)",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier-referrerpolicy-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values-5",
        "currentSpec": false
      }
    },
    {
      "name": "<ident>",
      "prose": "CSS identifiers, generically denoted by <ident>, consist of a sequence of characters conforming to the <ident-token> grammar. [CSS-SYNTAX-3] Identifiers cannot be quoted; otherwise they would be interpreted as strings. CSS properties accept two classes of identifiers: pre-defined keywords and author-defined identifiers.",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-ident",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<custom-ident>",
      "prose": "Some properties accept arbitrary author-defined identifiers as a component value. This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier that would not be misinterpreted as a pre-defined keyword in that property’s value definition. Such identifiers are fully case-sensitive (meaning they’re compared using the \"identical to\" operation), even in the ASCII range (e.g. example and EXAMPLE are two different, unrelated user-defined identifiers).",
      "href": "https://drafts.csswg.org/css-values-4/#identifier-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<dashed-ident>",
      "prose": "The <dashed-ident> production is a <custom-ident>, with all the case-sensitivity that implies, with the additional restriction that it must start with two dashes (U+002D HYPHEN-MINUS).",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-dashed-ident",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<string>",
      "prose": "Strings are denoted by <string>. When written literally, they consist of a sequence of characters delimited by double quotes or single quotes, corresponding to the <string-token> production in the CSS Syntax Module [CSS-SYNTAX-3].",
      "href": "https://drafts.csswg.org/css-values-4/#string-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<url>",
      "href": "https://drafts.csswg.org/css-values-4/#url-value",
      "type": "type",
      "value": "<url()> | <src()>",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<url-modifier>",
      "prose": "<url>s support specifying additional <url-modifier>s, which change the meaning or the interpretation of the URL somehow. A <url-modifier> is either an <ident> or a functional notation.",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-url-modifier",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<integer>",
      "prose": "Integer values are denoted by <integer>.",
      "href": "https://drafts.csswg.org/css-values-4/#integer-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<number>",
      "prose": "Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.",
      "href": "https://drafts.csswg.org/css-values-4/#number-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<zero>",
      "prose": "The value <zero> represents a literal number with the value 0. Expressions that merely evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>; only literal <number-token>s do.",
      "href": "https://drafts.csswg.org/css-values-4/#zero-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<dimension>",
      "prose": "The general term dimension refers to a number with a unit attached to it; and is denoted by <dimension>.",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-dimension",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<percentage>",
      "prose": "Percentage values are denoted by <percentage>, and indicates a value that is some fraction of another reference value.",
      "href": "https://drafts.csswg.org/css-values-4/#percentage-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<length-percentage>",
      "value": "[ <length> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-length-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<frequency-percentage>",
      "value": "[ <frequency> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-frequency-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<angle-percentage>",
      "value": "[ <angle> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-angle-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<time-percentage>",
      "value": "[ <time> | <percentage> ]",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-time-percentage",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<ratio>",
      "prose": "Ratio values are denoted by <ratio>, and represent the ratio of two numeric values. It most often represents an aspect ratio, relating a width (first) to a height (second).",
      "href": "https://drafts.csswg.org/css-values-4/#ratio-value",
      "type": "type",
      "value": "<number [0,∞]> [ / <number [0,∞]> ]?",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<length>",
      "prose": "Lengths refer to distance measurements and are denoted by <length> in the property definitions. A length is a dimension.",
      "href": "https://drafts.csswg.org/css-values-4/#length-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<angle>",
      "prose": "Angle values are <dimension>s denoted by <angle>. The angle unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#angle-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<time>",
      "prose": "Time values are dimensions denoted by <time>. The time unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#time-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<frequency>",
      "prose": "Frequency values are dimensions denoted by <frequency>. The frequency unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#frequency-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<resolution>",
      "prose": "Resolution units are dimensions denoted by <resolution>. The resolution unit identifiers are:",
      "href": "https://drafts.csswg.org/css-values-4/#resolution-value",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<rounding-strategy>",
      "prose": "If A is exactly equal to an integer multiple of B, round() resolves to A exactly (preserving whether A is 0⁻ or 0⁺, if relevant). Otherwise, there are two integer multiples of B that are potentially \"closest\" to A, lower B which is closer to −∞ and upper B which is closer to +∞. The following <rounding-strategy>s dictate how to choose between them:",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-rounding-strategy",
      "type": "type",
      "value": "nearest | up | down | to-zero",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-sum>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-sum",
      "type": "type",
      "value": "<calc-product> [ [ '+' | '-' ] <calc-product> ]*",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-product>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-product",
      "type": "type",
      "value": "<calc-value> [ [ '*' | / ] <calc-value> ]*",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-value>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-value",
      "type": "type",
      "value": "<number> | <dimension> | <percentage> | <calc-keyword> | ( <calc-sum> )",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<calc-keyword>",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-calc-keyword",
      "type": "type",
      "value": "e | pi | infinity | -infinity | NaN",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "<quirky-length>",
      "prose": "When CSS is being parsed in quirks mode, <quirky-length> is a type of <length> that is only valid in certain properties:",
      "href": "https://drafts.csswg.org/css-values-4/#typedef-quirky-length",
      "type": "type",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<custom-property-name>",
      "prose": "A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo. The <custom-property-name> production corresponds to this: it’s defined as any <dashed-ident> (a valid identifier that starts with two dashes), except -- itself, which is reserved for future use by CSS. Custom properties are solely for use by authors and users; CSS will never give them a meaning beyond what is presented here.",
      "href": "https://drafts.csswg.org/css-variables-2/#typedef-custom-property-name",
      "type": "type",
      "spec": {
        "shortname": "css-variables",
        "currentSpec": true
      }
    },
    {
      "name": "<var-args>",
      "href": "https://drafts.csswg.org/css-variables-2/#typedef-var-args",
      "type": "type",
      "value": "var( <declaration-value> , <declaration-value>? )",
      "spec": {
        "shortname": "css-variables",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<pt-name-and-class-selector>",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#typedef-pt-name-and-class-selector",
      "type": "type",
      "value": "<pt-name-selector> <pt-class-selector>? | <pt-class-selector>",
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      },
      "dangling": true
    },
    {
      "name": "<pt-class-selector>",
      "href": "https://drafts.csswg.org/css-view-transitions-2/#typedef-pt-class-selector",
      "type": "type",
      "value": "['.' <custom-ident>]+",
      "spec": {
        "shortname": "css-view-transitions-2",
        "currentSpec": false
      }
    },
    {
      "name": "<pt-name-selector>",
      "href": "https://drafts.csswg.org/css-view-transitions-1/#typedef-pt-name-selector",
      "type": "type",
      "value": "'*' | <custom-ident>",
      "spec": {
        "shortname": "css-view-transitions",
        "currentSpec": true
      }
    },
    {
      "name": "<animateable-feature>",
      "href": "https://drafts.csswg.org/css-will-change-1/#typedef-animateable-feature",
      "type": "type",
      "value": "scroll-position | contents | <custom-ident>",
      "spec": {
        "shortname": "css-will-change",
        "currentSpec": true
      }
    },
    {
      "name": "<identifier>",
      "href": "https://drafts.csswg.org/css2/#value-def-identifier",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<uri>",
      "prose": "URI values (Uniform Resource Identifiers, see [RFC3986], which includes URLs, URNs, etc) in this specification are denoted by <uri>. The functional notation used to designate URIs in property values is \"url()\", as in:",
      "href": "https://drafts.csswg.org/css2/#value-def-uri",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<margin-width>",
      "prose": "The properties defined in this section refer to the <margin-width> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-margin-width",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<padding-width>",
      "prose": "The properties defined in this section refer to the <padding-width> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-padding-width",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<border-width>",
      "prose": "The border width properties specify the width of the border area. The properties defined in this section refer to the <border-width> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-border-width",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<border-style>",
      "prose": "The border style properties specify the line style of a box’s border (solid, double, dashed, etc.). The properties defined in this section refer to the <border-style> value type, which may take one of the following values:",
      "href": "https://drafts.csswg.org/css2/#value-def-border-style",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<shape>",
      "prose": "In CSS 2, the only valid <shape> value is: rect(<top>, <right>, <bottom>, <left>) where <top> and <bottom> specify offsets from the top border edge of the box, and <right>, and <left> specify offsets from the left border edge of the box. Authors should separate offset values with commas. User agents must support separation with commas, but may also support separation without commas (but not a combination), because a previous revision of this specification was ambiguous in this respect. <top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box). When coordinates are rounded to pixel coordinates, care should be taken that no pixels remain visible when <left> and <right> have the same value (or <top> and <bottom> have the same value), and conversely that no pixels within the element’s border box remain hidden when these values are auto.",
      "href": "https://drafts.csswg.org/css2/#value-def-shape",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<top>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-top",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<right>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-right",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<bottom>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-bottom",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<left>",
      "prose": "<top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box).",
      "href": "https://drafts.csswg.org/css2/#value-def-left",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<absolute-size>",
      "href": "https://drafts.csswg.org/css2/#value-def-absolute-size",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<relative-size>",
      "href": "https://drafts.csswg.org/css2/#value-def-relative-size",
      "type": "type",
      "spec": {
        "shortname": "CSS",
        "currentSpec": true
      }
    },
    {
      "name": "<paint>",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#typedef-paint",
      "type": "type",
      "value": "none | <image> | <svg-paint>",
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "<svg-paint>",
      "href": "https://drafts.fxtf.org/fill-stroke-3/#typedef-svg-paint",
      "type": "type",
      "value": "child | child( <integer> )",
      "spec": {
        "shortname": "fill-stroke",
        "currentSpec": true
      }
    },
    {
      "name": "<filter-value-list>",
      "href": "https://drafts.fxtf.org/filter-effects-1/#typedef-filter-value-list",
      "type": "type",
      "value": "[ <filter-function> | <url> ]+",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "<filter-function>",
      "href": "https://drafts.fxtf.org/filter-effects-1/#typedef-filter-function",
      "type": "type",
      "value": "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      }
    },
    {
      "name": "<number-optional-number>",
      "value": "<number> <number>?",
      "href": "https://drafts.fxtf.org/filter-effects-1/#typedef-number-optional-number",
      "type": "type",
      "spec": {
        "shortname": "filter-effects",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<source-size-list>",
      "href": "https://html.spec.whatwg.org/multipage/images.html#source-size-list",
      "type": "type",
      "value": "<source-size>#? , <source-size-value>",
      "spec": {
        "shortname": "html",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<source-size>",
      "href": "https://html.spec.whatwg.org/multipage/images.html#source-size",
      "type": "type",
      "value": "<media-condition> <source-size-value> | auto",
      "spec": {
        "shortname": "html",
        "currentSpec": true
      }
    },
    {
      "name": "<source-size-value>",
      "href": "https://html.spec.whatwg.org/multipage/images.html#source-size-value",
      "type": "type",
      "value": "<length> | auto",
      "spec": {
        "shortname": "html",
        "currentSpec": true
      }
    },
    {
      "name": "<media-query-list>",
      "prose": "To parse a <media-query-list> production, parse a comma-separated list of component values, then parse each entry in the returned list as a <media-query>. Its value is the list of <media-query>s so produced.",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-query-list",
      "type": "type",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-query>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-query",
      "type": "type",
      "value": "<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<media-type>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-type",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-condition>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-condition",
      "type": "type",
      "value": "<media-not> | <media-in-parens> [ <media-and>* | <media-or>* ]",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-condition-without-or>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-condition-without-or",
      "type": "type",
      "value": "<media-not> | <media-in-parens> <media-and>*",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-not>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-not",
      "type": "type",
      "value": "not <media-in-parens>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-and>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-and",
      "type": "type",
      "value": "and <media-in-parens>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-or>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-or",
      "type": "type",
      "value": "or <media-in-parens>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-in-parens>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-in-parens",
      "type": "type",
      "value": "( <media-condition> ) | ( <media-feature> ) | <general-enclosed>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<media-feature>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-media-feature",
      "type": "type",
      "value": "[ <mf-plain> | <mf-boolean> | <mf-range> ]",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-plain>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-plain",
      "type": "type",
      "value": "<mf-name> : <mf-value>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-boolean>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-boolean",
      "type": "type",
      "value": "<mf-name>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-range>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-range",
      "type": "type",
      "value": "<mf-name> <mf-comparison> <mf-value> | <mf-value> <mf-comparison> <mf-name> | <mf-value> <mf-lt> <mf-name> <mf-lt> <mf-value> | <mf-value> <mf-gt> <mf-name> <mf-gt> <mf-value>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-name>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-name",
      "type": "type",
      "value": "<ident>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-value>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-value",
      "type": "type",
      "value": "<number> | <dimension> | <ident> | <ratio>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-lt>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-lt",
      "type": "type",
      "value": "'<' '='?",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-gt>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-gt",
      "type": "type",
      "value": "'>' '='?",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-eq>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-eq",
      "type": "type",
      "value": "'='",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mf-comparison>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mf-comparison",
      "type": "type",
      "value": "<mf-lt> | <mf-gt> | <mf-eq>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<general-enclosed>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-general-enclosed",
      "type": "type",
      "value": "[ <function-token> <any-value>? ) ] | [ ( <any-value>? ) ]",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      }
    },
    {
      "name": "<mq-boolean>",
      "href": "https://drafts.csswg.org/mediaqueries-4/#typedef-mq-boolean",
      "type": "type",
      "value": "<integer [0,1]>",
      "spec": {
        "shortname": "mediaqueries",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<offset-path>",
      "href": "https://drafts.fxtf.org/motion-1/#typedef-offset-path",
      "type": "type",
      "value": "<ray()> | <url> | <basic-shape>",
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "<ray-size>",
      "href": "https://drafts.fxtf.org/motion-1/#typedef-ray-size",
      "type": "type",
      "value": "closest-side | closest-corner | farthest-side | farthest-corner | sides",
      "spec": {
        "shortname": "motion",
        "currentSpec": true
      }
    },
    {
      "name": "<axis>",
      "href": "https://drafts.csswg.org/scroll-animations-1/#typedef-axis",
      "type": "type",
      "value": "block | inline | x | y",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<scroller>",
      "href": "https://drafts.csswg.org/scroll-animations-1/#typedef-scroller",
      "type": "type",
      "value": "root | nearest | self",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<timeline-range-name>",
      "prose": "A named timeline range is a named segment of an animation timeline. The start of the segment is represented as 0% progress through the range; the end of the segment is represented as 100% progress through the range. Multiple named timeline ranges can be associated with a given timeline, and multiple such ranges can overlap. For example, the contain range of a view progress timeline overlaps with its cover range. Named timeline ranges are represented by the <timeline-range-name> value type, which indicates a CSS identifier representing one of the predefined named timeline ranges.",
      "href": "https://drafts.csswg.org/scroll-animations-1/#typedef-timeline-range-name",
      "type": "type",
      "spec": {
        "shortname": "scroll-animations",
        "currentSpec": true
      }
    },
    {
      "name": "<selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-selector-list",
      "type": "type",
      "value": "<complex-selector-list>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-selector-list",
      "type": "type",
      "value": "<complex-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-real-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-real-selector-list",
      "type": "type",
      "value": "<complex-real-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<compound-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-compound-selector-list",
      "type": "type",
      "value": "<compound-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<simple-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-simple-selector-list",
      "type": "type",
      "value": "<simple-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<relative-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-selector-list",
      "type": "type",
      "value": "<relative-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<relative-real-selector-list>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-real-selector-list",
      "type": "type",
      "value": "<relative-real-selector>#",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<complex-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-selector",
      "type": "type",
      "value": "<complex-selector-unit> [ <combinator>? <complex-selector-unit> ]*",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-selector-unit>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-selector-unit",
      "type": "type",
      "value": "[ <compound-selector>? <pseudo-compound-selector>* ]!",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<complex-real-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-complex-real-selector",
      "type": "type",
      "value": "<compound-selector> [ <combinator>? <compound-selector> ]*",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<relative-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-selector",
      "type": "type",
      "value": "<combinator>? <complex-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<relative-real-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-relative-real-selector",
      "type": "type",
      "value": "<combinator>? <complex-real-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<compound-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-compound-selector",
      "type": "type",
      "value": "[ <type-selector>? <subclass-selector>* ]!",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-compound-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-pseudo-compound-selector",
      "type": "type",
      "value": "<pseudo-element-selector> <pseudo-class-selector>*",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<simple-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-simple-selector",
      "type": "type",
      "value": "<type-selector> | <subclass-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<combinator>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-combinator",
      "type": "type",
      "value": "'>' | '+' | '~' | [ '|' '|' ]",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<wq-name>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-wq-name",
      "type": "type",
      "value": "<ns-prefix>? <ident-token>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<ns-prefix>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-ns-prefix",
      "type": "type",
      "value": "[ <ident-token> | '*' ]? '|'",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<type-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-type-selector",
      "type": "type",
      "value": "<wq-name> | <ns-prefix>? '*'",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<subclass-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-subclass-selector",
      "type": "type",
      "value": "<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<id-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-id-selector",
      "type": "type",
      "value": "<hash-token>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<class-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-class-selector",
      "type": "type",
      "value": "'.' <ident-token>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<attribute-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-attribute-selector",
      "type": "type",
      "value": "'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<attr-matcher>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-attr-matcher",
      "type": "type",
      "value": "[ '~' | '|' | '^' | '$' | '*' ]? '='",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<attr-modifier>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-attr-modifier",
      "type": "type",
      "value": "i | s",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-class-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-pseudo-class-selector",
      "type": "type",
      "value": ": <ident-token> | : <function-token> <any-value> )",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<pseudo-element-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-pseudo-element-selector",
      "type": "type",
      "value": ": <pseudo-class-selector> | <legacy-pseudo-element-selector>",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<legacy-pseudo-element-selector>",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-legacy-pseudo-element-selector",
      "type": "type",
      "value": ": [before | after | first-line | first-letter]",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      }
    },
    {
      "name": "<forgiving-selector-list>",
      "prose": "The <forgiving-selector-list> production instead parses each selector in the list individually, simply ignoring ones that fail to parse, so the remaining selectors can still be used.",
      "href": "https://drafts.csswg.org/selectors-4/#typedef-forgiving-selector-list",
      "type": "type",
      "spec": {
        "shortname": "selectors",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<points>",
      "value": "[ <number>+ ]#",
      "href": "https://svgwg.org/svg2-draft/shapes.html#DataTypePoints",
      "type": "type",
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<dasharray>",
      "value": "[ [ <length-percentage> | <number> ]+ ]#",
      "href": "https://svgwg.org/svg2-draft/painting.html#DataTypeDasharray",
      "type": "type",
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      },
      "dangling": true
    },
    {
      "name": "<marker-ref>",
      "value": "<url>",
      "href": "https://svgwg.org/svg2-draft/painting.html#DataTypeMarkerRef",
      "type": "type",
      "spec": {
        "shortname": "SVG",
        "currentSpec": true
      }
    }
  ],
  "units": [
    {
      "name": "fr",
      "prose": "A flexible length or <flex> is a dimension with the fr unit, which represents a fraction of the leftover space in the grid container. Tracks sized with fr units are called flexible tracks as they flex in response to leftover space similar to how flex items with a zero base size fill space in a flex container.",
      "href": "https://drafts.csswg.org/css-grid-2/#valdef-flex-fr",
      "type": "value",
      "value": "fr",
      "spec": {
        "shortname": "css-grid",
        "currentSpec": true
      }
    },
    {
      "name": "em",
      "prose": "Equal to the computed value of the font-size property of the element on which it is used. The rule: h1 { line-height: 1.2em } means that the line height of h1 elements will be 20% greater than the font size of h1 element. On the other hand: h1 { font-size: 1.2em } means that the font size of h1 elements will be 20% greater than the computed font size inherited by h1 elements.",
      "href": "https://drafts.csswg.org/css-values-4/#em",
      "type": "value",
      "value": "em",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "rem",
      "prose": "Equal to the computed value of the em unit on the root element.",
      "href": "https://drafts.csswg.org/css-values-4/#rem",
      "type": "value",
      "value": "rem",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "ex",
      "prose": "Equal to the used x-height of the first available font [CSS3-FONTS]. The x-height is so called because it is often equal to the height of the lowercase \"x\". However, an ex is defined even for fonts that do not contain an \"x\". The x-height of a font can be found in different ways. Some fonts contain reliable metrics for the x-height. If reliable font metrics are not available, UAs may determine the x-height from the height of a lowercase glyph. One possible heuristic is to look at how far the glyph for the lowercase \"o\" extends below the baseline, and subtract that value from the top of its bounding box. In the cases where it is impossible or impractical to determine the x-height, a value of 0.5em must be assumed.",
      "href": "https://drafts.csswg.org/css-values-4/#ex",
      "type": "value",
      "value": "ex",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "rex",
      "prose": "Equal to the value of the ex unit on the root element.",
      "href": "https://drafts.csswg.org/css-values-4/#rex",
      "type": "value",
      "value": "rex",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "cap",
      "prose": "Equal to the used cap-height of the first available font [CSS3-FONTS]. The cap-height is so called because it is approximately equal to the height of a capital Latin letter. However, a cap is defined even for fonts that do not contain Latin letters. The cap-height of a font can be found in different ways. Some fonts contain reliable metrics for the cap-height. If reliable font metrics are not available, UAs may determine the cap-height from the height of an uppercase glyph. One possible heuristic is to look at how far the glyph for the uppercase “O” extends below the baseline, and subtract that value from the top of its bounding box. In the cases where it is impossible or impractical to determine the cap-height, the font’s ascent must be used.",
      "href": "https://drafts.csswg.org/css-values-4/#cap",
      "type": "value",
      "value": "cap",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "rcap",
      "prose": "Equal to the value of the cap unit on the root element.",
      "href": "https://drafts.csswg.org/css-values-4/#rcap",
      "type": "value",
      "value": "rcap",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "ch",
      "prose": "Represents the typical advance measure of European alphanumeric characters, and measured as the used advance measure of the “0” (ZERO, U+0030) glyph in the font used to render it. (The advance measure of a glyph is its advance width or height, whichever is in the inline axis of the element.) In the cases where it is impossible or impractical to determine the measure of the “0” glyph, it must be assumed to be 0.5em wide by 1em tall. Thus, the ch unit falls back to 0.5em in the general case, and to 1em when it would be typeset upright (i.e. writing-mode is vertical-rl or vertical-lr and text-orientation is upright).",
      "href": "https://drafts.csswg.org/css-values-4/#ch",
      "type": "value",
      "value": "ch",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "rch",
      "prose": "Equal to the value of the ch unit on the root element.",
      "href": "https://drafts.csswg.org/css-values-4/#rch",
      "type": "value",
      "value": "rch",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "ic",
      "prose": "Represents the typical advance measure of CJK letters, and measured as the used advance measure of the “水” (CJK water ideograph, U+6C34) glyph found in the font used to render it. In the cases where it is impossible or impractical to determine the ideographic advance measure, it must be assumed to be 1em.",
      "href": "https://drafts.csswg.org/css-values-4/#ic",
      "type": "value",
      "value": "ic",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "ric",
      "prose": "Equal to the value of the ic unit on the root element.",
      "href": "https://drafts.csswg.org/css-values-4/#ric",
      "type": "value",
      "value": "ric",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "lh",
      "prose": "Equal to the computed value of the line-height property of the element on which it is used, converting normal to an absolute length by using only the metrics of the first available font.",
      "href": "https://drafts.csswg.org/css-values-4/#lh",
      "type": "value",
      "value": "lh",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "rlh",
      "prose": "Equal to the value of the lh unit on the root element.",
      "href": "https://drafts.csswg.org/css-values-4/#rlh",
      "type": "value",
      "value": "rlh",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "vw",
      "prose": "Equal to 1% of the width of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively. In the example below, if the width of the viewport is 200mm, the font size of h1 elements will be 16mm (i.e. (8×200mm)/100). h1 { font-size: 8vw }",
      "href": "https://drafts.csswg.org/css-values-4/#vw",
      "type": "value",
      "value": "vw",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "svw",
      "prose": "Equal to 1% of the width of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively. In the example below, if the width of the viewport is 200mm, the font size of h1 elements will be 16mm (i.e. (8×200mm)/100). h1 { font-size: 8vw }",
      "href": "https://drafts.csswg.org/css-values-4/#svw",
      "type": "value",
      "value": "svw",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "lvw",
      "prose": "Equal to 1% of the width of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively. In the example below, if the width of the viewport is 200mm, the font size of h1 elements will be 16mm (i.e. (8×200mm)/100). h1 { font-size: 8vw }",
      "href": "https://drafts.csswg.org/css-values-4/#lvw",
      "type": "value",
      "value": "lvw",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dvw",
      "prose": "Equal to 1% of the width of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively. In the example below, if the width of the viewport is 200mm, the font size of h1 elements will be 16mm (i.e. (8×200mm)/100). h1 { font-size: 8vw }",
      "href": "https://drafts.csswg.org/css-values-4/#dvw",
      "type": "value",
      "value": "dvw",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "vh",
      "prose": "Equal to 1% of the height of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#vh",
      "type": "value",
      "value": "vh",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "svh",
      "prose": "Equal to 1% of the height of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#svh",
      "type": "value",
      "value": "svh",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "lvh",
      "prose": "Equal to 1% of the height of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#lvh",
      "type": "value",
      "value": "lvh",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dvh",
      "prose": "Equal to 1% of the height of the large viewport size, small viewport size, large viewport size, and dynamic viewport size, respectively.",
      "href": "https://drafts.csswg.org/css-values-4/#dvh",
      "type": "value",
      "value": "dvh",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "vi",
      "prose": "Equal to 1% of the size of the large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s inline axis.",
      "href": "https://drafts.csswg.org/css-values-4/#vi",
      "type": "value",
      "value": "vi",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "svi",
      "prose": "Equal to 1% of the size of the large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s inline axis.",
      "href": "https://drafts.csswg.org/css-values-4/#svi",
      "type": "value",
      "value": "svi",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "lvi",
      "prose": "Equal to 1% of the size of the large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s inline axis.",
      "href": "https://drafts.csswg.org/css-values-4/#lvi",
      "type": "value",
      "value": "lvi",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dvi",
      "prose": "Equal to 1% of the size of the large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s inline axis.",
      "href": "https://drafts.csswg.org/css-values-4/#dvi",
      "type": "value",
      "value": "dvi",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "vb",
      "prose": "Equal to 1% of the size of the initial containing block large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s block axis.",
      "href": "https://drafts.csswg.org/css-values-4/#vb",
      "type": "value",
      "value": "vb",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "svb",
      "prose": "Equal to 1% of the size of the initial containing block large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s block axis.",
      "href": "https://drafts.csswg.org/css-values-4/#svb",
      "type": "value",
      "value": "svb",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "lvb",
      "prose": "Equal to 1% of the size of the initial containing block large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s block axis.",
      "href": "https://drafts.csswg.org/css-values-4/#lvb",
      "type": "value",
      "value": "lvb",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dvb",
      "prose": "Equal to 1% of the size of the initial containing block large viewport size, small viewport size, large viewport size, and dynamic viewport size (respectively) in the box’s block axis.",
      "href": "https://drafts.csswg.org/css-values-4/#dvb",
      "type": "value",
      "value": "dvb",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "vmin",
      "prose": "Equal to the smaller of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#vmin",
      "type": "value",
      "value": "vmin",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "svmin",
      "prose": "Equal to the smaller of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#svmin",
      "type": "value",
      "value": "svmin",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "lvmin",
      "prose": "Equal to the smaller of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#lvmin",
      "type": "value",
      "value": "lvmin",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dvmin",
      "prose": "Equal to the smaller of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#dvmin",
      "type": "value",
      "value": "dvmin",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "vmax",
      "prose": "Equal to the larger of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#vmax",
      "type": "value",
      "value": "vmax",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "svmax",
      "prose": "Equal to the larger of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#svmax",
      "type": "value",
      "value": "svmax",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "lvmax",
      "prose": "Equal to the larger of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#lvmax",
      "type": "value",
      "value": "lvmax",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dvmax",
      "prose": "Equal to the larger of *vw or *vh.",
      "href": "https://drafts.csswg.org/css-values-4/#dvmax",
      "type": "value",
      "value": "dvmax",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "cm",
      "href": "https://drafts.csswg.org/css-values-4/#cm",
      "type": "value",
      "value": "cm",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "mm",
      "href": "https://drafts.csswg.org/css-values-4/#mm",
      "type": "value",
      "value": "mm",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "Q",
      "href": "https://drafts.csswg.org/css-values-4/#Q",
      "type": "value",
      "value": "Q",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "in",
      "href": "https://drafts.csswg.org/css-values-4/#in",
      "type": "value",
      "value": "in",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "pc",
      "href": "https://drafts.csswg.org/css-values-4/#pc",
      "type": "value",
      "value": "pc",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "pt",
      "href": "https://drafts.csswg.org/css-values-4/#pt",
      "type": "value",
      "value": "pt",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "px",
      "href": "https://drafts.csswg.org/css-values-4/#px",
      "type": "value",
      "value": "px",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "deg",
      "prose": "Degrees. There are 360 degrees in a full circle.",
      "href": "https://drafts.csswg.org/css-values-4/#deg",
      "type": "value",
      "value": "deg",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "grad",
      "prose": "Gradians, also known as \"gons\" or \"grades\". There are 400 gradians in a full circle.",
      "href": "https://drafts.csswg.org/css-values-4/#grad",
      "type": "value",
      "value": "grad",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "rad",
      "prose": "Radians. There are 2π radians in a full circle.",
      "href": "https://drafts.csswg.org/css-values-4/#rad",
      "type": "value",
      "value": "rad",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "turn",
      "prose": "Turns. There is 1 turn in a full circle.",
      "href": "https://drafts.csswg.org/css-values-4/#turn",
      "type": "value",
      "value": "turn",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "s",
      "prose": "Seconds.",
      "href": "https://drafts.csswg.org/css-values-4/#s",
      "type": "value",
      "value": "s",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "ms",
      "prose": "Milliseconds. There are 1000 milliseconds in a second.",
      "href": "https://drafts.csswg.org/css-values-4/#ms",
      "type": "value",
      "value": "ms",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "Hz",
      "prose": "Hertz. It represents the number of occurrences per second.",
      "href": "https://drafts.csswg.org/css-values-4/#Hz",
      "type": "value",
      "value": "Hz",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "kHz",
      "prose": "KiloHertz. A kiloHertz is 1000 Hertz.",
      "href": "https://drafts.csswg.org/css-values-4/#kHz",
      "type": "value",
      "value": "kHz",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dpi",
      "prose": "Dots per inch.",
      "href": "https://drafts.csswg.org/css-values-4/#dpi",
      "type": "value",
      "value": "dpi",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dpcm",
      "prose": "Dots per centimeter.",
      "href": "https://drafts.csswg.org/css-values-4/#dpcm",
      "type": "value",
      "value": "dpcm",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "dppx",
      "prose": "Dots per px unit.",
      "href": "https://drafts.csswg.org/css-values-4/#dppx",
      "type": "value",
      "value": "dppx",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    },
    {
      "name": "x",
      "prose": "Dots per px unit.",
      "href": "https://drafts.csswg.org/css-values-4/#x",
      "type": "value",
      "value": "x",
      "spec": {
        "shortname": "css-values",
        "currentSpec": true
      }
    }
  ]
}